Count,Status,Service,Message
"≈320K","info","ix-virtual-load-tester","[Accepting [wildcard]*[/wildcard] interaction, agent:[wildcard]*[/wildcard]@[wildcard]*[/wildcard][READY], channel [wildcard]*[/wildcard], interactionType: CALLED engagementId: [wildcard]*[/wildcard], interactionId: [wildcard]*[/wildcard], dialogId [wildcard]*[/wildcard]]"
"≈320K","info","ix-virtual-load-tester","[Delete interactionID: [wildcard]*[/wildcard], messageId: [wildcard]*[/wildcard] for[wildcard]*[/wildcard]@[wildcard]*[/wildcard], current activeCard count: [wildcard][0-2][/wildcard]]"
"≈250K","info","ix-virtual-load-tester","[New interaction. State: ALERTING. Transfer type: NONE, agent:[wildcard]*[/wildcard]@[wildcard]*[/wildcard][[wildcard]*[/wildcard]], channel [wildcard]*[/wildcard], interactionType: [wildcard]*[/wildcard] engagementId: [wildcard]*[/wildcard], interactionId: [wildcard]*[/wildcard], dialogId [wildcard]*[/wildcard]]"
"≈250K","info","user-service","AccountId [wildcard]*[/wildcard], waiting for jobId [wildcard]*[/wildcard] to be completed, inprogressUserCount [wildcard][0-4][/wildcard] sleepTime [wildcard][0-4000][/wildcard]"
"≈230K","info","vrc-availability-service","messageReceived, received [wildcard]*[/wildcard] [wildcard]*[/wildcard] [wildcard]*[/wildcard] event value=[{""timestamp"": ""[wildcard]yyyy-MM-ddTHH:mm:ss.SSSXXX[/wildcard]"", ""agentId"": ""[wildcard]*[/wildcard]"", ""accountId"": ""[wildcard]*[/wildcard]""}][wildcard]*[/wildcard]"
"≈210K","info","ix-virtual-load-tester","[Received [wildcard]*[/wildcard], will reply with text, agent:[wildcard]*[/wildcard]@[wildcard]*[/wildcard][READY], channel [wildcard]*[/wildcard], interactionType: [wildcard]*[/wildcard] engagementId: [wildcard]*[/wildcard], interactionId: [wildcard]*[/wildcard], dialogId [wildcard]*[/wildcard]]"
"≈190K","info","vrc-metrics-service","consumePumpupRecords, [wildcard]*[/wildcard] message current record offset [wildcard][287-185708][/wildcard]"
"≈190K","info","ix-virtual-load-tester","[Successfully called UC3 connect callback, status: 200, agent:[wildcard]*[/wildcard]@[wildcard]*[/wildcard][READY], channel VOICE, interactionType: CALLED engagementId: [wildcard]*[/wildcard], interactionId: [wildcard]*[/wildcard], dialogId [wildcard]*[/wildcard]]"
"≈190K","info","ix-virtual-load-tester","[ACW detected, but ACW handling is disabled., agent:[wildcard]*[/wildcard]@[wildcard]*[/wildcard][[wildcard]*[/wildcard]], channel VOICE, interactionType: CALLED engagementId: [wildcard]*[/wildcard], interactionId: [wildcard]*[/wildcard], dialogId [wildcard]*[/wildcard]]"
"≈190K","info","ix-virtual-load-tester","[VOICE interaction to be ended by agent after [wildcard][300-480][/wildcard]s, agent:[wildcard]*[/wildcard]@[wildcard]*[/wildcard][READY], channel VOICE, interactionType: CALLED engagementId: [wildcard]*[/wildcard], interactionId: [wildcard]*[/wildcard], dialogId [wildcard]*[/wildcard]]"
"≈160K","warn","ix-virtual-load-tester","[All channel resource states for agent:[wildcard]*[/wildcard]@[wildcard]*[/wildcard]are NOT in a READY state, agent SDK state: READY, {VOICE=AFTER_CONTACT_WORK}]"
"≈160K","info","vrc-rona-service","consumeRecords, Notifying message listeners of [[wildcard]*[/wildcard]] event, topic: [[wildcard]*[/wildcard]], offset:[[wildcard][197-63835][/wildcard]], key: [[wildcard]*[/wildcard]], value: [wildcard]*[/wildcard]"
"≈150K","info","ix-virtual-load-tester","[Ending interaction is CANCELLED because interaction no longer exists, agent:[wildcard]*[/wildcard]@[wildcard]*[/wildcard][READY], channel VOICE, interactionType: CALLED engagementId: [wildcard]*[/wildcard], interactionId: [wildcard]*[/wildcard], dialogId [wildcard]*[/wildcard]]"
"≈140K","info","ix-virtual-load-tester","[Ending [wildcard]*[/wildcard] interaction, agent:[wildcard]*[/wildcard]@[wildcard]*[/wildcard][[wildcard]*[/wildcard]], channel [wildcard]*[/wildcard], interactionType: [wildcard]*[/wildcard] engagementId: [wildcard]*[/wildcard], interactionId: [wildcard]*[/wildcard], dialogId [wildcard]*[/wildcard]]"
"≈130K","info","vrc-metrics-service","methodName:processAgentDeletedEvent - Received AgentDeletedEvent: {""timestamp"": ""[wildcard]*[/wildcard]"", ""agentId"": ""[wildcard]*[/wildcard]"", ""accountId"": ""[wildcard]*[/wildcard]""}"
"≈120K","info","vrc-agent-service","deleteAdminAgent, removed the AdminAgent from cache [null]"
"≈120K","info","ix-virtual-load-tester","[Replying with MESSAGING message, agent:[wildcard]*[/wildcard]@[wildcard]*[/wildcard][READY], channel MESSAGING, interactionType: [wildcard]*[/wildcard] engagementId: [wildcard]*[/wildcard], interactionId: [wildcard]*[/wildcard], dialogId [wildcard]*[/wildcard]]"
"≈120K","warn","vrc-metrics-service","methodName:processAgentDeletedEvent - Agent [wildcard]*[/wildcard] not found in admin cache, no further processing"
"≈120K","info","vrc-agent-service","consumeRecords, Notifying message listeners of [[wildcard]*[/wildcard]] event, topic: [[wildcard]*[/wildcard]], offset:[[wildcard][249-63639][/wildcard]], key: [[wildcard]*[/wildcard]], value: [wildcard]*[/wildcard]"
"≈120K","info","ix-virtual-load-tester","[Sending WEBCHAT message, agent:[wildcard]*[/wildcard]@[wildcard]*[/wildcard][READY], channel WEBCHAT, interactionType: [wildcard]*[/wildcard] engagementId: [wildcard]*[/wildcard], interactionId: [wildcard]*[/wildcard], dialogId [wildcard]*[/wildcard]]"
"≈110K","info","ix-virtual-load-tester","[media.sendRichMedia for MESSAGING invoked from agent with payload: '{""asyncMessageInfo"":{""message"":{""text"":""[wildcard]*[/wildcard] [wildcard]*[/wildcard] [wildcard]*[/wildcard] [wildcard]*[/wildcard] [wildcard]*[/wildcard] [wildcard]*[/wildcard][wildcard]*[/wildcard]""}}}', agent:[wildcard]*[/wildcard]@[wildcard]*[/wildcard][READY], channel MESSAGING, interactionType: [wildcard]*[/wildcard] engagementId: [wildcard]*[/wildcard], interactionId: [wildcard]*[/wildcard], dialogId [wildcard]*[/wildcard]]"
"≈100K","info","vrc-availability-service","consumeRecords, Notifying message listeners of [AgentDeleted] event, topic: [[wildcard]*[/wildcard]], offset:[[wildcard][243-64666][/wildcard]], key: [[wildcard]*[/wildcard]], value: {""timestamp"": ""[wildcard]yyyy-MM-ddTHH:mm:ss.SSSXXX[/wildcard]"", ""agentId"": ""[wildcard]*[/wildcard]"", ""accountId"": ""[wildcard]*[/wildcard]""}"
"≈100K","info","ix-virtual-load-tester","[Receiving data of screen pops configured, interactionChannel: [wildcard]*[/wildcard]]"
"≈100K","info","ix-virtual-load-tester","[media.send message invoked with payload: '[wildcard]*[/wildcard] [wildcard]*[/wildcard] [wildcard]*[/wildcard] [wildcard]*[/wildcard] [wildcard]*[/wildcard] [wildcard]*[/wildcard] [wildcard]*[/wildcard][wildcard]*[/wildcard]', agent:[wildcard]*[/wildcard]@[wildcard]*[/wildcard][READY], channel WEBCHAT, interactionType: [wildcard]*[/wildcard] engagementId: [wildcard]*[/wildcard], interactionId: [wildcard]*[/wildcard], dialogId [wildcard]*[/wildcard]]"
"≈100K","warn","vrc-rona-service","Invalid value as ReasonCode {""timestamp"": ""[wildcard]yyyy-MM-ddTHH:mm:ss.SSSXXX[/wildcard]"", ""agentId"": ""[wildcard]*[/wildcard]"", ""accountId"": ""[wildcard]*[/wildcard]""} in the ConsumerRecord"
"≈100K","info","outbound-contacts-api","[wildcard]yyyy-MM-dd HH:mm:ss.SSS[/wildcard] [INFO ] [[wildcard]*[/wildcard]] com.avaya.outbound.contact.api.controller.ContactController -- getContactsCountByName -- Account Id: GZJLCF - Contacts count of: [wildcard]*[/wildcard] ContactList fetched successfully."
"≈80K","info","ix-virtual-load-tester","[Choose random disposition code for agent:[wildcard]*[/wildcard]@[wildcard]*[/wildcard], interaction-id: [wildcard]*[/wildcard]]"
"≈80K","info","outbound-contacts-api","[wildcard]yyyy-MM-dd HH:mm:ss.SSS[/wildcard] [INFO ] [[wildcard]*[/wildcard]] com.avaya.outbound.contact.api.controller.ContactController -- getContactsCountByName -- Account Id: GZJLCF - Request to get the contacts count of: [wildcard]*[/wildcard] ContactList."
"≈70K","info","kafka","[[wildcard]yyyy-MM-dd HH:mm:ss,SSS[/wildcard]] INFO [UnifiedLog partition=[wildcard]*[/wildcard], dir=/srv/kafka] Incremented log start offset to [wildcard][550521-1319135350][/wildcard] due to leader offset increment (kafka.log.UnifiedLog)"
"≈60K","info","ix-virtual-load-tester","[Random DispositionCode '[wildcard][00103-00116][/wildcard]' selected for interaction-id: [wildcard]*[/wildcard],for agent:[wildcard]*[/wildcard]@[wildcard]*[/wildcard]]"
"≈60K","info","ix-virtual-load-tester","[Received [wildcard]*[/wildcard] ###BYE###, agent:[wildcard]*[/wildcard]@[wildcard]*[/wildcard][READY], channel [wildcard]*[/wildcard], interactionType: [wildcard]*[/wildcard] engagementId: [wildcard]*[/wildcard], interactionId: [wildcard]*[/wildcard], dialogId [wildcard]*[/wildcard]]"
"≈60K","info","kafka","[[wildcard]yyyy-MM-dd HH:mm:ss,SSS[/wildcard]] INFO [UnifiedLog partition=[wildcard]*[/wildcard], dir=/srv/kafka] Incremented log start offset to [wildcard][1930552-1319173824][/wildcard] due to client delete records request (kafka.log.UnifiedLog)"
"≈60K","info","vrc-metrics-service","methodName:updateAgent - Update Agent - Message received: UpdateAgentMessage(adminAgentEntry=AdminAgent(id=[wildcard]*[/wildcard], tenantId=[wildcard]*[/wildcard], attributes=Attributes(attributeList=[channel.[wildcard]*[/wildcard][wildcard]*[/wildcard]]), channels=[[wildcard]*[/wildcard][wildcard]*[/wildcard]], previousChannels=[[wildcard]*[/wildcard]]))"
"≈60K","error","outbound-contacts-api","at reactor.core.publisher.[wildcard]*[/wildcard]$[wildcard]*[/wildcard].[wildcard]*[/wildcard]([wildcard]*[/wildcard].java:[wildcard][70-2215][/wildcard])"
"≈50K","info","vrc-metrics-service","methodName:processSubscribedService - commandId:[wildcard]*[/wildcard] - Agent map is empty, no further processing"
"≈50K","ok","tomcat","[wildcard]10.201.64.XXX[/wildcard] - - [[wildcard]dd/MMM/yyyy:HH:mm:ss xx[/wildcard]] ""POST /axis2/services/OAMService HTTP/1.1"" 200 [wildcard][308-727][/wildcard]"
"≈50K","info","vrc-metrics-service","methodName:processCahcedAgents - Check for agentId [wildcard]*[/wildcard] in admin cache returned: null"
"≈40K","info","customer-journey-etl","Identifiers Cache - Finished poll request of administered identifiers. (identifiersTraceId=[wildcard]*[/wildcard])"
"≈40K","info","outbound-campaigns-actors","[wildcard]yyyy-MM-dd HH:mm:ss.SSS[/wildcard] [INFO ] [[wildcard]*[/wildcard]] com.avaya.outbound.campaign.actors.connector.CPaaSSimulatorConnector -- sendSMS -- SMS status from CPaaS connector: queued. Disposition code received: Sent_To_Provider and platform session id: [wildcard]*[/wildcard]"
"≈40K","info","customer-journey-etl","Identifiers Cache - Starting polling cycle for administered identifier updates... (identifiersTraceId=[wildcard]*[/wildcard])"
"≈40K","info","journey-service","WidgetSettings cache updater - starting run... (runNumber='[wildcard][49-181409][/wildcard]', successfulRuns=[wildcard][48-181408][/wildcard], failedRuns= 0, cacheManager='org.springframework.cache.concurrent.ConcurrentMapCacheManager@[wildcard]*[/wildcard]')"
"≈40K","info","outbound-contacts-api","[wildcard]yyyy-MM-dd HH:mm:ss.SSS[/wildcard] [INFO ] [[wildcard]*[/wildcard]] com.avaya.outbound.contact.api.controller.ContactListInternalController -- getStatusForContactList -- Status for contact list id: [wildcard]*[/wildcard] [wildcard]*[/wildcard] fetched successfully for accountId: GZJLCF"
"≈40K","info","customer-journey-etl","Identifiers Cache - Starting poll request of administered identifiers. (from=[wildcard]yyyy-MM-ddTHH:mm:ss.SSSSSSSSSXXX[/wildcard], to=[wildcard]yyyy-MM-ddTHH:mm:ss.SSSSSSSSSXXX[/wildcard], identifiersTraceId=[wildcard]*[/wildcard])"
"≈40K","info","vrc-metrics-aggregator-service","processSpan#1, operationName=[wildcard]*[/wildcard]"
"≈30K","info","ix-virtual-load-tester","[Replying with EMAIL; clearInteraction: false, agent:[wildcard]*[/wildcard]@[wildcard]*[/wildcard][READY], channel EMAIL, interactionType: CALLED engagementId: [wildcard]*[/wildcard], interactionId: [wildcard]*[/wildcard], dialogId [wildcard]*[/wildcard]]"
"≈30K","info","journey-service","Search returned: [wildcard][0-1583][/wildcard] hits"
"≈30K","info","vrc-metrics-service","methodName:updateAgent - Agent [wildcard]*[/wildcard] entry is missing from agentMap, can't update an agent with no previous state, adding new agent to agentMap: AgentEntry(id=[wildcard]*[/wildcard], tenantId=[wildcard]*[/wildcard], attributes=Attributes(attributeList=[channel.[wildcard]*[/wildcard][wildcard]*[/wildcard]]), activeServiceSet=[], channels=[[wildcard]*[/wildcard]], previousChannels=[], channelToStateMap={[wildcard]*[/wildcard]=LOGGED_OUT}, channelToAuxStateMap={[wildcard]*[/wildcard]=AUX_STATE_READY}, writeCounter=0, readCounter=0, taskId=0)"
"≈30K","info","ix-dsk-connector","consumeRecords, Notifying message listeners of [[wildcard]*[/wildcard]] event, topic: [[wildcard]*[/wildcard]], offset:[[wildcard][198-471120][/wildcard]], key: [[wildcard]*[/wildcard][wildcard]*[/wildcard]], value: [wildcard]*[/wildcard]"
"≈30K","info","ix-virtual-load-tester","[Received EMAIL, agent:[wildcard]*[/wildcard]@[wildcard]*[/wildcard][READY], channel EMAIL, interactionType: CALLED engagementId: [wildcard]*[/wildcard], interactionId: [wildcard]*[/wildcard], dialogId [wildcard]*[/wildcard]]"
"≈30K","info","analytics-itd-consolidator","MetricsByQueueEventHandlerImpl.sendEvent(): Consolidated event with key '[wildcard]*[/wildcard]' has been sent to topic 'analytics.itd.queuebychannel.consolidated' with timestamp '[wildcard][1710136800000-1710139500000][/wildcard]'"
"≈30K","info","vrc-metrics-aggregator-service","getQueueMetrics, [MXWZHQ|[wildcard]*[/wildcard]|[wildcard]*[/wildcard]|] read QueueMetric:QueueMetric{accountId='MXWZHQ', queueId='[wildcard]*[/wildcard]', channelId='[wildcard]*[/wildcard]', attributes=null, isUpdated=true, engagementCountersByPriority={}, agentCounters=AgentCounters{resourceStaffedCount={0a498445-887e-4f00-b8c7-adaa69e12423=0[wildcard]*[/wildcard]}, resourceBusyCount={0a498445-887e-4f00-b8c7-adaa69e12423=0[wildcard]*[/wildcard]}, resourceReadyCount={0a498445-887e-4f00-b8c7-adaa69e12423=0[wildcard]*[/wildcard]}, queueOccupancy={0a498445-887e-4f00-b8c7-adaa69e12423=0[wildcard]*[/wildcard]}}, lastUpdatedTimestamp=0}, timeTaken=[[wildcard][0-5][/wildcard]]ms"
"≈30K","info","media-store","Event received on topic: account.avro, key: [wildcard]*[/wildcard], Headers: RecordHeaders(headers = [RecordHeader(key = avaya_kafka_writeOperation, value = [[wildcard][67-85][/wildcard], [wildcard][80-82][/wildcard], [wildcard][68-69][/wildcard], 65, 84, 69, 68]), RecordHeader(key = x-datadog-trace-id, value = [[wildcard][49-56][/wildcard], [wildcard][49-56][/wildcard], [wildcard]*[/wildcard][wildcard][48-49][/wildcard]])], isReadOnly = false)"
"≈30K","info","ix-dsk-request-service","Unsubscribing from gRPC stream for [wildcard]*[/wildcard]"
"≈30K","info","vrc-rona-service","consumeRecords, Notifying message listeners of [ReasonCode] event, topic: [[wildcard]*[/wildcard]], offset:[[wildcard][12-1789][/wildcard]], key: [[wildcard]*[/wildcard]], value: {""codeName"": ""[wildcard]*[/wildcard][wildcard]*[/wildcard]"", ""codeType"": ""NOT_READY"", ""codeNumber"": ""[wildcard][001-107][/wildcard]"", ""codeId"": ""[wildcard]*[/wildcard]"", ""description"": ""[wildcard]*[/wildcard]"", ""systemDefined"": [wildcard]*[/wildcard], ""systemUse"": [wildcard]*[/wildcard], ""accountId"": ""[wildcard]*[/wildcard]"", ""timestamp"": ""[wildcard]yyyy-MM-ddTHH:mm:ss.SSSXXX[/wildcard]""}"
"≈30K","info","ix-dsk-request-service","Resubscribing gRPC stream for [wildcard]*[/wildcard]"
"≈30K","info","vrc-metrics-aggregator-service","processSpan#2, operationName=MetricsProcessor taskId==[[wildcard]*[/wildcard]], topic=[staging-metrics-by-queue], processing [QueueAgentMetrics] Event, key=[[wildcard]*[/wildcard]], value=[{""accountId"": ""MXWZHQ"", ""queueId"": ""[wildcard]*[/wildcard]"", ""channelId"": ""[wildcard]*[/wildcard]"", ""attributeKey"": null, ""agentStaffedCount"": ""0"", ""agentBusyCount"": ""0"", ""agentReadyCount"": ""0"", ""agentInAuxCount"": ""0"", ""queueOccupancy"": ""0"", ""instanceId"": ""[wildcard]*[/wildcard]"", ""id"": ""[wildcard]*[/wildcard]"", ""timestamp"": [wildcard][1709843056482-1710137829177][/wildcard]}]"
"≈30K","info","outbound-contacts-api","[wildcard]yyyy-MM-dd HH:mm:ss.SSS[/wildcard] [INFO ] [[wildcard]*[/wildcard]] com.avaya.outbound.contact.api.controller.ContactController -- getContactsCount -- Account Id: [wildcard]*[/wildcard] - Contacts count of contact list id: [wildcard]*[/wildcard] fetched successfully."
"≈30K","info","vrc-metrics-service","methodName:updateAgent - oldAgentState:null newAgentState:AgentEntry(id=[wildcard]*[/wildcard], tenantId=[wildcard]*[/wildcard], attributes=Attributes(attributeList=[channel.[wildcard]*[/wildcard][wildcard]*[/wildcard]]), activeServiceSet=[], channels=[[wildcard]*[/wildcard]], previousChannels=[], channelToStateMap={[wildcard]*[/wildcard]=LOGGED_OUT}, channelToAuxStateMap={[wildcard]*[/wildcard]=AUX_STATE_READY}, writeCounter=0, readCounter=0, taskId=0)"
"≈30K","info","ix-virtual-load-tester","[Email reply sent, agent:[wildcard]*[/wildcard]@[wildcard]*[/wildcard][READY], channel EMAIL, interactionType: CALLED engagementId: [wildcard]*[/wildcard], interactionId: [wildcard]*[/wildcard], dialogId [wildcard]*[/wildcard]]"
"≈30K","info","vrc-metrics-aggregator-service","publish publishing Metrics for topic: metrics-by-queue and queueId: [wildcard]*[/wildcard] metrics: {""accountId"": ""MXWZHQ"", ""queueId"": ""[wildcard]*[/wildcard]"", ""channelId"": ""[wildcard]*[/wildcard]"", ""attributeKey"": null, ""metrics"": [{""metricName"": ""rollingASA"", ""metricValue"": ""[wildcard][0.000000-10.666667][/wildcard]""}, {""metricName"": ""oldestEngagementWaiting"", ""metricValue"": ""0""}, {""metricName"": ""agentStaffedCount"", ""metricValue"": ""0""}, {""metricName"": ""queueOccupancy"", ""metricValue"": ""0""}, {""metricName"": ""processingEngagementCount"", ""metricValue"": ""0""}, {""metricName"": ""completedEngagementCount"", ""metricValue"": ""[wildcard][0-15][/wildcard]""}, {""metricName"": ""oldestSpecializedEngagementWaitingTimestamp"", ""metricValue"": ""0""}, {""metricName"": ""waitingEngagementCount"", ""metricValue"": ""0""}, {""metricName"": ""agentBusyCount"", ""metricValue"": ""0""}, {""metricName"": ""processingSpecializedEngagementCount"", ""metricValue"": ""0""}, {""metricName"": ""oldestSpecializedEngagementWaiting"", ""metricValue"": ""0""}, {""metricName"": ""oldestEngagementWaitingTimestamp"", ""metricValue"": ""0""}, {""metricName"": ""expectedWaitTime"", ""metricValue"": ""999999""}, {""metricName"": ""completedSpecializedEngagementCount"", ""metricValue"": ""[wildcard][0-15][/wildcard]""}, {""metricName"": ""waitingSpecializedEngagementCount"", ""metricValue"": ""0""}, {""metricName"": ""agentReadyCount"", ""metricValue"": ""0""}], ""id"": ""[wildcard]*[/wildcard]"", ""timestamp"": [wildcard][1710137049099-1710140411153][/wildcard]}"
"≈30K","info","cbs-adapter","setupRestTemplate() : SSL [wildcard]*[/wildcard] [wildcard]*[/wildcard]"
"≈30K","info","journey-service","WidgetSettings cache updated ([wildcard][3-289][/wildcard]) configs. (runNumber='[wildcard][8-119053][/wildcard]')"
"≈30K","info","analytics-passthrough-proc","sendMeasureOutput(): Output has been sent for measure '[wildcard]*[/wildcard]' with key '[wildcard]*[/wildcard]' to topic 'analytics.dm.[wildcard]*[/wildcard].[wildcard]*[/wildcard]' and headers[RecordHeaders(headers = [RecordHeader(key = unique_id, value = [[wildcard][48-102][/wildcard], [wildcard][48-102][/wildcard], [wildcard][48-102][/wildcard], [wildcard][52-102][/wildcard], [wildcard][49-102][/wildcard], [wildcard][48-102][/wildcard], [wildcard][49-102][/wildcard], [wildcard][49-102][/wildcard], 45, [wildcard][48-102][/wildcard], [wildcard][48-102][/wildcard], [wildcard][48-102][/wildcard], [wildcard][48-102][/wildcard], 45, 52, [wildcard][50-102][/wildcard], [wildcard][48-100][/wildcard], [wildcard][48-102][/wildcard], 45, [wildcard][56-98][/wildcard], [wildcard][48-102][/wildcard], [wildcard][49-101][/wildcard], [wildcard][48-102][/wildcard], 45, [wildcard][48-101][/wildcard], [wildcard][48-102][/wildcard], [wildcard][48-102][/wildcard], [wildcard][48-102][/wildcard], [wildcard][48-102][/wildcard], [wildcard][48-102][/wildcard], [wildcard][48-102][/wildcard], [wildcard][48-102][/wildcard], [wildcard][48-102][/wildcard], [wildcard][48-101][/wildcard], [wildcard][48-101][/wildcard], [wildcard][48-102][/wildcard]]), RecordHeader(key = account_id, value = [[wildcard][65-87][/wildcard], [wildcard][69-89][/wildcard], [wildcard][67-90][/wildcard], [wildcard][69-90][/wildcard], [wildcard][65-89][/wildcard], [wildcard][66-90][/wildcard]]), RecordHeader(key = x-datadog-trace-id, value = [[wildcard][49-57][/wildcard], [wildcard][48-57][/wildcard], [wildcard][48-57][/wildcard], [wildcard][49-57][/wildcard], [wildcard][48-56][/wildcard], [wildcard][48-57][/wildcard], [wildcard][48-57][/wildcard], [wildcard][48-57][/wildcard], [wildcard][48-57][/wildcard], [wildcard][48-57][/wildcard], [wildcard][48-57][/wildcard], [wildcard][49-57][/wildcard], [wildcard][48-56][/wildcard], [wildcard][48-56][/wildcard], [wildcard][48-57][/wildcard], [wildcard][48-57][/wildcard], [wildcard][48-56][/wildcard], [wildcard][48-57][/wildcard], [wildcard][49-57][/wildcard]]), RecordHeader(key = x-datadog-parent-id, value = [[wildcard][49-56][/wildcard], [wildcard][49-57][/wildcard], [wildcard][48-57][/wildcard], [wildcard][48-57][/wildcard], [wildcard][48-57][/wildcard], [wildcard][48-57][/wildcard], [wildcard][48-57][/wildcard], [wildcard][48-57][/wildcard], [wildcard][48-57][/wildcard], [wildcard][48-57][/wildcard], [wildcard][48-57][/wildcard], [wildcard][48-57][/wildcard], [wildcard][48-57][/wildcard], [wildcard][48-57][/wildcard], [wildcard][48-57][/wildcard], [wildcard][48-57][/wildcard], [wildcard][48-57][/wildcard], [wildcard][48-57][/wildcard], [wildcard][48-56][/wildcard]]), RecordHeader(key = x-datadog-sampling-priority, value = [[wildcard][48-49][/wildcard]]), RecordHeader(key = x-datadog-tags, value = [95, 100, 100, 46, 112, 46, 100, 109, 61, 45, 49]), RecordHeader(key = [wildcard]*[/wildcard], value = [[wildcard][48-101][/wildcard], [wildcard][48-101][/wildcard], [wildcard][49-102][/wildcard], [wildcard][48-102][/wildcard], [wildcard][48-101][/wildcard], [wildcard][49-102][/wildcard], [wildcard][49-102][/wildcard], [wildcard][48-100][/wildcard], 45, [wildcard][48-102][/wildcard], [wildcard][49-102][/wildcard], [wildcard][49-102][/wildcard], [wildcard][48-100][/wildcard], 45, 52, [wildcard][49-102][/wildcard], [wildcard][48-102][/wildcard], [wildcard][48-101][/wildcard], 45, [wildcard][56-98][/wildcard], [wildcard][48-102][/wildcard], [wildcard][48-102][/wildcard], [wildcard][48-102][/wildcard], 45, [wildcard][48-102][/wildcard], [wildcard][48-102][/wildcard], [wildcard][48-102][/wildcard], [wildcard][48-102][/wildcard], [wildcard][48-102][/wildcard], [wildcard][49-102][/wildcard], [wildcard][50-102][/wildcard], [wildcard][48-101][/wildcard], [wildcard][49-101][/wildcard], [wildcard][48-102][/wildcard], [wildcard][49-102][/wildcard], [wildcard][49-102][/wildcard]])], isReadOnly = false)]"
"≈30K","info","ix-dsk-request-service","Subscribing to gRPC stream for [wildcard]*[/wildcard]"
"≈20K","info","ix-virtual-load-tester","[ANSWER Email, agent:[wildcard]*[/wildcard]@[wildcard]*[/wildcard][READY], channel EMAIL, interactionType: CALLED engagementId: [wildcard]*[/wildcard], interactionId: [wildcard]*[/wildcard], dialogId [wildcard]*[/wildcard]]"
"≈20K","info","analytics-ingestion","NormalizerTopicConsumer.processRecords: Adding [wildcard][1-500][/wildcard] messages to feed"
"≈20K","info","outbound-contacts-actors","[wildcard]yyyy-MM-dd HH:mm:ss.SSS[/wildcard] [INFO ] [[wildcard]*[/wildcard]] com.azure.cosmos.implementation.batch.BulkExecutor -- Closing all sinks, Context: [wildcard]*[/wildcard][n/a]"
"≈20K","info","outbound-contacts-api","[wildcard]yyyy-MM-dd HH:mm:ss.SSS[/wildcard] [INFO ] [[wildcard]*[/wildcard]] com.avaya.outbound.contact.api.controller.[wildcard]*[/wildcard] -- [wildcard]*[/wildcard] -- [wildcard]*[/wildcard] [wildcard]*[/wildcard] [wildcard]*[/wildcard] [wildcard]*[/wildcard] [wildcard]*[/wildcard] [wildcard]*[/wildcard] [wildcard]*[/wildcard] [wildcard]*[/wildcard]: [wildcard]*[/wildcard] for accountId: GZJLCF"
"≈20K","info","journey-service","WidgetSettings cache updater - finishing run... (runNumber='[wildcard][2-344263][/wildcard]', successfulRuns=[wildcard][2-344263][/wildcard], failedRuns= 0, cachedElementsSize='[wildcard][3-289][/wildcard]')"
"≈20K","info","vrc-agent-service","messageReceived, received reason code {""codeName"": ""[wildcard]*[/wildcard][wildcard]*[/wildcard]"", ""codeType"": ""[wildcard]*[/wildcard]"", ""codeNumber"": ""[wildcard][00101-00113][/wildcard]"", ""codeId"": ""[wildcard]*[/wildcard]"", ""description"": ""[wildcard]*[/wildcard] [wildcard]*[/wildcard][wildcard]*[/wildcard]"", ""systemDefined"": [wildcard]*[/wildcard], ""systemUse"": [wildcard]*[/wildcard], ""accountId"": ""[wildcard]*[/wildcard]"", ""timestamp"": ""[wildcard]yyyy-MM-ddTHH:mm:ss.SSSXXX[/wildcard]""}, with system use [wildcard]*[/wildcard]"
"≈20K","info","ix-virtual-load-tester","[UC3 websocket: Received call established, agent:[wildcard]*[/wildcard]@voice5008.ac, state READY]"
"≈20K","info","ix-virtual-load-tester","[UC3 websocket: call ended. Reason: null, agent:[wildcard]*[/wildcard]@voice5008.ac, state READY]"
"≈20K","info","media-store","AccountService :: Creating new account: [wildcard]*[/wildcard], with Id: [wildcard]*[/wildcard]"
"≈20K","info","vrc-metrics-aggregator-service","running publish publishing Metrics for queue: MXWZHQ|[wildcard]*[/wildcard]|[wildcard]*[/wildcard]| metrics: {rollingASA=[wildcard][0.0-1.0][/wildcard], oldestEngagementWaiting=0, agentStaffedCount=0, queueOccupancy=0, processingEngagementCount=0, completedEngagementCount=[wildcard][0-8][/wildcard], oldestSpecializedEngagementWaitingTimestamp=0, waitingEngagementCount=0, agentBusyCount=0, processingSpecializedEngagementCount=0, oldestSpecializedEngagementWaiting=0, oldestEngagementWaitingTimestamp=0, expectedWaitTime=999999, completedSpecializedEngagementCount=[wildcard][0-8][/wildcard], waitingSpecializedEngagementCount=0, agentReadyCount=0}"
"≈20K","info","outbound-contacts-api","[wildcard]yyyy-MM-dd HH:mm:ss.SSS[/wildcard] [INFO ] [[wildcard]*[/wildcard]] com.avaya.outbound.contact.api.controller.ContactController -- getContactsCount -- Account Id: [wildcard]*[/wildcard] - Request to get the contacts count of a contact list id: [wildcard]*[/wildcard]."
"≈20K","info","kafka","[[wildcard]yyyy-MM-dd HH:mm:ss,SSS[/wildcard]] INFO Authentication successful for avnadmin (io.aiven.kafka.auth.AivenSaslPlainServerCallbackHandler)"
"≈20K","info","vrc-availability-service","nextState, FSM STATE CHANGE from [[wildcard]*[/wildcard]] to [[wildcard]*[/wildcard]]"
"≈20K","info","uc3-connector","processAgent, tenant [null], agent: [Agent(kafkaKey=[wildcard]*[/wildcard], userId=[wildcard]*[/wildcard], providerAgentId=[wildcard]*[/wildcard], providerId=[wildcard]*[/wildcard], deviceId=[wildcard]*[/wildcard], deviceType=WEBRTC, password=Admin123$, providerAccountId=[wildcard]*[/wildcard], extensionNumber=[wildcard][10010-18238][/wildcard], agentDID=null, accountId=null, displayName=[wildcard]*[/wildcard][wildcard]*[/wildcard], organizationNodeId=[wildcard]*[/wildcard])]"
"≈20K","info","vrc-agent-service","consumeRecords, Notifying message listeners of [ReasonCode] event, topic: [[wildcard]*[/wildcard]], offset:[[wildcard][31-1853][/wildcard]], key: [[wildcard]*[/wildcard]], value: {""codeName"": ""[wildcard]*[/wildcard][wildcard]*[/wildcard]"", ""codeType"": ""NOT_READY"", ""codeNumber"": ""[wildcard][00101-00105][/wildcard]"", ""codeId"": ""[wildcard]*[/wildcard]"", ""description"": ""System uses this [wildcard]*[/wildcard] [wildcard]*[/wildcard] [wildcard]*[/wildcard] [wildcard]*[/wildcard] [wildcard]*[/wildcard] [wildcard]*[/wildcard] [wildcard]*[/wildcard][wildcard]*[/wildcard]"", ""systemDefined"": true, ""systemUse"": ""[wildcard]*[/wildcard]"", ""accountId"": ""[wildcard]*[/wildcard]"", ""timestamp"": ""[wildcard]yyyy-MM-ddTHH:mm:ss.SSSXXX[/wildcard]""}"
"≈20K","info","vrc-availability-service","getConsumerLagInfo: Stream Tasks running in this pod for org.apache.kafka.streams.KafkaStreams@[wildcard]*[/wildcard]are active-tasks [[wildcard][0-1][/wildcard], [wildcard][2-3][/wildcard], [wildcard][4-5][/wildcard]] and standBy-tasks [[wildcard][0-1][/wildcard], [wildcard][2-3][/wildcard], [wildcard][4-5][/wildcard]]."
"≈20K","info","ix-dsk-admin-connector","consumeRecords, Notifying message listeners of [[wildcard]*[/wildcard]] event, topic: [[wildcard]*[/wildcard]], offset:[[wildcard][293-469787][/wildcard]], key: [[wildcard]*[/wildcard][wildcard]*[/wildcard]], value: [wildcard]*[/wildcard]"
"≈20K","info","nginx","[wildcard]10.XXX.XXX.XXX[/wildcard] - - [[wildcard]dd/MMM/yyyy:HH:mm:ss xx[/wildcard]] ""GET / HTTP/1.1"" 200 615 ""-"" ""kube-probe/1.26"" ""-"""
"≈20K","info","vrc-metrics-service","methodName:createLogoutEvent - sending UpsertAgentAvailabilityMessage: AgentChannelState(id=[wildcard]*[/wildcard], tenantId=[wildcard]*[/wildcard], channelToStateMap={[wildcard]*[/wildcard]=LOGGED_OUT}, channelToAuxStateMap={[wildcard]*[/wildcard]=AUX_STATE_READY})"
"≈20K","info","vrc-metrics-service","methodName:upsertAgentAvailability - Agent [wildcard]*[/wildcard] newAgentState AgentEntry(id=[wildcard]*[/wildcard], tenantId=[wildcard]*[/wildcard], attributes=Attributes(attributeList=[channel.[wildcard]*[/wildcard][wildcard]*[/wildcard]]), activeServiceSet=[], channels=[[wildcard]*[/wildcard]], previousChannels=[], channelToStateMap={[wildcard]*[/wildcard]=LOGGED_OUT}, channelToAuxStateMap={[wildcard]*[/wildcard]=AUX_STATE_READY}, writeCounter=0, readCounter=0, taskId=0) ."
"≈20K","info","media-store","[Consumer clientId=consumer-umr-account-avro-group-1, groupId=umr-account-avro-group] Seeking to offset [wildcard][247-4134][/wildcard] for partition account.[wildcard]*[/wildcard]"
"≈20K","info","ix-dsk-connector","Adding AdfService to cache, key=[[wildcard]*[/wildcard]] value=[{""queueId"": ""[wildcard]*[/wildcard]"", ""queueName"": ""[wildcard]*[/wildcard]"", ""adfServiceId"": ""[wildcard]*[/wildcard]"", ""adfProviderId"": ""[wildcard]*[/wildcard]"", ""accountId"": ""[wildcard]*[/wildcard]""}]"
"≈20K","info","auth-proxy","time=""[wildcard]*[/wildcard]"" level=debug msg=""found the user identity"" email=[wildcard]*[/wildcard]@[wildcard]*[/wildcard][wildcard]*[/wildcard]@[wildcard]*[/wildcard]roles=""[wildcard]*[/wildcard][wildcard]*[/wildcard] Admin Widgets Administrator,Administrator,offline_access,[wildcard]*[/wildcard],[wildcard]*[/wildcard],[wildcard]*[/wildcard],account:manage-account,account:manage-account-links,account:view-profile"" tenant=[wildcard]*[/wildcard]"
"≈20K","info","vrc-rona-service","consumeRecords, Notifying message listeners of [Queue] event, topic: [[wildcard]*[/wildcard]], offset:[[wildcard][23-562][/wildcard]], key: [[wildcard]*[/wildcard]], value: {""timestamp"": ""[wildcard]yyyy-MM-ddTHH:mm:ss.SSSXXX[/wildcard]"", ""queueId"": ""[wildcard]*[/wildcard]"", ""name"": ""[wildcard]*[/wildcard][wildcard]*[/wildcard]"", ""description"": [wildcard]*[/wildcard], ""accountDefault"": [wildcard]*[/wildcard], ""afterContactWork"": false, ""accountId"": ""[wildcard]*[/wildcard]""}"
"≈20K","info","outbound-contacts-api","[wildcard]yyyy-MM-dd HH:mm:ss.SSS[/wildcard] [INFO ] [[wildcard]*[/wildcard]] com.avaya.outbound.contact.api.controller.ContactListInternalController -- getLatestJobForContactList -- Account Id: GZJLCF - Latest job details for contact list [wildcard]*[/wildcard] fetched successfully"
"≈20K","info","journey-service","Running query against index '[wildcard]*[/wildcard]*' { ""bool"" : { ""filter"" : [ { ""bool"" : { ""should"" : [ { ""wildcard"" : { ""identifiers.emailAddresses"" : { ""wildcard"" : ""customer@test.com"", ""case_insensitive"" : true, ""boost"" : 1.0 } } }, { ""wildcard"" : { ""identifiers.phoneNumbers"" : { ""wildcard"" : ""1231231231"", ""boost"" : 1.0 } } } ], ""adjust_pure_negative"" : true, ""minimum_should_match"" : ""1"", ""boost"" : 1.0 } }, { ""range"" : { ""timestamp"" : { ""from"" : [wildcard][1662879624242-1707634097171][/wildcard], ""to"" : [wildcard][1665532799595-1710226384044][/wildcard], ""include_lower"" : true, ""include_upper"" : true, ""format"" : ""epoch_millis"", ""boost"" : 1.0 } } } ], ""adjust_pure_negative"" : true, ""boost"" : 1.0 } }"
"≈20K","info","ix-dsk-admin-connector","consumeRecords, Notifying message listeners of [AdfReasonCodeMap] event, topic: [[wildcard]*[/wildcard]], offset:[[wildcard][57-465015][/wildcard]], key: [[wildcard]*[/wildcard]], value: {""reasonCodeId"": ""[wildcard]*[/wildcard]"", ""adfReasonCodeId"": ""[wildcard]*[/wildcard]"", ""codeName"": ""[wildcard]*[/wildcard][wildcard]*[/wildcard]"", ""codeType"": ""NOT_READY"", ""codeNumber"": ""[wildcard][00101-00105][/wildcard]"", ""description"": ""System uses this [wildcard]*[/wildcard] [wildcard]*[/wildcard] [wildcard]*[/wildcard] [wildcard]*[/wildcard] [wildcard]*[/wildcard] [wildcard]*[/wildcard] [wildcard]*[/wildcard][wildcard]*[/wildcard]"", ""accountId"": ""[wildcard]*[/wildcard]"", ""systemUse"": ""[wildcard]*[/wildcard]"", ""adfProviderId"": null}"
"≈20K","info","vrc-matching-engagement","addAttribute() - adding attribute to cache with id [wildcard]*[/wildcard] and attribute data AdminAttribute(id=[wildcard]*[/wildcard], value=[wildcard]*[/wildcard], category=AdminCategory(name=[wildcard]*[/wildcard], tenant=AdminTenant(id=[wildcard]*[/wildcard])))"
"≈10K","info","ix-dsk-admin-connector","Adding AdfService to cache key=[[wildcard]*[/wildcard]] value=[{""queueId"": ""[wildcard]*[/wildcard]"", ""queueName"": ""[wildcard]*[/wildcard][wildcard]*[/wildcard]"", ""adfServiceId"": ""[wildcard]*[/wildcard]"", ""adfProviderId"": ""[wildcard]*[/wildcard]"", ""accountId"": ""[wildcard]*[/wildcard]""}]"
"≈10K","info","analytics-ingestion","LakeLocator.getBlockBlobClient: Building client for app_id be1d135e-f9ba-45be-abb4-06abcc1e21fc and Storage Account analyticsdevaxp at container [wildcard]*[/wildcard] and path 2024[wildcard]/3/11/*[/wildcard]"
"≈10K","info","ix-virtual-load-tester","[Received EMAIL from Customer, agent:[wildcard]*[/wildcard]@[wildcard]*[/wildcard][READY], channel EMAIL, interactionType: CALLED engagementId: [wildcard]*[/wildcard], interactionId: [wildcard]*[/wildcard], dialogId [wildcard]*[/wildcard]]"
"≈10K","info","admin-voice-service","Received avro message for topic [user.avro] message [MessageResponse(destination=user.avro, key=[wildcard]*[/wildcard], message={""source"": ""[wildcard]*[/wildcard]"", ""lastName"": ""[wildcard]*[/wildcard]"", ""loginId"": ""[wildcard]*[/wildcard]@[wildcard]*[/wildcard]"", ""userId"": ""[wildcard]*[/wildcard]"", ""localizedDisplayName"": ""[wildcard]*[/wildcard],[wildcard]*[/wildcard]"", ""displayName"": ""[wildcard]*[/wildcard][wildcard]*[/wildcard]"", ""roles"": [wildcard]*[/wildcard], ""memberOf"": [wildcard]*[/wildcard], ""ownedGroups"": null, ""firstName"": ""[wildcard]*[/wildcard]"", ""organizationNodeId"": ""[wildcard]*[/wildcard]"", ""newLoginId"": null, ""password"": [wildcard]*[/wildcard], ""tenantId"": ""[wildcard]*[/wildcard]"", ""emailId"": [wildcard]*[/wildcard], ""organizationGroups"": null, ""assignRoles"": null, ""unAssignRoles"": null, ""ldapId"": null, ""profileId"": [wildcard]*[/wildcard], ""addresses"": [wildcard]*[/wildcard], ""accountAddresses"": [wildcard]*[/wildcard], ""timestamp"": ""[wildcard]yyyy-MM-ddTHH:mm:ss.SSSXXX[/wildcard]""}, headers={b3=[B@[wildcard]*[/wildcard], x-datadog-parent-id=[B@[wildcard]*[/wildcard], avaya_kafka_writeOperation=[B@[wildcard]*[/wildcard], x-datadog-sampling-priority=[B@[wildcard]*[/wildcard], avaya_kafka_messageId=[B@[wildcard]*[/wildcard], x-datadog-trace-id=[B@[wildcard]*[/wildcard]})]"
"≈10K","warn","kafka","[[wildcard]yyyy-MM-dd HH:mm:ss,SSS[/wildcard]] WARN Attempting to send response via channel for which there is no open connection, connection id [wildcard]XXX.XXX.XXX.XXX[/wildcard]:13598[wildcard][-10.205--10.164][/wildcard].[wildcard][8.105-11.145][/wildcard]:[wildcard]*[/wildcard] (kafka.network.Processor)"
"≈10K","info","vrc-matching-service","Sending AdminUserEvent to match engine AdminAgentEvent(isDeleteEvent=false, agent=AdminAgentFromAvro(id=[wildcard]*[/wildcard], tenantId=YOVRUD, strategy=WSSGreatestNeed, queues=[], attributes=[AdminAttributeFromAvro(id=[wildcard]*[/wildcard], value=Dummy, category=AdminCategoryFromAvro(name=Department, tenantId=YOVRUD))], channels=[AdminAgentChannelFromAvro(channelId=Voice, channelProvider=AdminChannelProviderFromAvro(channelProviderId=eb33ae706ef17050e46799c65f9eb4bf, address=7775130733018), providerAgentId=[wildcard]*[/wildcard], providerAgentAddress=[wildcard]*[/wildcard])]))"
"≈10K","info","ix-dsk-connector","Adding AdfReasonCodeMap to ReasonCodeToAdfReasonCodeMapCache, key=[[wildcard]*[/wildcard]] value=[{""reasonCodeId"": ""[wildcard]*[/wildcard]"", ""adfReasonCodeId"": ""[wildcard]*[/wildcard]"", ""codeName"": ""[wildcard]*[/wildcard][wildcard]*[/wildcard]"", ""codeType"": ""NOT_READY"", ""codeNumber"": ""[wildcard][00101-00105][/wildcard]"", ""description"": ""System uses this [wildcard]*[/wildcard] [wildcard]*[/wildcard] [wildcard]*[/wildcard] [wildcard]*[/wildcard] [wildcard]*[/wildcard] [wildcard]*[/wildcard][wildcard]*[/wildcard] [wildcard]*[/wildcard]"", ""accountId"": ""[wildcard]*[/wildcard]"", ""systemUse"": ""[wildcard]*[/wildcard]""}]"
"≈10K","info","nmi","I0311 [wildcard]HH:mm:ss.SSSSSS[/wildcard] 1 standard.go:179] matched identityType:0 clientid:[wildcard]*[/wildcard][wildcard]*[/wildcard]##### REDACTED #####[wildcard]*[/wildcard] resource:https://vault.azure.net"
"≈10K","info","auth-proxy","time=""[wildcard]*[/wildcard]"" level=info msg=""client request"" bytes=[wildcard][0-355][/wildcard] client_ip=""[::1]:[wildcard][33262-57718][/wildcard]"" latency=[wildcard]*[/wildcard] method=GET path=[wildcard]/*/*/*[/wildcard][wildcard]*[/wildcard] status=[wildcard][200-307][/wildcard] tenant=[wildcard]*[/wildcard]"
"≈10K","info","outbound-contacts-api","[wildcard]yyyy-MM-dd HH:mm:ss.SSS[/wildcard] [INFO ] [[wildcard]*[/wildcard]] com.avaya.outbound.contact.api.controller.ContactListInternalController -- getLatestJobForContactList -- Request to get latest job details of contact list id: [wildcard]*[/wildcard] for accountId: GZJLCF"
"≈10K","info","vrc-availability-service","setActiveTasksOffset. Current LagInfo : , partition : [wildcard]*[/wildcard], endOffset: [wildcard][3441-166567][/wildcard], commitOffset: [wildcard][3441-166567][/wildcard], lag: 0"
"≈10K","info","vrc-metrics-service","methodName:upsertAgentAvailability - Agent [wildcard]*[/wildcard] newAgentState AgentEntry(id=[wildcard]*[/wildcard], tenantId=[wildcard]*[/wildcard], attributes=Attributes(attributeList=[channel.chat, channel.email[wildcard]*[/wildcard]]), activeServiceSet=[], channels=[chat, email], previousChannels=[], channelToStateMap={chat=LOGGED_OUT, email=LOGGED_OUT}, channelToAuxStateMap={chat=AUX_STATE_READY, email=AUX_STATE_READY}, writeCounter=0, readCounter=0, taskId=0) ."
"≈10K","info","vrc-metrics-service","methodName:updateAgent - oldAgentState:null newAgentState:AgentEntry(id=[wildcard]*[/wildcard], tenantId=XLMUYK, attributes=Attributes(attributeList=[channel.chat, channel.email, channel.voice]), activeServiceSet=[], channels=[voice, chat, email], previousChannels=[], channelToStateMap={voice=LOGGED_OUT, chat=LOGGED_OUT, email=LOGGED_OUT}, channelToAuxStateMap={voice=AUX_STATE_READY, chat=AUX_STATE_READY, email=AUX_STATE_READY}, writeCounter=0, readCounter=0, taskId=0)"
"≈10K","info","analytics-ingestion","LakeLocator.process: there are [wildcard][11-500][/wildcard] messages to process."
"≈10K","info","cbs-adapter","setupRestTemplate() : keystore loaded with the required certificates"
"≈10K","info","journey-service","JourneyQueryResponse result (journeyQuery=class JourneyQuery { class Identifiers { identifiers: {[wildcard]*[/wildcard]=[[wildcard]*[/wildcard]]} } startDate: JsonNullable[[wildcard]*[/wildcard]] endDate: JsonNullable[[wildcard]yyyy-MM-ddTHH:mm:ss.SSSSSSXXX[/wildcard]] conversation: JsonNullable.undefined agentId: JsonNullable.undefined channelIds: JsonNullable.undefined }, pageSize=[wildcard][20-50][/wildcard], pageNumber=[wildcard][1-11][/wildcard], accountId=[wildcard]*[/wildcard], traceId=[wildcard]*[/wildcard]): class JourneyQuery { class Identifiers { identifiers: {[wildcard]*[/wildcard]=[[wildcard]*[/wildcard]]} } startDate: JsonNullable.undefined endDate: JsonNullable.undefined conversation: JsonNullable.undefined agentId: JsonNullable.undefined channelIds: JsonNullable.undefined }"
"≈10K","info","vrc-availability-service","consumeRecords, Notifying message listeners of [Agent] event, topic: [[wildcard]*[/wildcard]], offset:[[wildcard][38180-43848][/wildcard]], key: [[wildcard]*[/wildcard]], value: {""timestamp"": ""[wildcard]yyyy-MM-ddTHH:mm:ss.SSSXXX[/wildcard]"", ""agentId"": ""[wildcard]*[/wildcard]"", ""channels"": [{""channelId"": ""Email"", ""channelProvider"": {""channelProviderId"": ""8b7c2fd5-3abc-457e-ada8-33d0ce98bf3d"", ""address"": ""8b7c2fd5-3abc-457e-ada8-33d0ce98bf3d""}, ""providerAgentId"": ""[wildcard]*[/wildcard]@bulkapi.com"", ""providerAgentAddress"": ""[wildcard]*[/wildcard]@bulkapi.com"", ""defaultStation"": null}, {""channelId"": ""Chat"", ""channelProvider"": {""channelProviderId"": ""1141bb36-5589-4232-ae08-70b740e67299"", ""address"": ""1141bb36-5589-4232-ae08-70b740e67299""}, ""providerAgentId"": ""[wildcard]*[/wildcard]@bulkapi.com"", ""providerAgentAddress"": ""[wildcard]*[/wildcard]@bulkapi.com"", ""defaultStation"": null}, {""channelId"": ""Voice"", ""channelProvider"": {""channelProviderId"": ""a185b1f9779e7284d5744c16a3d36393"", ""address"": ""7775130733193""}, ""providerAgentId"": ""[wildcard]*[/wildcard]"", ""providerAgentAddress"": ""[wildcard]*[/wildcard]"", ""defaultStation"": {""extension"": ""[wildcard]*[/wildcard]""}}], ""queues"": [], ""matchingAttributes"": [], ""profiles"": [{""agentProfileId"": ""[wildcard]*[/wildcard]"", ""name"": ""default"", ""channels"": [{""channelId"": ""Email"", ""channelProvider"": {""channelProviderId"": ""8b7c2fd5-3abc-457e-ada8-33d0ce98bf3d"", ""address"": ""8b7c2fd5-3abc-457e-ada8-33d0ce98bf3d""}, ""providerAgentId"": ""[wildcard]*[/wildcard]@bulkapi.com"", ""providerAgentAddress"": ""[wildcard]*[/wildcard]@bulkapi.com"", ""multiplicity"": 1, ""integrationMultiplicities"": null, ""excludeNewContactChannels"": null, ""autoAnswer"": true, ""afterContactWork"": true, ""rona"": 30, ""password"": null, ""defaultStation"": null, ""channelIntegrations"": null}, {""channelId"": ""Chat"", ""channelProvider"": {""channelProviderId"": ""1141bb36-5589-4232-ae08-70b740e67299"", ""address"": ""1141bb36-5589-4232-ae08-70b740e67299""}, ""providerAgentId"": ""[wildcard]*[/wildcard]@bulkapi.com"", ""providerAgentAddress"": ""[wildcard]*[/wildcard]@bulkapi.com"", ""multiplicity"": 1, ""integrationMultiplicities"": null, ""excludeNewContactChannels"": null, ""autoAnswer"": false, ""afterContactWork"": false, ""rona"": 30, ""password"": null, ""defaultStation"": null, ""channelIntegrations"": null}, {""channelId"": ""Voice"", ""channelProvider"": {""channelProviderId"": ""a185b1f9779e7284d5744c16a3d36393"", ""address"": ""7775130733193""}, ""providerAgentId"": ""[wildcard]*[/wildcard]"", ""providerAgentAddress"": ""[wildcard]*[/wildcard]"", ""multiplicity"": 1, ""integrationMultiplicities"": null, ""excludeNewContactChannels"": null, ""autoAnswer"": true, ""afterContactWork"": true, ""rona"": 30, ""password"": null, ""defaultStation"": {""extension"": ""[wildcard]*[/wildcard]""}, ""channelIntegrations"": null}]}], ""strategy"": ""GREATEST_NEED"", ""tenantId"": ""XLMUYK"", ""accountId"": ""XLMUYK""}"
"≈10K","info","vrc-availability-service","messageReceived, received an Admin Agent event value=[{""timestamp"": ""[wildcard]yyyy-MM-ddTHH:mm:ss.SSSXXX[/wildcard]"", ""agentId"": ""[wildcard]*[/wildcard]"", ""channels"": [{""channelId"": ""Email"", ""channelProvider"": {""channelProviderId"": ""8b7c2fd5-3abc-457e-ada8-33d0ce98bf3d"", ""address"": ""8b7c2fd5-3abc-457e-ada8-33d0ce98bf3d""}, ""providerAgentId"": ""[wildcard]*[/wildcard]@bulkapi.com"", ""providerAgentAddress"": ""[wildcard]*[/wildcard]@bulkapi.com"", ""defaultStation"": null}, {""channelId"": ""Chat"", ""channelProvider"": {""channelProviderId"": ""1141bb36-5589-4232-ae08-70b740e67299"", ""address"": ""1141bb36-5589-4232-ae08-70b740e67299""}, ""providerAgentId"": ""[wildcard]*[/wildcard]@bulkapi.com"", ""providerAgentAddress"": ""[wildcard]*[/wildcard]@bulkapi.com"", ""defaultStation"": null}, {""channelId"": ""Voice"", ""channelProvider"": {""channelProviderId"": ""a185b1f9779e7284d5744c16a3d36393"", ""address"": ""7775130733193""}, ""providerAgentId"": ""[wildcard]*[/wildcard]"", ""providerAgentAddress"": ""[wildcard]*[/wildcard]"", ""defaultStation"": {""extension"": ""[wildcard]*[/wildcard]""}}], ""queues"": [], ""matchingAttributes"": [], ""profiles"": [{""agentProfileId"": ""[wildcard]*[/wildcard]"", ""name"": ""default"", ""channels"": [{""channelId"": ""Email"", ""channelProvider"": {""channelProviderId"": ""8b7c2fd5-3abc-457e-ada8-33d0ce98bf3d"", ""address"": ""8b7c2fd5-3abc-457e-ada8-33d0ce98bf3d""}, ""providerAgentId"": ""[wildcard]*[/wildcard]@bulkapi.com"", ""providerAgentAddress"": ""[wildcard]*[/wildcard]@bulkapi.com"", ""multiplicity"": 1, ""integrationMultiplicities"": null, ""excludeNewContactChannels"": null, ""autoAnswer"": true, ""afterContactWork"": true, ""rona"": 30, ""password"": null, ""defaultStation"": null, ""channelIntegrations"": null}, {""channelId"": ""Chat"", ""channelProvider"": {""channelProviderId"": ""1141bb36-5589-4232-ae08-70b740e67299"", ""address"": ""1141bb36-5589-4232-ae08-70b740e67299""}, ""providerAgentId"": ""[wildcard]*[/wildcard]@bulkapi.com"", ""providerAgentAddress"": ""[wildcard]*[/wildcard]@bulkapi.com"", ""multiplicity"": 1, ""integrationMultiplicities"": null, ""excludeNewContactChannels"": null, ""autoAnswer"": false, ""afterContactWork"": false, ""rona"": 30, ""password"": null, ""defaultStation"": null, ""channelIntegrations"": null}, {""channelId"": ""Voice"", ""channelProvider"": {""channelProviderId"": ""a185b1f9779e7284d5744c16a3d36393"", ""address"": ""7775130733193""}, ""providerAgentId"": ""[wildcard]*[/wildcard]"", ""providerAgentAddress"": ""[wildcard]*[/wildcard]"", ""multiplicity"": 1, ""integrationMultiplicities"": null, ""excludeNewContactChannels"": null, ""autoAnswer"": true, ""afterContactWork"": true, ""rona"": 30, ""password"": null, ""defaultStation"": {""extension"": ""[wildcard]*[/wildcard]""}, ""channelIntegrations"": null}]}], ""strategy"": ""GREATEST_NEED"", ""tenantId"": ""XLMUYK"", ""accountId"": ""XLMUYK""}]"
"≈10K","info","vrc-metrics-service","getConsumerLagInfo: Stream Tasks running in this pod for org.apache.kafka.streams.KafkaStreams@[wildcard]*[/wildcard]are active-tasks [[wildcard][0-1][/wildcard], [wildcard][2-3][/wildcard], [wildcard][4-5][/wildcard]] and standBy-tasks []."
"≈10K","info","vrc-metrics-service","methodName:createLogoutEvent - sending UpsertAgentAvailabilityMessage: AgentChannelState(id=[wildcard]*[/wildcard], tenantId=[wildcard]*[/wildcard], channelToStateMap={voice=LOGGED_OUT, chat=LOGGED_OUT, email=LOGGED_OUT}, channelToAuxStateMap={voice=AUX_STATE_READY, chat=AUX_STATE_READY, email=AUX_STATE_READY})"
"≈10K","info","uc3-connector","processAgent, tenant [[wildcard]*[/wildcard]], agent: [Agent(kafkaKey=[wildcard]*[/wildcard], userId=[wildcard]*[/wildcard], providerAgentId=[wildcard]*[/wildcard], providerId=[wildcard]*[/wildcard],[wildcard]*[/wildcard]@[wildcard]*[/wildcard], deviceType=WEBRTC, password=Admin123$, providerAccountId=[wildcard]*[/wildcard],[wildcard]*[/wildcard]@[wildcard]*[/wildcard], agentDID=null, accountId=[wildcard]*[/wildcard], displayName=[wildcard]*[/wildcard][wildcard]*[/wildcard], [wildcard]*[/wildcard], organizationNodeId=[wildcard]*[/wildcard])][wildcard]*[/wildcard]"
"≈10K","info","ix-dsk-connector","bool [wildcard]*[/wildcard] = [wildcard]*[/wildcard] {[wildcard]*[/wildcard]} {[wildcard]*[/wildcard]}"
"≈10K","info","ix-dsk-connector","Removing Queue from cache key=[[wildcard]*[/wildcard]] size=[[wildcard][37-519][/wildcard]]"
"≈10K","info","ix-dsk-connector","consumeRecords, Notifying message listeners of [Queue] event, topic: [[wildcard]*[/wildcard]], offset:[[wildcard][58-464879][/wildcard]], key: [[wildcard]*[/wildcard]], value: {""timestamp"": ""[wildcard]yyyy-MM-ddTHH:mm:ss.SSSXXX[/wildcard]"", ""queueId"": ""[wildcard]*[/wildcard]"", ""name"": ""[wildcard]*[/wildcard]"", ""description"": ""[wildcard]*[/wildcard]"", ""accountDefault"": [wildcard]*[/wildcard], ""accountId"": ""[wildcard]*[/wildcard]""}"
"≈10K","info","analytics-dbmgr",".PostgreSQL configuration Not OK ✘"
"≈10K","info","vrc-availability-service","messageReceived, adding Admin Agent to cache, value=[{""timestamp"": ""[wildcard]yyyy-MM-ddTHH:mm:ss.SSSXXX[/wildcard]"", ""agentId"": ""[wildcard]*[/wildcard]"", ""channels"": [{""channelId"": ""Voice"", ""channelProvider"": {""channelProviderId"": ""eb33ae706ef17050e46799c65f9eb4bf"", ""address"": ""7775130733018""}, ""providerAgentId"": ""[wildcard]*[/wildcard]"", ""providerAgentAddress"": ""[wildcard]*[/wildcard]"", ""defaultStation"": {""extension"": ""[wildcard]*[/wildcard]""}}], ""queues"": [], ""matchingAttributes"": [{""category"": ""Department"", ""value"": ""Dummy""}], ""profiles"": [{""agentProfileId"": ""[wildcard]*[/wildcard]"", ""name"": ""default"", ""channels"": [{""channelId"": ""Voice"", ""channelProvider"": {""channelProviderId"": ""eb33ae706ef17050e46799c65f9eb4bf"", ""address"": ""7775130733018""}, ""providerAgentId"": ""[wildcard]*[/wildcard]"", ""providerAgentAddress"": ""[wildcard]*[/wildcard]"", ""multiplicity"": 1, ""integrationMultiplicities"": null, ""excludeNewContactChannels"": null, ""autoAnswer"": true, ""afterContactWork"": false, ""rona"": 30, ""password"": null, ""defaultStation"": {""extension"": ""[wildcard]*[/wildcard]""}, ""channelIntegrations"": null}]}], ""strategy"": ""GREATEST_NEED"", ""tenantId"": ""YOVRUD"", ""accountId"": ""YOVRUD""}]"
"≈10K","warn","vrc-rona-service","Invalid value as ReasonCode {""timestamp"": ""[wildcard]yyyy-MM-ddTHH:mm:ss.SSSXXX[/wildcard]"", ""agentId"": ""[wildcard]*[/wildcard]"", ""channels"": [{""channelId"": ""Voice"", ""channelProvider"": {""channelProviderId"": ""eb33ae706ef17050e46799c65f9eb4bf"", ""address"": ""7775130733018""}, ""providerAgentId"": ""[wildcard]*[/wildcard]"", ""providerAgentAddress"": ""[wildcard]*[/wildcard]"", ""defaultStation"": {""extension"": ""[wildcard]*[/wildcard]""}}], ""queues"": [], ""matchingAttributes"": [{""category"": ""Department"", ""value"": ""Dummy""}], ""profiles"": [{""agentProfileId"": ""[wildcard]*[/wildcard]"", ""name"": ""default"", ""channels"": [{""channelId"": ""Voice"", ""channelProvider"": {""channelProviderId"": ""eb33ae706ef17050e46799c65f9eb4bf"", ""address"": ""7775130733018""}, ""providerAgentId"": ""[wildcard]*[/wildcard]"", ""providerAgentAddress"": ""[wildcard]*[/wildcard]"", ""multiplicity"": 1, ""autoAnswer"": [wildcard]*[/wildcard], ""afterContactWork"": false, ""rona"": 30, ""password"": null, ""defaultStation"": {""extension"": ""[wildcard]*[/wildcard]""}}]}], ""strategy"": ""GREATEST_NEED"", ""tenantId"": ""YOVRUD"", ""accountId"": ""YOVRUD"", ""deletePending"": false} in the ConsumerRecord"
"≈10K","warn","vrc-rona-service","Invalid value as ReasonCode {""timestamp"": ""[wildcard]yyyy-MM-ddTHH:mm:ss.SSSXXX[/wildcard]"", ""agentId"": ""[wildcard]*[/wildcard]"", ""channels"": [{""channelId"": ""Email"", ""channelProvider"": {""channelProviderId"": ""8b7c2fd5-3abc-457e-ada8-33d0ce98bf3d"", ""address"": ""8b7c2fd5-3abc-457e-ada8-33d0ce98bf3d""}, ""providerAgentId"": ""[wildcard]*[/wildcard]@ucmsg.net"", ""providerAgentAddress"": ""[wildcard]*[/wildcard]@ucmsg.net"", ""defaultStation"": null}, {""channelId"": ""Chat"", ""channelProvider"": {""channelProviderId"": ""973318f5-9881-48b3-8e5c-5752f4ab364c"", ""address"": ""973318f5-9881-48b3-8e5c-5752f4ab364c""}, ""providerAgentId"": ""[wildcard]*[/wildcard]@ucmsg.net"", ""providerAgentAddress"": ""[wildcard]*[/wildcard]@ucmsg.net"", ""defaultStation"": null}], ""queues"": [{""queueId"": ""dd346726-c92e-4a18-95f3-8914cb0bf4a7"", ""proficiency"": 8}], ""matchingAttributes"": [{""category"": ""Department"", ""value"": ""Dummy""}], ""profiles"": [{""agentProfileId"": ""[wildcard]*[/wildcard]"", ""name"": ""default"", ""channels"": [{""channelId"": ""Email"", ""channelProvider"": {""channelProviderId"": ""8b7c2fd5-3abc-457e-ada8-33d0ce98bf3d"", ""address"": ""8b7c2fd5-3abc-457e-ada8-33d0ce98bf3d""}, ""providerAgentId"": ""[wildcard]*[/wildcard]@ucmsg.net"", ""providerAgentAddress"": ""[wildcard]*[/wildcard]@ucmsg.net"", ""multiplicity"": 1, ""autoAnswer"": false, ""afterContactWork"": false, ""rona"": 30, ""password"": null, ""defaultStation"": null}, {""channelId"": ""Chat"", ""channelProvider"": {""channelProviderId"": ""973318f5-9881-48b3-8e5c-5752f4ab364c"", ""address"": ""973318f5-9881-48b3-8e5c-5752f4ab364c""}, ""providerAgentId"": ""[wildcard]*[/wildcard]@ucmsg.net"", ""providerAgentAddress"": ""[wildcard]*[/wildcard]@ucmsg.net"", ""multiplicity"": 1, ""autoAnswer"": false, ""afterContactWork"": false, ""rona"": 30, ""password"": null, ""defaultStation"": null}]}], ""strategy"": ""GREATEST_NEED"", ""tenantId"": ""YOVRUD"", ""accountId"": ""YOVRUD"", ""deletePending"": false} in the ConsumerRecord"
"≈10K","info","vrc-metrics-service","methodName:updateAgent - Agent [wildcard]*[/wildcard] entry is missing from agentMap, can't update an agent with no previous state, adding new agent to agentMap: AgentEntry(id=[wildcard]*[/wildcard], tenantId=XLMUYK, attributes=Attributes(attributeList=[channel.chat, channel.email, channel.voice]), activeServiceSet=[], channels=[voice, chat, email], previousChannels=[], channelToStateMap={voice=LOGGED_OUT, chat=LOGGED_OUT, email=LOGGED_OUT}, channelToAuxStateMap={voice=AUX_STATE_READY, chat=AUX_STATE_READY, email=AUX_STATE_READY}, writeCounter=0, readCounter=0, taskId=0)"
"≈10K","info","vrc-metrics-service","findOffsetsForActiveTasks. Current LagInfo : , partition : [wildcard]*[/wildcard], endOffset: [wildcard][1454-317227][/wildcard], commitOffset: [wildcard][1454-317227][/wildcard], lag: 0, partition : [wildcard]*[/wildcard], endOffset: [wildcard][1375-1655155][/wildcard], commitOffset: [wildcard][1375-1655155][/wildcard], lag: 0, partition : [wildcard]*[/wildcard], endOffset: [wildcard][328-344959][/wildcard], commitOffset: [wildcard][328-344959][/wildcard], lag: 0"
"≈10K","info","vrc-matching-service","findOffsetsForActiveTasks. Current LagInfo : , partition : match-command-by-engagement-0, endOffset: [wildcard][14951-495852040][/wildcard], commitOffset: [wildcard][14951-495852040][/wildcard], lag: 0, partition : match-agent-admin-0, endOffset: [wildcard][10747-3173666][/wildcard], commitOffset: [wildcard][10747-3173666][/wildcard], lag: 0, partition : match-agent-availability-0, endOffset: [wildcard][77966-1101403505][/wildcard], commitOffset: [wildcard][77966-1101403505][/wildcard], lag: 0"
"≈10K","info","ix-virtual-load-tester","[Connection to InfluxDB restored after error.]"
"≈10K","info","media-store","adding account data for accountId: [wildcard]*[/wildcard] to open search"
"≈10K","info","journey-service","Get Journey request received query: class JourneyQuery { class Identifiers { identifiers: {emailAddresses=[[wildcard]*[/wildcard]]} } startDate: JsonNullable[[wildcard]*[/wildcard]] endDate: JsonNullable[[wildcard]*[/wildcard]] conversation: JsonNullable.undefined agentId: JsonNullable.undefined channelIds: JsonNullable.undefined }, pageSize: [wildcard][20-50][/wildcard], pageNumber: [wildcard][1-7][/wildcard], accountId: [wildcard]*[/wildcard], traceId: [wildcard]*[/wildcard]"
"≈10K","info","vrc-matching-engagement","consumeRecords, Notifying message listeners of [MatchingAttributeCreated] event, topic: [[wildcard]*[/wildcard]], offset:[[wildcard][81-410][/wildcard]], key: [[wildcard]*[/wildcard]], value: {""timestamp"": ""[wildcard]yyyy-MM-ddTHH:mm:ss.SSSXXX[/wildcard]"", ""attributeId"": ""[wildcard]*[/wildcard]"", ""category"": ""[wildcard]*[/wildcard]"", ""tenantId"": ""[wildcard]*[/wildcard]"", ""value"": ""[wildcard]*[/wildcard]""}"
"≈10K","info","ix-dsk-request-service","Processing message reqId = [wildcard]*[/wildcard] requestType=[wildcard]*[/wildcard]"
"≈10K","info","vrc-availability-service","messageReceived, adding Admin Agent to cache, value=[{""timestamp"": ""[wildcard]yyyy-MM-ddTHH:mm:ss.SSSXXX[/wildcard]"", ""agentId"": ""[wildcard]*[/wildcard]"", ""channels"": [{""channelId"": ""Email"", ""channelProvider"": {""channelProviderId"": ""8b7c2fd5-3abc-457e-ada8-33d0ce98bf3d"", ""address"": ""8b7c2fd5-3abc-457e-ada8-33d0ce98bf3d""}, ""providerAgentId"": ""[wildcard]*[/wildcard]@bulkapi.com"", ""providerAgentAddress"": ""[wildcard]*[/wildcard]@bulkapi.com"", ""defaultStation"": null}, {""channelId"": ""Chat"", ""channelProvider"": {""channelProviderId"": ""1141bb36-5589-4232-ae08-70b740e67299"", ""address"": ""1141bb36-5589-4232-ae08-70b740e67299""}, ""providerAgentId"": ""[wildcard]*[/wildcard]@bulkapi.com"", ""providerAgentAddress"": ""[wildcard]*[/wildcard]@bulkapi.com"", ""defaultStation"": null}, {""channelId"": ""Voice"", ""channelProvider"": {""channelProviderId"": ""a185b1f9779e7284d5744c16a3d36393"", ""address"": ""7775130733193""}, ""providerAgentId"": ""[wildcard]*[/wildcard]"", ""providerAgentAddress"": ""[wildcard]*[/wildcard]"", ""defaultStation"": {""extension"": ""[wildcard]*[/wildcard]""}}], ""queues"": [], ""matchingAttributes"": [], ""profiles"": [{""agentProfileId"": ""[wildcard]*[/wildcard]"", ""name"": ""default"", ""channels"": [{""channelId"": ""Email"", ""channelProvider"": {""channelProviderId"": ""8b7c2fd5-3abc-457e-ada8-33d0ce98bf3d"", ""address"": ""8b7c2fd5-3abc-457e-ada8-33d0ce98bf3d""}, ""providerAgentId"": ""[wildcard]*[/wildcard]@bulkapi.com"", ""providerAgentAddress"": ""[wildcard]*[/wildcard]@bulkapi.com"", ""multiplicity"": 1, ""integrationMultiplicities"": null, ""excludeNewContactChannels"": null, ""autoAnswer"": true, ""afterContactWork"": true, ""rona"": 30, ""password"": null, ""defaultStation"": null, ""channelIntegrations"": null}, {""channelId"": ""Chat"", ""channelProvider"": {""channelProviderId"": ""1141bb36-5589-4232-ae08-70b740e67299"", ""address"": ""1141bb36-5589-4232-ae08-70b740e67299""}, ""providerAgentId"": ""[wildcard]*[/wildcard]@bulkapi.com"", ""providerAgentAddress"": ""[wildcard]*[/wildcard]@bulkapi.com"", ""multiplicity"": 1, ""integrationMultiplicities"": null, ""excludeNewContactChannels"": null, ""autoAnswer"": false, ""afterContactWork"": false, ""rona"": 30, ""password"": null, ""defaultStation"": null, ""channelIntegrations"": null}, {""channelId"": ""Voice"", ""channelProvider"": {""channelProviderId"": ""a185b1f9779e7284d5744c16a3d36393"", ""address"": ""7775130733193""}, ""providerAgentId"": ""[wildcard]*[/wildcard]"", ""providerAgentAddress"": ""[wildcard]*[/wildcard]"", ""multiplicity"": 1, ""integrationMultiplicities"": null, ""excludeNewContactChannels"": null, ""autoAnswer"": true, ""afterContactWork"": true, ""rona"": 30, ""password"": null, ""defaultStation"": {""extension"": ""[wildcard]*[/wildcard]""}, ""channelIntegrations"": null}]}], ""strategy"": ""GREATEST_NEED"", ""tenantId"": ""XLMUYK"", ""accountId"": ""XLMUYK""}]"
"≈10K","warn","vrc-rona-service","Invalid value as ReasonCode {""timestamp"": ""[wildcard]yyyy-MM-ddTHH:mm:ss.SSSXXX[/wildcard]"", ""agentId"": ""[wildcard]*[/wildcard]"", ""channels"": [{""channelId"": ""Email"", ""channelProvider"": {""channelProviderId"": ""8b7c2fd5-3abc-457e-ada8-33d0ce98bf3d"", ""address"": ""8b7c2fd5-3abc-457e-ada8-33d0ce98bf3d""}, ""providerAgentId"": ""[wildcard]*[/wildcard]@bulkapi.com"", ""providerAgentAddress"": ""[wildcard]*[/wildcard]@bulkapi.com"", ""defaultStation"": null}, {""channelId"": ""Chat"", ""channelProvider"": {""channelProviderId"": ""1141bb36-5589-4232-ae08-70b740e67299"", ""address"": ""1141bb36-5589-4232-ae08-70b740e67299""}, ""providerAgentId"": ""[wildcard]*[/wildcard]@bulkapi.com"", ""providerAgentAddress"": ""[wildcard]*[/wildcard]@bulkapi.com"", ""defaultStation"": null}, {""channelId"": ""Voice"", ""channelProvider"": {""channelProviderId"": ""a185b1f9779e7284d5744c16a3d36393"", ""address"": ""7775130733193""}, ""providerAgentId"": ""[wildcard]*[/wildcard]"", ""providerAgentAddress"": ""[wildcard]*[/wildcard]"", ""defaultStation"": {""extension"": ""[wildcard]*[/wildcard]""}}], ""queues"": [], ""matchingAttributes"": [], ""profiles"": [{""agentProfileId"": ""[wildcard]*[/wildcard]"", ""name"": ""default"", ""channels"": [{""channelId"": ""Email"", ""channelProvider"": {""channelProviderId"": ""8b7c2fd5-3abc-457e-ada8-33d0ce98bf3d"", ""address"": ""8b7c2fd5-3abc-457e-ada8-33d0ce98bf3d""}, ""providerAgentId"": ""[wildcard]*[/wildcard]@bulkapi.com"", ""providerAgentAddress"": ""[wildcard]*[/wildcard]@bulkapi.com"", ""multiplicity"": 1, ""autoAnswer"": true, ""afterContactWork"": true, ""rona"": 30, ""password"": null, ""defaultStation"": null}, {""channelId"": ""Chat"", ""channelProvider"": {""channelProviderId"": ""1141bb36-5589-4232-ae08-70b740e67299"", ""address"": ""1141bb36-5589-4232-ae08-70b740e67299""}, ""providerAgentId"": ""[wildcard]*[/wildcard]@bulkapi.com"", ""providerAgentAddress"": ""[wildcard]*[/wildcard]@bulkapi.com"", ""multiplicity"": 1, ""autoAnswer"": false, ""afterContactWork"": false, ""rona"": 30, ""password"": null, ""defaultStation"": null}, {""channelId"": ""Voice"", ""channelProvider"": {""channelProviderId"": ""a185b1f9779e7284d5744c16a3d36393"", ""address"": ""7775130733193""}, ""providerAgentId"": ""[wildcard]*[/wildcard]"", ""providerAgentAddress"": ""[wildcard]*[/wildcard]"", ""multiplicity"": 1, ""autoAnswer"": true, ""afterContactWork"": true, ""rona"": 30, ""password"": null, ""defaultStation"": {""extension"": ""[wildcard]*[/wildcard]""}}]}], ""strategy"": ""GREATEST_NEED"", ""tenantId"": ""XLMUYK"", ""accountId"": ""XLMUYK"", ""deletePending"": false} in the ConsumerRecord"
"≈10K","info","vrc-metrics-service","methodName:processCahcedAgents - Check for agentId [wildcard]*[/wildcard] in admin cache returned: AdminAgent(id=[wildcard]*[/wildcard], tenantId=[wildcard]*[/wildcard], attributes=Attributes(attributeList=[channel.[wildcard]*[/wildcard], [wildcard]*[/wildcard].[wildcard]*[/wildcard], [wildcard]*[/wildcard].[wildcard]*[/wildcard], [wildcard]*[/wildcard].[wildcard]*[/wildcard][wildcard]*[/wildcard]]), channels=[[wildcard]*[/wildcard][wildcard]*[/wildcard]], previousChannels=[[wildcard]*[/wildcard]])"
"≈10K","info","vrc-metrics-service","MethodName:processAdminAgentEvent - Received AdminAgentEvent: {""timestamp"": ""[wildcard]yyyy-MM-ddTHH:mm:ss.SSSXXX[/wildcard]"", ""agentId"": ""[wildcard]*[/wildcard]"", ""channels"": [{""channelId"": ""Email"", ""channelProvider"": {""channelProviderId"": ""8b7c2fd5-3abc-457e-ada8-33d0ce98bf3d"", ""address"": ""8b7c2fd5-3abc-457e-ada8-33d0ce98bf3d""}, ""providerAgentId"": ""[wildcard]*[/wildcard]@bulkapi.com"", ""providerAgentAddress"": ""[wildcard]*[/wildcard]@bulkapi.com"", ""defaultStation"": null}, {""channelId"": ""Chat"", ""channelProvider"": {""channelProviderId"": ""1141bb36-5589-4232-ae08-70b740e67299"", ""address"": ""1141bb36-5589-4232-ae08-70b740e67299""}, ""providerAgentId"": ""[wildcard]*[/wildcard]@bulkapi.com"", ""providerAgentAddress"": ""[wildcard]*[/wildcard]@bulkapi.com"", ""defaultStation"": null}, {""channelId"": ""Voice"", ""channelProvider"": {""channelProviderId"": ""a185b1f9779e7284d5744c16a3d36393"", ""address"": ""7775130733193""}, ""providerAgentId"": ""[wildcard]*[/wildcard]"", ""providerAgentAddress"": ""[wildcard]*[/wildcard]"", ""defaultStation"": {""extension"": ""[wildcard]*[/wildcard]""}}], ""queues"": [], ""matchingAttributes"": [], ""profiles"": [{""agentProfileId"": ""[wildcard]*[/wildcard]"", ""name"": ""default"", ""channels"": [{""channelId"": ""Email"", ""channelProvider"": {""channelProviderId"": ""8b7c2fd5-3abc-457e-ada8-33d0ce98bf3d"", ""address"": ""8b7c2fd5-3abc-457e-ada8-33d0ce98bf3d""}, ""providerAgentId"": ""[wildcard]*[/wildcard]@bulkapi.com"", ""providerAgentAddress"": ""[wildcard]*[/wildcard]@bulkapi.com"", ""multiplicity"": 1, ""rona"": 30, ""password"": null, ""defaultStation"": null}, {""channelId"": ""Chat"", ""channelProvider"": {""channelProviderId"": ""1141bb36-5589-4232-ae08-70b740e67299"", ""address"": ""1141bb36-5589-4232-ae08-70b740e67299""}, ""providerAgentId"": ""[wildcard]*[/wildcard]@bulkapi.com"", ""providerAgentAddress"": ""[wildcard]*[/wildcard]@bulkapi.com"", ""multiplicity"": 1, ""rona"": 30, ""password"": null, ""defaultStation"": null}, {""channelId"": ""Voice"", ""channelProvider"": {""channelProviderId"": ""a185b1f9779e7284d5744c16a3d36393"", ""address"": ""7775130733193""}, ""providerAgentId"": ""[wildcard]*[/wildcard]"", ""providerAgentAddress"": ""[wildcard]*[/wildcard]"", ""multiplicity"": 1, ""rona"": 30, ""password"": null, ""defaultStation"": {""extension"": ""[wildcard]*[/wildcard]""}}]}], ""strategy"": ""GREATEST_NEED"", ""tenantId"": ""XLMUYK"", ""accountId"": ""XLMUYK""}"
"≈10K","info","ix-dsk-admin-connector","consumeRecords, Notifying message listeners of [AdfProvider] event, topic: [[wildcard]*[/wildcard]], offset:[[wildcard][780-191317][/wildcard]], key: [[wildcard]*[/wildcard]], value: {""providerId"": ""[wildcard]*[/wildcard]"", ""accountId"": ""[wildcard]*[/wildcard]"", ""channels"": [""[wildcard]*[/wildcard]""], ""name"": ""[wildcard]*[/wildcard]"", ""type"": [wildcard]*[/wildcard], ""sipHostPreferenceId"": [wildcard]*[/wildcard], ""sipHost"": [wildcard]*[/wildcard], ""sipPortPreferenceId"": [wildcard]*[/wildcard], ""sipPort"": [wildcard]*[/wildcard], ""sipSecurePreferenceId"": [wildcard]*[/wildcard], ""sipSecure"": [wildcard]*[/wildcard], ""sipRealmPreferenceId"": [wildcard]*[/wildcard], ""sipRealm"": [wildcard]*[/wildcard]}"
"≈10K","info","ix-virtual-load-tester","[ACW detected, waiting 12s before completing, agent:[wildcard]*[/wildcard]@avaya-dev9.ec.avayacloud.com [AFTER_CONTACT_WORK], channel VOICE, interactionType: CALLED engagementId: [wildcard]*[/wildcard], interactionId: [wildcard]*[/wildcard], dialogId [wildcard]*[/wildcard]]"
"≈10K","info","media-store","Folder PUBLIC with uuid 6268439b-854a-355b-aca2-552877f25391 added successfully, time taken: [wildcard][3-8][/wildcard]"
"≈10K","info","ix-dsk-connector","Adding reasonCodeUuid to cache, key=[[wildcard]*[/wildcard]] value=[[wildcard]*[/wildcard]]"
"≈10K","info","journey-service","Sending query to elasticsearch. (identifiers={""emailAddresses"":[""xxxxtomer@test.com""],""phoneNumbers"":[""xxxx1231231""]}, fromDate=[wildcard][1668148132525-1702275905055][/wildcard], toDate=[wildcard][1670803199595-1710223706262][/wildcard], tenant=[wildcard]*[/wildcard], coversationId=Optional.empty, agentId=Optional.empty, channelIds=Optional.empty, pageRequest=Optional[Page request [number: [wildcard][1-12][/wildcard], size [wildcard][20-50][/wildcard], sort: UNSORTED]], traceId=[wildcard]*[/wildcard]"
"≈10K","info","vrc-rona-service","process, processed : taskId==[[wildcard]*[/wildcard]], topic=[[wildcard]*[/wildcard]], [[wildcard]*[/wildcard]] Event, key=[[wildcard]*[/wildcard]]"
"≈10K","info","vrc-rona-service","getConsumerLagInfo: Stream Tasks running in this pod for org.apache.kafka.streams.KafkaStreams@[wildcard]*[/wildcard]are active-tasks [[wildcard][0-1][/wildcard], [wildcard][2-3][/wildcard], [wildcard][4-5][/wildcard], [wildcard][6-7][/wildcard], [wildcard][8-9][/wildcard], [wildcard][10-11][/wildcard]] and standBy-tasks [[wildcard][0-1][/wildcard], [wildcard][2-3][/wildcard], [wildcard][4-5][/wildcard], [wildcard][6-7][/wildcard], [wildcard][8-9][/wildcard], [wildcard][10-11][/wildcard]]."
"≈10K","info","vrc-rona-service","consumeRecords, Notifying message listeners of [Agent] event, topic: [[wildcard]*[/wildcard]], offset:[[wildcard][37549-43773][/wildcard]], key: [[wildcard]*[/wildcard]], value: {""timestamp"": ""[wildcard]yyyy-MM-ddTHH:mm:ss.SSSXXX[/wildcard]"", ""agentId"": ""[wildcard]*[/wildcard]"", ""channels"": [{""channelId"": ""Email"", ""channelProvider"": {""channelProviderId"": ""8b7c2fd5-3abc-457e-ada8-33d0ce98bf3d"", ""address"": ""8b7c2fd5-3abc-457e-ada8-33d0ce98bf3d""}, ""providerAgentId"": ""[wildcard]*[/wildcard]@bulkapi.com"", ""providerAgentAddress"": ""[wildcard]*[/wildcard]@bulkapi.com"", ""defaultStation"": null}, {""channelId"": ""Chat"", ""channelProvider"": {""channelProviderId"": ""1141bb36-5589-4232-ae08-70b740e67299"", ""address"": ""1141bb36-5589-4232-ae08-70b740e67299""}, ""providerAgentId"": ""[wildcard]*[/wildcard]@bulkapi.com"", ""providerAgentAddress"": ""[wildcard]*[/wildcard]@bulkapi.com"", ""defaultStation"": null}, {""channelId"": ""Voice"", ""channelProvider"": {""channelProviderId"": ""a185b1f9779e7284d5744c16a3d36393"", ""address"": ""7775130733193""}, ""providerAgentId"": ""[wildcard]*[/wildcard]"", ""providerAgentAddress"": ""[wildcard]*[/wildcard]"", ""defaultStation"": {""extension"": ""[wildcard]*[/wildcard]""}}], ""queues"": [], ""matchingAttributes"": [], ""profiles"": [{""agentProfileId"": ""[wildcard]*[/wildcard]"", ""name"": ""default"", ""channels"": [{""channelId"": ""Email"", ""channelProvider"": {""channelProviderId"": ""8b7c2fd5-3abc-457e-ada8-33d0ce98bf3d"", ""address"": ""8b7c2fd5-3abc-457e-ada8-33d0ce98bf3d""}, ""providerAgentId"": ""[wildcard]*[/wildcard]@bulkapi.com"", ""providerAgentAddress"": ""[wildcard]*[/wildcard]@bulkapi.com"", ""multiplicity"": 1, ""autoAnswer"": true, ""afterContactWork"": true, ""rona"": 30, ""password"": null, ""defaultStation"": null}, {""channelId"": ""Chat"", ""channelProvider"": {""channelProviderId"": ""1141bb36-5589-4232-ae08-70b740e67299"", ""address"": ""1141bb36-5589-4232-ae08-70b740e67299""}, ""providerAgentId"": ""[wildcard]*[/wildcard]@bulkapi.com"", ""providerAgentAddress"": ""[wildcard]*[/wildcard]@bulkapi.com"", ""multiplicity"": 1, ""autoAnswer"": false, ""afterContactWork"": false, ""rona"": 30, ""password"": null, ""defaultStation"": null}, {""channelId"": ""Voice"", ""channelProvider"": {""channelProviderId"": ""a185b1f9779e7284d5744c16a3d36393"", ""address"": ""7775130733193""}, ""providerAgentId"": ""[wildcard]*[/wildcard]"", ""providerAgentAddress"": ""[wildcard]*[/wildcard]"", ""multiplicity"": 1, ""autoAnswer"": true, ""afterContactWork"": true, ""rona"": 30, ""password"": null, ""defaultStation"": {""extension"": ""[wildcard]*[/wildcard]""}}]}], ""strategy"": ""GREATEST_NEED"", ""tenantId"": ""XLMUYK"", ""accountId"": ""XLMUYK"", ""deletePending"": false}"
"≈10K","info","vrc-matching-engagement","messageReceived, adding queue to adminQueueCache [AdminQueue(id=[wildcard]*[/wildcard], name=[wildcard]*[/wildcard], accountId=[wildcard]*[/wildcard])]"
"≈10K","info","vrc-matching-engagement","messageReceived, received an AdminQueue event key=[[wildcard]*[/wildcard]], value=[{""timestamp"": ""[wildcard]yyyy-MM-ddTHH:mm:ss.SSSXXX[/wildcard]"", ""queueId"": ""[wildcard]*[/wildcard]"", ""name"": ""[wildcard]*[/wildcard]"", ""description"": ""[wildcard]*[/wildcard][wildcard]*[/wildcard]"", ""accountDefault"": [wildcard]*[/wildcard], ""accountId"": ""[wildcard]*[/wildcard]""}]"
"≈10K","error","outbound-contacts-api","at reactor.core.publisher.[wildcard]*[/wildcard].subscribe([wildcard]*[/wildcard].java:[wildcard][53-4495][/wildcard])"
"≈10K","info","vrc-availability-service","consumeRecords, Notifying message listeners of [Agent] event, topic: [[wildcard]*[/wildcard]], offset:[[wildcard][2697-12956][/wildcard]], key: [[wildcard]*[/wildcard]], value: {""timestamp"": ""[wildcard]yyyy-MM-ddTHH:mm:ss.SSSXXX[/wildcard]"", ""agentId"": ""[wildcard]*[/wildcard]"", ""channels"": [], ""queues"": [], ""matchingAttributes"": [], ""profiles"": [{""agentProfileId"": ""[wildcard]*[/wildcard]"", ""name"": ""default"", ""channels"": []}], ""strategy"": ""GREATEST_NEED"", ""tenantId"": ""[wildcard]*[/wildcard]"", ""accountId"": ""[wildcard]*[/wildcard]""}"
"≈10K","info","vrc-availability-service","consumeRecords, Notifying message listeners of [Agent] event, topic: [[wildcard]*[/wildcard]], offset:[[wildcard][11144-16730][/wildcard]], key: [[wildcard]*[/wildcard]], value: {""timestamp"": ""[wildcard]yyyy-MM-ddTHH:mm:ss.SSSXXX[/wildcard]"", ""agentId"": ""[wildcard]*[/wildcard]"", ""channels"": [{""channelId"": ""Voice"", ""channelProvider"": {""channelProviderId"": ""eb33ae706ef17050e46799c65f9eb4bf"", ""address"": ""7775130733018""}, ""providerAgentId"": ""[wildcard]*[/wildcard]"", ""providerAgentAddress"": ""[wildcard]*[/wildcard]"", ""defaultStation"": {""extension"": ""[wildcard]*[/wildcard]""}}], ""queues"": [], ""matchingAttributes"": [{""category"": ""Department"", ""value"": ""Dummy""}], ""profiles"": [{""agentProfileId"": ""[wildcard]*[/wildcard]"", ""name"": ""default"", ""channels"": [{""channelId"": ""Voice"", ""channelProvider"": {""channelProviderId"": ""eb33ae706ef17050e46799c65f9eb4bf"", ""address"": ""7775130733018""}, ""providerAgentId"": ""[wildcard]*[/wildcard]"", ""providerAgentAddress"": ""[wildcard]*[/wildcard]"", ""multiplicity"": 1, ""integrationMultiplicities"": null, ""excludeNewContactChannels"": null, ""autoAnswer"": true, ""afterContactWork"": false, ""rona"": 30, ""password"": null, ""defaultStation"": {""extension"": ""[wildcard]*[/wildcard]""}, ""channelIntegrations"": null}]}], ""strategy"": ""GREATEST_NEED"", ""tenantId"": ""YOVRUD"", ""accountId"": ""YOVRUD""}"
"≈10K","info","vrc-availability-service","messageReceived, adding Admin Agent to cache, value=[{""timestamp"": ""[wildcard]yyyy-MM-ddTHH:mm:ss.SSSXXX[/wildcard]"", ""agentId"": ""[wildcard]*[/wildcard]"", ""channels"": [], ""queues"": [], ""matchingAttributes"": [], ""profiles"": [{""agentProfileId"": ""[wildcard]*[/wildcard]"", ""name"": ""default"", ""channels"": []}], ""strategy"": ""GREATEST_NEED"", ""tenantId"": ""LMENHZ"", ""accountId"": ""LMENHZ""}]"
"≈10K","info","vrc-metrics-service","methodName:updateAgent - Agent [wildcard]*[/wildcard] entry is missing from agentMap, can't update an agent with no previous state, adding new agent to agentMap: AgentEntry(id=[wildcard]*[/wildcard], tenantId=[wildcard]*[/wildcard], attributes=Attributes(attributeList=[channel.chat, channel.email[wildcard]*[/wildcard]]), activeServiceSet=[], channels=[chat, email], previousChannels=[], channelToStateMap={chat=LOGGED_OUT, email=LOGGED_OUT}, channelToAuxStateMap={chat=AUX_STATE_READY, email=AUX_STATE_READY}, writeCounter=0, readCounter=0, taskId=0)"
"≈10K","error","pre-routing","nc: bad address 'digital-redis'"
"≈10K","info","ix-dsk-admin-connector","consumeRecords, Notifying message listeners of [AdfService] event, topic: [[wildcard]*[/wildcard]], offset:[[wildcard][1091-265737][/wildcard]], key: [[wildcard]*[/wildcard]], value: {""queueId"": ""[wildcard]*[/wildcard]"", ""queueName"": ""[wildcard]*[/wildcard]"", ""adfServiceId"": ""[wildcard]*[/wildcard]"", ""adfProviderId"": ""[wildcard]*[/wildcard]"", ""accountId"": ""[wildcard]*[/wildcard]""}"
"≈10K","info","analytics-cdr-consolidator","handleInputEvent(): Keys=[[[wildcard]*[/wildcard]]], measureData=[{[wildcard]*[/wildcard]=[wildcard]*[/wildcard]}], accountId=[wildcard]*[/wildcard], eventUniqueId=[wildcard]*[/wildcard], tableName=DialogDetail"
"≈10K","info","vrc-matching-service","Sending AgentAvailabilityEvent to match engine AgentAvailabilityFromAvro(agentId=[wildcard]*[/wildcard], tenantId=[wildcard]*[/wildcard], channels=[ChannelFromAvro(channelProviderId=[wildcard]*[/wildcard], channelId=[wildcard]*[/wildcard], derivedAvailable=[wildcard]*[/wildcard], loggedOut=[wildcard]*[/wildcard], activeEngagementCount=0, triggeringEngagementId=null)], offerResolvedType=null, offerResolvedChannel=null)"
"≈10K","info","ix-virtual-load-tester","[Agent[wildcard]*[/wildcard]@[wildcard]*[/wildcard]has changed state from READY to [wildcard]*[/wildcard]. Requested state is READY., agent:[wildcard]*[/wildcard]@[wildcard]*[/wildcard], state [wildcard]*[/wildcard]]"
"≈10K","warn","ix-dsk-media-connector","Exception caught during Deserialization, taskId: [wildcard]*[/wildcard], topic: desktop-connector-dead-letter-queue, partition: [wildcard][0-5][/wildcard], offset: [wildcard][9-4830][/wildcard]"
"≈10K","info","vrc-matching-engagement","getConsumerLagInfo: Stream Tasks running in this pod for org.apache.kafka.streams.KafkaStreams@[wildcard]*[/wildcard]are active-tasks [[wildcard][0-1][/wildcard], [wildcard][2-3][/wildcard], [wildcard][4-5][/wildcard], [wildcard][6-7][/wildcard], [wildcard][8-9][/wildcard], [wildcard][10-11][/wildcard]] and standBy-tasks [[wildcard][0-1][/wildcard], [wildcard][2-3][/wildcard], [wildcard][4-5][/wildcard], [wildcard][6-7][/wildcard], [wildcard][8-9][/wildcard], [wildcard][10-11][/wildcard]]."
"≈10K","info","vrc-matching-engagement","messageReceived, adding attribute to adminAttributeCache [AdminAttribute(id=[wildcard]*[/wildcard], value=[wildcard]*[/wildcard], category=AdminCategory(name=[wildcard]*[/wildcard], tenant=AdminTenant(id=[wildcard]*[/wildcard])))]"
"≈10K","info","vrc-availability-service","getConsumerLagInfo: Stream Tasks running in this pod for org.apache.kafka.streams.KafkaStreams@[wildcard]*[/wildcard]are active-tasks [1] and standBy-tasks []."
"≈10K","info","vrc-availability-service","messageReceived, received an Admin Agent event value=[{""timestamp"": ""[wildcard]yyyy-MM-ddTHH:mm:ss.SSSXXX[/wildcard]"", ""agentId"": ""[wildcard]*[/wildcard]"", ""channels"": [{""channelId"": ""Voice"", ""channelProvider"": {""channelProviderId"": ""eb33ae706ef17050e46799c65f9eb4bf"", ""address"": ""7775130733018""}, ""providerAgentId"": ""[wildcard]*[/wildcard]"", ""providerAgentAddress"": ""[wildcard]*[/wildcard]"", ""defaultStation"": {""extension"": ""[wildcard]*[/wildcard]""}}], ""queues"": [], ""matchingAttributes"": [{""category"": ""Department"", ""value"": ""Dummy""}], ""profiles"": [{""agentProfileId"": ""[wildcard]*[/wildcard]"", ""name"": ""default"", ""channels"": [{""channelId"": ""Voice"", ""channelProvider"": {""channelProviderId"": ""eb33ae706ef17050e46799c65f9eb4bf"", ""address"": ""7775130733018""}, ""providerAgentId"": ""[wildcard]*[/wildcard]"", ""providerAgentAddress"": ""[wildcard]*[/wildcard]"", ""multiplicity"": 1, ""integrationMultiplicities"": null, ""excludeNewContactChannels"": null, ""autoAnswer"": true, ""afterContactWork"": false, ""rona"": 30, ""password"": null, ""defaultStation"": {""extension"": ""[wildcard]*[/wildcard]""}, ""channelIntegrations"": null}]}], ""strategy"": ""GREATEST_NEED"", ""tenantId"": ""YOVRUD"", ""accountId"": ""YOVRUD""}]"
"≈10K","info","vrc-availability-service","setActiveTasksOffset. Current LagInfo : , partition : admin-agent-2, endOffset: [wildcard][8-70100][/wildcard], commitOffset: [wildcard][8-70100][/wildcard], lag: 0, partition : admin-agent-0, endOffset: [wildcard][15-76079][/wildcard], commitOffset: [wildcard][15-76079][/wildcard], lag: 0"
"≈10K","warn","vrc-rona-service","Invalid value as ReasonCode {""timestamp"": ""[wildcard]yyyy-MM-ddTHH:mm:ss.SSSXXX[/wildcard]"", ""agentId"": ""[wildcard]*[/wildcard]"", ""channels"": [{""channelId"": ""[wildcard]*[/wildcard]"", ""channelProvider"": {""channelProviderId"": ""[wildcard]*[/wildcard]"", ""address"": ""[wildcard]*[/wildcard]""}, ""providerAgentId"": ""[wildcard]*[/wildcard]@[wildcard]*[/wildcard]"", ""providerAgentAddress"": ""[wildcard]*[/wildcard]@[wildcard]*[/wildcard]"", ""defaultStation"": null}], ""queues"": [{""queueId"": ""[wildcard]*[/wildcard]"", ""proficiency"": [wildcard][4-13][/wildcard]}], ""matchingAttributes"": [{""category"": ""[wildcard]*[/wildcard]"", ""value"": ""[wildcard]*[/wildcard]""}, {""category"": ""[wildcard]*[/wildcard]"", ""value"": ""[wildcard]*[/wildcard]""}], ""profiles"": [{""agentProfileId"": ""[wildcard]*[/wildcard]"", ""name"": ""default"", ""channels"": [{""channelId"": ""[wildcard]*[/wildcard]"", ""channelProvider"": {""channelProviderId"": ""[wildcard]*[/wildcard]"", ""address"": ""[wildcard]*[/wildcard]""}, ""providerAgentId"": ""[wildcard]*[/wildcard]@[wildcard]*[/wildcard]"", ""providerAgentAddress"": ""[wildcard]*[/wildcard]@[wildcard]*[/wildcard]"", ""multiplicity"": [wildcard][1-4][/wildcard], ""autoAnswer"": false, ""afterContactWork"": [wildcard]*[/wildcard], ""rona"": 30, ""password"": null, ""defaultStation"": null}]}], ""strategy"": ""GREATEST_NEED"", ""tenantId"": ""[wildcard]*[/wildcard]"", ""accountId"": ""[wildcard]*[/wildcard]"", ""deletePending"": false} in the ConsumerRecord"
"≈10K","info","vrc-metrics-service","methodName:process - Updated queueEngagementMetricsCache; serviceKey=[wildcard]*[/wildcard].[wildcard]*[/wildcard]|channel.[wildcard]*[/wildcard]; metrics={""accountId"": ""[wildcard]*[/wildcard]"", ""queueId"": ""[wildcard]*[/wildcard]"", ""channelId"": ""[wildcard]*[/wildcard]"", ""attributeKey"": null, ""priority"": [wildcard][1-5][/wildcard], ""waitingEngagementCount"": ""0"", ""processingEngagementCount"": ""0"", ""completedEngagementCount"": ""[wildcard][0-4][/wildcard]"", ""oldestEngagementWaiting"": ""0"", ""rollingASA"": ""[wildcard][1-799][/wildcard]"", ""expectedWaitTime"": ""[wildcard][0-1162][/wildcard]"", ""waitingSpecializedEngagementCount"": ""0"", ""processingSpecializedEngagementCount"": ""[wildcard][0-1][/wildcard]"", ""completedSpecializedEngagementCount"": ""[wildcard][0-13896][/wildcard]"", ""oldestSpecializedEngagementWaiting"": ""0"", ""oldestEngagementWaitingTimestamp"": 0, ""oldestSpecializedEngagementWaitingTimestamp"": 0, ""instanceId"": ""[wildcard]*[/wildcard]"", ""id"": ""[wildcard]*[/wildcard]"", ""timestamp"": [wildcard][1710137141834-1710138443987][/wildcard]}; cacheSize=[wildcard][174-314][/wildcard]"
"≈10K","info","vrc-metrics-service","methodName:createLogoutEvent - sending UpsertAgentAvailabilityMessage: AgentChannelState(id=[wildcard]*[/wildcard], tenantId=YOVRUD, channelToStateMap={chat=LOGGED_OUT, email=LOGGED_OUT}, channelToAuxStateMap={chat=AUX_STATE_READY, email=AUX_STATE_READY})"
"≈10K","info","vrc-metrics-service","methodName:upsertAgentAvailability - Agent [wildcard]*[/wildcard] newAgentState AgentEntry(id=[wildcard]*[/wildcard], tenantId=XLMUYK, attributes=Attributes(attributeList=[channel.chat, channel.email, channel.voice]), activeServiceSet=[], channels=[voice, chat, email], previousChannels=[], channelToStateMap={voice=LOGGED_OUT, chat=LOGGED_OUT, email=LOGGED_OUT}, channelToAuxStateMap={voice=AUX_STATE_READY, chat=AUX_STATE_READY, email=AUX_STATE_READY}, writeCounter=0, readCounter=0, taskId=0) ."
"≈10K","info","outbound-contacts-actors","[wildcard]yyyy-MM-dd HH:mm:ss.SSS[/wildcard] [INFO ] [outbound-contacts-actors-akka.actor.[wildcard]*[/wildcard]] com.avaya.outbound.contact.actors.[wildcard]*[/wildcard].[wildcard]*[/wildcard] -- cleanContactList -- [wildcard]*[/wildcard] [wildcard]*[/wildcard] [wildcard]*[/wildcard] [wildcard]*[/wildcard] contact list - [wildcard]*[/wildcard]"
"≈10K","info","outbound-contacts-actors","[wildcard]yyyy-MM-dd HH:mm:ss.SSS[/wildcard] [INFO ] [outbound-contacts-actors-akka.actor.[wildcard]*[/wildcard]] com.avaya.outbound.contact.actors.actor.[wildcard]*[/wildcard] -- [wildcard]*[/wildcard] -- [wildcard]*[/wildcard] [wildcard]*[/wildcard] [wildcard]*[/wildcard] [wildcard]*[/wildcard] [wildcard]*[/wildcard] [wildcard]*[/wildcard] id: [wildcard]*[/wildcard]"
"≈10K","error","provider-azure","objectVersion: """""
"≈10K","info","vrc-matching-service","findOffsetsForActiveTasks. Current LagInfo :"
"≈10K","info","vrc-matching-service","Sending AgentAvailabilityEvent to match engine AgentAvailabilityFromAvro(agentId=[wildcard]*[/wildcard], tenantId=[wildcard]*[/wildcard], channels=[ChannelFromAvro(channelProviderId=[wildcard]*[/wildcard], channelId=[wildcard]*[/wildcard], derivedAvailable=false, loggedOut=[wildcard]*[/wildcard], activeEngagementCount=0, triggeringEngagementId=null), ChannelFromAvro(channelProviderId=[wildcard]*[/wildcard], channelId=[wildcard]*[/wildcard], derivedAvailable=false, loggedOut=[wildcard]*[/wildcard], activeEngagementCount=0, triggeringEngagementId=null), ChannelFromAvro(channelProviderId=[wildcard]*[/wildcard], channelId=[wildcard]*[/wildcard], derivedAvailable=false, loggedOut=[wildcard]*[/wildcard], activeEngagementCount=0, triggeringEngagementId=null), ChannelFromAvro(channelProviderId=[wildcard]*[/wildcard], channelId=[wildcard]*[/wildcard], derivedAvailable=false, loggedOut=[wildcard]*[/wildcard], activeEngagementCount=0, triggeringEngagementId=null)], offerResolvedType=null, offerResolvedChannel=null)"
"≈10K","info","cbs-adapter","Successfully rest-template is setup"
"≈10K","info","vrc-matching-service","getConsumerLagInfo: Stream Tasks running in this pod for org.apache.kafka.streams.KafkaStreams@[wildcard]*[/wildcard]are active-tasks [0] and standBy-tasks []."
"≈10K","info","media-store","Successfully created root folder for account: KUQAKF, folderId: [wildcard]*[/wildcard], name: [wildcard]*[/wildcard]"
"≈10K","info","ix-dsk-connector","intx [wildcard]*[/wildcard] = [wildcard][-1-256][/wildcard] {product} {default}"
"≈10K","error","ix-virtual-load-tester","[Error in influx_db.publish_stats. Message: Request failed with status code 400, Request failed with status code 400, Status: 400, Body:[object Object], Error: Request failed with status code 400 at createError (/node_modules/axios/lib/core/createError.js:16:15) at settle (/node_modules/axios/lib/core/settle.js:17:12) at IncomingMessage.handleStreamEnd (/node_modules/axios/lib/adapters/http.js:269:11) at /node_modules/dd-trace/packages/dd-trace/src/scope/base.js:54:19 at Scope._activate (/node_modules/dd-trace/packages/dd-trace/src/scope/async_resource.js:57:14) at Scope.activate (/node_modules/dd-trace/packages/dd-trace/src/scope/base.js:12:19) at IncomingMessage.bound (/node_modules/dd-trace/packages/dd-trace/src/scope/base.js:53:20) at IncomingMessage.emit (node:events:529:35) at endReadableNT (node:internal/streams/readable:1400:12) at process.processTicksAndRejections (node:internal/process/task_queues:82:21)]"
"≈10K","info","outbound-contacts-api","[wildcard]yyyy-MM-dd HH:mm:ss.SSS[/wildcard] [INFO ] [[wildcard]*[/wildcard]] com.avaya.outbound.contact.api.controller.ContactListController -- _getAllContactLists -- Account Id: GZJLCF - Received request to fetch all contact lists"
"≈10K","error","media-store","Error occured while [wildcard]*[/wildcard] polling kafka messages"
"≈10K","info","outbound-campaigns-actors","[wildcard]yyyy-MM-dd HH:mm:ss.SSS[/wildcard] [INFO ] [outbound-campaigns-actors-akka.actor.[wildcard]*[/wildcard]] com.avaya.outbound.campaign.actors.actor.[wildcard]*[/wildcard] -- [wildcard]*[/wildcard] -- [wildcard]*[/wildcard] [wildcard]*[/wildcard] for [wildcard]*[/wildcard]: [wildcard]*[/wildcard]"
"≈10K","info","ix-dsk-connector","Processing inbound event - Adf Request key=[[wildcard]*[/wildcard]] value=[id: ""[wildcard]*[/wildcard]"" timestamp { seconds: [wildcard][1710137095-1710138087][/wildcard] nanos: [wildcard][99893961-526094334][/wildcard] } type: [wildcard]*[/wildcard] client_id: ""[wildcard]*[/wildcard]"" token: ""****"" tenant_id: ""[wildcard]*[/wildcard]"" application_version: ""[wildcard]*[/wildcard]"" body { type_url: ""type.googleapis.com[wildcard]/*[/wildcard]"" value: "" [wildcard]*[/wildcard]"" } trace_id: ""00000000000000000000000000000000""] partition=[[wildcard][1-11][/wildcard]] taskId=[[wildcard]*[/wildcard]] offset=[[wildcard][353845-1223021][/wildcard]] Request time=[[wildcard]yyyy-MM-ddTHH:mm:ssXXX[/wildcard]] Time now =[seconds: [wildcard][1710137095-1710138087][/wildcard] nanos: [wildcard][149236219-613564961][/wildcard]]"
"≈10K","info","ix-dsk-connector","sending [[wildcard]*[/wildcard]]:[COMPLETED] to ADF, [id: ""[wildcard]*[/wildcard]"" timestamp { seconds: [wildcard][1710137161-1710138394][/wildcard] nanos: [wildcard][271104379-763268908][/wildcard] } type: [wildcard]*[/wildcard] client_id: ""[wildcard]*[/wildcard]"" state: COMPLETED token: ""****"" tenant_id: ""[wildcard]*[/wildcard]"" application_version: ""[wildcard]*[/wildcard]"" body { type_url: ""type.googleapis.com[wildcard]/*[/wildcard]"" value: "" [wildcard]*[/wildcard]"" } trace_id: ""00000000000000000000000000000000""]"
"≈10K","info","vrc-rona-service","setActiveTasksOffset. Current LagInfo : , partition : [wildcard]*[/wildcard], endOffset: [wildcard][355-587738][/wildcard], commitOffset: [wildcard][355-587738][/wildcard], lag: 0, partition : [wildcard]*[/wildcard], endOffset: [wildcard][284-794814][/wildcard], commitOffset: [wildcard][284-794814][/wildcard], lag: 0, partition : [wildcard]*[/wildcard], endOffset: [wildcard][311-647037][/wildcard], commitOffset: [wildcard][311-647037][/wildcard], lag: 0, partition : [wildcard]*[/wildcard], endOffset: [wildcard][388-787843][/wildcard], commitOffset: [wildcard][388-787843][/wildcard], lag: 0, partition : [wildcard]*[/wildcard], endOffset: [wildcard][408-745913][/wildcard], commitOffset: [wildcard][408-745913][/wildcard], lag: 0, partition : [wildcard]*[/wildcard], endOffset: [wildcard][443-753820][/wildcard], commitOffset: [wildcard][443-753820][/wildcard], lag: 0, partition : [wildcard]*[/wildcard], endOffset: [wildcard][269-630957][/wildcard], commitOffset: [wildcard][269-630957][/wildcard], lag: 0, partition : [wildcard]*[/wildcard], endOffset: [wildcard][498-800775][/wildcard], commitOffset: [wildcard][498-800775][/wildcard], lag: 0, partition : [wildcard]*[/wildcard], endOffset: [wildcard][248-630582][/wildcard], commitOffset: [wildcard][248-630582][/wildcard], lag: 0, partition : [wildcard]*[/wildcard], endOffset: [wildcard][283-780392][/wildcard], commitOffset: [wildcard][283-780392][/wildcard], lag: 0, partition : [wildcard]*[/wildcard], endOffset: [wildcard][206-643851][/wildcard], commitOffset: [wildcard][206-643851][/wildcard], lag: 0, partition : [wildcard]*[/wildcard], endOffset: [wildcard][257-600608][/wildcard], commitOffset: [wildcard][257-600608][/wildcard], lag: 0"
"≈10K","info","analytics-passthrough-proc","sendMeasureOutput(): Output has been sent for measure '[wildcard]*[/wildcard]' with key '[wildcard]*[/wildcard]' to topic 'analytics.dm.queuebychannel.itd' and headers[RecordHeaders(headers = [RecordHeader(key = unique_id, value = [[wildcard][51-100][/wildcard], [wildcard][51-100][/wildcard], [wildcard][48-97][/wildcard], [wildcard][52-100][/wildcard], [wildcard][53-102][/wildcard], [wildcard][48-102][/wildcard], [wildcard][49-102][/wildcard], [wildcard][50-100][/wildcard], 45, [wildcard][48-99][/wildcard], [wildcard][48-102][/wildcard], [wildcard][50-57][/wildcard], [wildcard][48-102][/wildcard], 45, 52, [wildcard][48-102][/wildcard], [wildcard][48-99][/wildcard], [wildcard][49-98][/wildcard], 45, [wildcard][57-98][/wildcard], [wildcard][49-102][/wildcard], [wildcard][54-100][/wildcard], [wildcard][49-101][/wildcard], 45, [wildcard][48-100][/wildcard], [wildcard][48-99][/wildcard], [wildcard][54-100][/wildcard], [wildcard][50-102][/wildcard], [wildcard][56-102][/wildcard], [wildcard][49-102][/wildcard], [wildcard][51-99][/wildcard], [wildcard][48-101][/wildcard], [wildcard][49-101][/wildcard], [wildcard][49-98][/wildcard], [wildcard][48-97][/wildcard], [wildcard][48-101][/wildcard]]), RecordHeader(key = account_id, value = [87, 84, 67, 78, 67, 71]), RecordHeader(key = agent_channels, value = [91, [wildcard][69-86][/wildcard], [wildcard][109-111][/wildcard], [wildcard][97-105][/wildcard], [wildcard][99-105][/wildcard], [wildcard][101-108][/wildcard], 93]), RecordHeader(key = x-datadog-trace-id, value = [[wildcard][49-55][/wildcard], [wildcard][48-53][/wildcard], [wildcard][53-56][/wildcard], [wildcard][49-56][/wildcard], [wildcard][48-57][/wildcard], [wildcard][52-55][/wildcard], [wildcard][48-56][/wildcard], [wildcard][53-57][/wildcard], [wildcard][48-55][/wildcard], [wildcard][51-56][/wildcard], [wildcard][51-56][/wildcard], [wildcard][51-57][/wildcard], [wildcard][50-56][/wildcard], [wildcard][50-57][/wildcard], [wildcard][51-57][/wildcard], [wildcard][49-57][/wildcard], [wildcard][50-55][/wildcard], [wildcard][49-57][/wildcard], [wildcard][49-56][/wildcard]]), RecordHeader(key = x-datadog-parent-id, value = [[wildcard][49-56][/wildcard], [wildcard][48-57][/wildcard], [wildcard][49-56][/wildcard], [wildcard][51-57][/wildcard], [wildcard][48-57][/wildcard], [wildcard][48-54][/wildcard], [wildcard][50-57][/wildcard], [wildcard][48-57][/wildcard], [wildcard][48-57][/wildcard], [wildcard][49-56][/wildcard], [wildcard][48-55][/wildcard], [wildcard][52-57][/wildcard], [wildcard][48-55][/wildcard], [wildcard][48-57][/wildcard], [wildcard][51-53][/wildcard], [wildcard][49-57][/wildcard], [wildcard][50-56][/wildcard], [wildcard][48-57][/wildcard], [wildcard][51-54][/wildcard]]), RecordHeader(key = x-datadog-sampling-priority, value = [48]), RecordHeader(key = x-datadog-tags, value = [95, 100, 100, 46, 112, 46, 100, 109, 61, 45, 49]), RecordHeader(key = channel_id, value = [91, [wildcard][69-86][/wildcard], [wildcard][109-111][/wildcard], [wildcard][97-105][/wildcard], [wildcard][99-105][/wildcard], [wildcard][101-108][/wildcard], 93]), RecordHeader(key = queue_id, value = [[wildcard][52-101][/wildcard], [wildcard][48-99][/wildcard], [wildcard][97-102][/wildcard], [wildcard][50-97][/wildcard], [wildcard][53-100][/wildcard], [wildcard][48-97][/wildcard], [wildcard][50-98][/wildcard], [wildcard][48-102][/wildcard], 45, [wildcard][52-102][/wildcard], [wildcard][51-98][/wildcard], [wildcard][53-101][/wildcard], [wildcard][52-98][/wildcard], 45, 52, [wildcard][50-102][/wildcard], [wildcard][51-102][/wildcard], [wildcard][49-102][/wildcard], 45, [wildcard][56-97][/wildcard], [wildcard][52-100][/wildcard], [wildcard][49-99][/wildcard], [wildcard][48-102][/wildcard], 45, [wildcard][54-100][/wildcard], [wildcard][52-101][/wildcard], [wildcard][55-102][/wildcard], [wildcard][53-56][/wildcard], [wildcard][48-101][/wildcard], [wildcard][49-98][/wildcard], [wildcard][48-99][/wildcard], [wildcard][52-100][/wildcard], [wildcard][48-98][/wildcard], [wildcard][48-56][/wildcard], [wildcard][50-102][/wildcard], [wildcard][49-97][/wildcard]])], isReadOnly = false)]"
"≈10K","info","analytics-passthrough-proc","sendMeasureOutput(): Output has been sent for measure '[wildcard]*[/wildcard]' with key '[wildcard]*[/wildcard]' to topic 'analytics.dm.agentbychannel.[wildcard]*[/wildcard]' and headers[RecordHeaders(headers = [RecordHeader(key = unique_id, value = [[wildcard][48-56][/wildcard], [wildcard][49-99][/wildcard], [wildcard][50-99][/wildcard], [wildcard][51-101][/wildcard], [wildcard][51-102][/wildcard], [wildcard][51-99][/wildcard], [wildcard][50-57][/wildcard], [wildcard][48-99][/wildcard], 45, [wildcard][49-98][/wildcard], [wildcard][49-102][/wildcard], [wildcard][51-98][/wildcard], [wildcard][56-100][/wildcard], 45, 52, [wildcard][49-98][/wildcard], [wildcard][50-57][/wildcard], [wildcard][49-53][/wildcard], 45, [wildcard][56-98][/wildcard], [wildcard][48-54][/wildcard], [wildcard][51-102][/wildcard], [wildcard][50-55][/wildcard], 45, [wildcard][51-99][/wildcard], [wildcard][51-102][/wildcard], [wildcard][53-101][/wildcard], [wildcard][52-99][/wildcard], [wildcard][48-51][/wildcard], [wildcard][49-98][/wildcard], [wildcard][54-100][/wildcard], [wildcard][54-100][/wildcard], [wildcard][51-101][/wildcard], [wildcard][56-101][/wildcard], [wildcard][48-99][/wildcard], [wildcard][51-100][/wildcard]]), RecordHeader(key = account_id, value = [[wildcard][85-87][/wildcard], [wildcard][69-84][/wildcard], [wildcard][67-81][/wildcard], [wildcard][69-78][/wildcard], [wildcard][65-67][/wildcard], [wildcard][71-83][/wildcard]]), RecordHeader(key = x-datadog-trace-id, value = [[wildcard][50-56][/wildcard], [wildcard][48-56][/wildcard], [wildcard][48-55][/wildcard], [wildcard][49-57][/wildcard], [wildcard][50-57][/wildcard], [wildcard][50-57][/wildcard], [wildcard][48-56][/wildcard], [wildcard][49-56][/wildcard], [wildcard][50-56][/wildcard], [wildcard][48-56][/wildcard], [wildcard][48-56][/wildcard], [wildcard][52-56][/wildcard], [wildcard][53-57][/wildcard], [wildcard][50-54][/wildcard], [wildcard][48-54][/wildcard], [wildcard][48-57][/wildcard], [wildcard][52-55][/wildcard], [wildcard][49-55][/wildcard], [wildcard][48-56][/wildcard]]), RecordHeader(key = x-datadog-parent-id, value = [[wildcard][49-55][/wildcard], [wildcard][48-57][/wildcard], [wildcard][50-54][/wildcard], [wildcard][49-57][/wildcard], [wildcard][49-54][/wildcard], [wildcard][49-56][/wildcard], [wildcard][48-52][/wildcard], [wildcard][49-57][/wildcard], [wildcard][48-52][/wildcard], [wildcard][53-57][/wildcard], [wildcard][48-54][/wildcard], [wildcard][48-57][/wildcard], [wildcard][54-57][/wildcard], [wildcard][50-57][/wildcard], [wildcard][48-55][/wildcard], [wildcard][53-56][/wildcard], [wildcard][48-55][/wildcard], [wildcard][52-56][/wildcard], [wildcard][50-56][/wildcard]]), RecordHeader(key = x-datadog-sampling-priority, value = [[wildcard][48-49][/wildcard]]), RecordHeader(key = x-datadog-tags, value = [95, 100, 100, 46, 112, 46, 100, 109, 61, 45, 49]), RecordHeader(key = agent_id, value = [[wildcard][51-101][/wildcard], [wildcard][50-100][/wildcard], [wildcard][51-98][/wildcard], [wildcard][48-97][/wildcard], [wildcard][48-57][/wildcard], [wildcard][53-99][/wildcard], [wildcard][50-97][/wildcard], [wildcard][49-98][/wildcard], 45, [wildcard][51-98][/wildcard], [wildcard][48-102][/wildcard], [wildcard][49-57][/wildcard], [wildcard][55-102][/wildcard], 45, 52, [wildcard][50-102][/wildcard], [wildcard][54-100][/wildcard], [wildcard][49-100][/wildcard], 45, [wildcard][56-98][/wildcard], [wildcard][54-99][/wildcard], [wildcard][48-99][/wildcard], [wildcard][48-55][/wildcard], 45, [wildcard][53-99][/wildcard], [wildcard][48-98][/wildcard], [wildcard][56-99][/wildcard], [wildcard][54-101][/wildcard], [wildcard][51-101][/wildcard], [wildcard][53-102][/wildcard], [wildcard][50-99][/wildcard], [wildcard][49-98][/wildcard], [wildcard][49-102][/wildcard], [wildcard][50-101][/wildcard], [wildcard][49-100][/wildcard], [wildcard][53-101][/wildcard]]), RecordHeader(key = channel_id, value = [67, 104, 97, 116])], isReadOnly = false)]"
"≈10K","info","vrc-matching-engagement","findOffsetsForActiveTasks. Current LagInfo : , partition : [wildcard]*[/wildcard], endOffset: [wildcard][250-13676][/wildcard], commitOffset: [wildcard][250-13676][/wildcard], lag: 0, partition : [wildcard]*[/wildcard], endOffset: [wildcard][740-26532][/wildcard], commitOffset: [wildcard][740-26532][/wildcard], lag: 0, partition : [wildcard]*[/wildcard], endOffset: [wildcard][217-13467][/wildcard], commitOffset: [wildcard][217-13467][/wildcard], lag: 0, partition : [wildcard]*[/wildcard], endOffset: [wildcard][222-26682][/wildcard], commitOffset: [wildcard][222-26682][/wildcard], lag: 0, partition : [wildcard]*[/wildcard], endOffset: [wildcard][652-13221][/wildcard], commitOffset: [wildcard][652-13221][/wildcard], lag: 0, partition : [wildcard]*[/wildcard], endOffset: [wildcard][205-26324][/wildcard], commitOffset: [wildcard][205-26324][/wildcard], lag: 0, partition : [wildcard]*[/wildcard], endOffset: [wildcard][623-13467][/wildcard], commitOffset: [wildcard][623-13467][/wildcard], lag: 0, partition : [wildcard]*[/wildcard], endOffset: [wildcard][272-26051][/wildcard], commitOffset: [wildcard][272-26051][/wildcard], lag: 0, partition : [wildcard]*[/wildcard], endOffset: [wildcard][778-13148][/wildcard], commitOffset: [wildcard][778-13148][/wildcard], lag: 0, partition : [wildcard]*[/wildcard], endOffset: [wildcard][225-26881][/wildcard], commitOffset: [wildcard][225-26881][/wildcard], lag: 0, partition : [wildcard]*[/wildcard], endOffset: [wildcard][586-13690][/wildcard], commitOffset: [wildcard][586-13690][/wildcard], lag: 0, partition : [wildcard]*[/wildcard], endOffset: [wildcard][641-25845][/wildcard], commitOffset: [wildcard][641-25845][/wildcard], lag: 0"
"≈10K","info","ix-dsk-request-service","Request Forwarding for requestId=[wildcard]*[/wildcard], userHandle=[wildcard]*[/wildcard] requestType=[wildcard]*[/wildcard]"
"≈10K","info","ix-dsk-request-service","Dont subscribe to account with no providers :"
"≈10K","info","vrc-availability-service","processInputEvent, State [[wildcard]*[/wildcard]], FSM INPUT [[wildcard]*[/wildcard][agentId=[wildcard]*[/wildcard], tenantId=[wildcard]*[/wildcard]]]"
"≈10K","info","analytics-passthrough-proc","sendMeasureOutput(): MeasureOutput [MeasureOutputITD(measure={[wildcard]*[/wildcard]=[wildcard]*[/wildcard]}, dimension=[wildcard]*[/wildcard], accountId=[wildcard]*[/wildcard], epochTime=[wildcard][1710136800000-1710137700000][/wildcard], uniqueEventId=[wildcard]*[/wildcard])] has been sent for measure '[wildcard]*[/wildcard]' with key '[wildcard]*[/wildcard]' to topic 'analytics.dm.[wildcard]*[/wildcard].itd' and headers[RecordHeaders(headers = [RecordHeader(key = unique_id, value = [[wildcard][50-102][/wildcard], [wildcard][97-102][/wildcard], [wildcard][48-99][/wildcard], [wildcard][50-98][/wildcard], [wildcard][50-99][/wildcard], [wildcard][48-99][/wildcard], [wildcard][51-98][/wildcard], [wildcard][50-56][/wildcard], 45, [wildcard][52-100][/wildcard], [wildcard][55-98][/wildcard], [wildcard]*[/wildcard][wildcard][51-67][/wildcard], [wildcard][50-104][/wildcard], [wildcard][49-97][/wildcard], [wildcard][97-116][/wildcard]])], isReadOnly = false)]"
"≈10K","error","analytics-dbmgr","nc: bad address '[wildcard]*[/wildcard].postgres.database.azure.com'"
"≈10K","info","vrc-metrics-service","methodName:updateAgent - oldAgentState:null newAgentState:AgentEntry(id=[wildcard]*[/wildcard], tenantId=[wildcard]*[/wildcard], attributes=Attributes(attributeList=[channel.chat, channel.email, channel.messaging, channel.voice, department.[wildcard]*[/wildcard], language.english, queue.[wildcard]*[/wildcard], queue.[wildcard]*[/wildcard][wildcard]*[/wildcard]]), activeServiceSet=[], channels=[voice, chat, email, messaging], previousChannels=[], channelToStateMap={voice=LOGGED_OUT, chat=LOGGED_OUT, email=LOGGED_OUT, messaging=LOGGED_OUT}, channelToAuxStateMap={voice=AUX_STATE_READY, chat=AUX_STATE_READY, email=AUX_STATE_READY, messaging=AUX_STATE_READY}, writeCounter=0, readCounter=0, taskId=0)"
"<10K","info","analytics-passthrough-proc","sendMeasureOutput(): Output has been sent for measure '[wildcard]*[/wildcard]' with key '[wildcard]*[/wildcard]' to topic 'analytics.dm.agentbyqueue.itd' and headers[RecordHeaders(headers = [RecordHeader(key = unique_id, value = [[wildcard][55-99][/wildcard], [wildcard][53-99][/wildcard], [wildcard][48-101][/wildcard], [wildcard][53-102][/wildcard], [wildcard][49-102][/wildcard], [wildcard][49-99][/wildcard], [wildcard][53-100][/wildcard], [wildcard][50-98][/wildcard], 45, [wildcard][51-101][/wildcard], [wildcard][50-102][/wildcard], [wildcard][50-54][/wildcard], [wildcard][48-100][/wildcard], 45, 52, [wildcard][50-57][/wildcard], [wildcard][48-99][/wildcard], [wildcard][55-99][/wildcard], 45, [wildcard][56-98][/wildcard], [wildcard][50-101][/wildcard], [wildcard][54-100][/wildcard], [wildcard][49-98][/wildcard], 45, [wildcard][48-100][/wildcard], [wildcard][50-97][/wildcard], [wildcard][54-100][/wildcard], [wildcard][50-99][/wildcard], [wildcard][50-57][/wildcard], [wildcard][48-101][/wildcard], [wildcard][51-102][/wildcard], [wildcard][49-54][/wildcard], [wildcard][50-99][/wildcard], [wildcard][54-102][/wildcard], [wildcard][51-100][/wildcard], [wildcard][48-53][/wildcard]]), RecordHeader(key = account_id, value = [87, 84, 67, 78, 67, 71]), RecordHeader(key = x-datadog-trace-id, value = [[wildcard][53-57][/wildcard], [wildcard][48-56][/wildcard], [wildcard][51-57][/wildcard], [wildcard][49-57][/wildcard], [wildcard][49-56][/wildcard], [wildcard][49-54][/wildcard], [wildcard][50-57][/wildcard], [wildcard][53-56][/wildcard], [wildcard][48-56][/wildcard], [wildcard][55-56][/wildcard], [wildcard][49-55][/wildcard], [wildcard][48-57][/wildcard], [wildcard][49-57][/wildcard], [wildcard][52-55][/wildcard], [wildcard][52-57][/wildcard], [wildcard][52-57][/wildcard], [wildcard][49-50][/wildcard], [wildcard][51-57][/wildcard], [wildcard][48-57][/wildcard]]), RecordHeader(key = x-datadog-parent-id, value = [[wildcard][49-55][/wildcard], [wildcard][51-57][/wildcard], [wildcard][51-56][/wildcard], [wildcard][54-56][/wildcard], [wildcard][51-56][/wildcard], [wildcard][50-57][/wildcard], [wildcard][48-57][/wildcard], [wildcard][52-56][/wildcard], [wildcard][48-54][/wildcard], [wildcard][50-56][/wildcard], [wildcard][49-56][/wildcard], [wildcard][49-53][/wildcard], [wildcard][50-57][/wildcard], [wildcard][51-56][/wildcard], [wildcard][52-56][/wildcard], [wildcard][49-55][/wildcard], [wildcard][51-57][/wildcard], [wildcard][49-53][/wildcard], [wildcard][50-55][/wildcard]]), RecordHeader(key = x-datadog-sampling-priority, value = [48]), RecordHeader(key = x-datadog-tags, value = [95, 100, 100, 46, 112, 46, 100, 109, 61, 45, 49]), RecordHeader(key = agent_id, value = [[wildcard][48-100][/wildcard], [wildcard][48-52][/wildcard], [wildcard][52-99][/wildcard], [wildcard][49-102][/wildcard], [wildcard][48-102][/wildcard], [wildcard][48-101][/wildcard], [wildcard][55-102][/wildcard], [wildcard][49-97][/wildcard], 45, [wildcard][49-101][/wildcard], [wildcard][54-102][/wildcard], [wildcard][55-97][/wildcard], [wildcard][56-101][/wildcard], 45, 52, [wildcard][48-101][/wildcard], [wildcard][50-101][/wildcard], [wildcard][48-57][/wildcard], 45, [wildcard][57-97][/wildcard], [wildcard][54-100][/wildcard], [wildcard][48-56][/wildcard], [wildcard][50-97][/wildcard], 45, [wildcard][51-54][/wildcard], [wildcard][50-57][/wildcard], [wildcard][48-52][/wildcard], [wildcard][48-99][/wildcard], [wildcard][49-55][/wildcard], [wildcard][54-99][/wildcard], [wildcard][49-97][/wildcard], [wildcard][50-97][/wildcard], [wildcard][51-100][/wildcard], [wildcard][97-102][/wildcard], [wildcard][51-57][/wildcard], [wildcard][48-98][/wildcard]]), RecordHeader(key = queue_id, value = [[wildcard][50-101][/wildcard], [wildcard][53-102][/wildcard], [wildcard][97-99][/wildcard], [wildcard][52-100][/wildcard], [wildcard][97-100][/wildcard], [wildcard][49-100][/wildcard], [wildcard][98-101][/wildcard], [wildcard][51-54][/wildcard], 45, [wildcard][56-102][/wildcard], [wildcard][51-101][/wildcard], [wildcard][51-97][/wildcard], [wildcard][53-98][/wildcard], 45, 52, [wildcard][53-98][/wildcard], [wildcard][51-57][/wildcard], [wildcard][100-102][/wildcard], 45, [wildcard][56-57][/wildcard], [wildcard][51-56][/wildcard], [wildcard][54-57][/wildcard], [wildcard][49-98][/wildcard], 45, [wildcard][49-99][/wildcard], [wildcard][49-56][/wildcard], [wildcard][55-98][/wildcard], [wildcard][55-101][/wildcard], [wildcard][49-101][/wildcard], [wildcard][55-57][/wildcard], [wildcard][49-99][/wildcard], [wildcard][52-102][/wildcard], [wildcard][51-55][/wildcard], [wildcard][52-100][/wildcard], [wildcard][55-97][/wildcard], [wildcard][49-57][/wildcard]])], isReadOnly = false)]"
"<10K","info","ix-dsk-admin-connector","consumeRecords, Notifying message listeners of [ElementInventoryAck] event, topic: [element-inventory-ack.[wildcard]*[/wildcard]], offset:[[wildcard][31-710][/wildcard]], key: [[wildcard]*[/wildcard]], value: {""elementType"": ""[wildcard]*[/wildcard]"", ""tenantId"": ""[wildcard]*[/wildcard]"", ""elementSubType"": [wildcard]*[/wildcard], ""accountId"": ""[wildcard]*[/wildcard]"", ""payload"": ""[wildcard]*[/wildcard][wildcard]*[/wildcard]"", ""elementId"": ""[wildcard]*[/wildcard]"", ""timestamp"": [wildcard]*[/wildcard]}"
"<10K","info","ed-task-manager","SM [wildcard]*[/wildcard] -> [wildcard]*[/wildcard] on event [wildcard]*[/wildcard] for task [wildcard]*[/wildcard] [[wildcard]*[/wildcard]] with id [wildcard]*[/wildcard] [engagementId:[wildcard]*[/wildcard],instanceId:[wildcard]*[/wildcard],deployId:[wildcard]*[/wildcard]]"
"<10K","info","ix-virtual-load-tester","[Information: operating system CPU - x64, hostname: [wildcard]*[/wildcard], OS platform: linux OS: Linux, OS version: #49-Ubuntu SMP Tue Jul 11 17:28:46 UTC 2023, information about each logical CPU core: [{""model"":""Intel(R) Xeon(R) CPU E5-2673 v4 @ 2.30GHz"",""speed"":2294,""times"":{""user"":[wildcard][69368190-74085030][/wildcard],""nice"":[wildcard][9840-10260][/wildcard],""sys"":[wildcard][49867490-53258720][/wildcard],""idle"":[wildcard][81805040-87974550][/wildcard],""irq"":0}},{""model"":""Intel(R) Xeon(R) CPU E5-2673 v4 @ 2.30GHz"",""speed"":2294,""times"":{""user"":[wildcard][69336000-73893620][/wildcard],""nice"":[wildcard][10190-12660][/wildcard],""sys"":[wildcard][49209600-52743690][/wildcard],""idle"":[wildcard][84206320-90274960][/wildcard],""irq"":0}},{""model"":""Intel(R) Xeon(R) CPU E5-2673 v4 @ 2.30GHz"",""speed"":2294,""times"":{""user"":[wildcard][69454850-74292780][/wildcard],""nice"":[wildcard][11020-11120][/wildcard],""sys"":[wildcard][49846720-53375950][/wildcard],""idle"":[wildcard][81613550-88106210][/wildcard],""irq"":0}},{""model"":""Intel(R) Xeon(R) CPU E5-2673 v4 @ 2.30GHz"",""speed"":2294,""times"":{""user"":[wildcard][68878110-73434980][/wildcard],""nice"":[wildcard][11180-12170][/wildcard],""sys"":[wildcard][48747660-52247370][/wildcard],""idle"":[wildcard][83141650-89325740][/wildcard],""irq"":0}}]]"
"<10K","info","ix-virtual-load-tester","[NodeJs version: v18.19.1, POD [wildcard]*[/wildcard] memory usage STATS {""rss"":[wildcard][182013952-188510208][/wildcard],""heapTotal"":[wildcard][81362944-82411520][/wildcard],""heapUsed"":[wildcard][69427848-74818816][/wildcard],""external"":[wildcard][7307087-7497096][/wildcard],""arrayBuffers"":[wildcard][4406958-4596967][/wildcard]} resources usage STATS: userCPUTime - [wildcard][1604428538-1967223088][/wildcard], systemCPUTime - [wildcard][1077443525-1255643658][/wildcard], maxRSS - [wildcard][240780-243116][/wildcard], majorPageFault - 0, minorPageFault - [wildcard][8802695-9731499][/wildcard], fsRead - 0, fsWrite - 0, voluntaryContextSwitches - [wildcard][43272965-44378151][/wildcard], involuntaryContextSwitches - [wildcard][1633172-2732782][/wildcard]]"
"<10K","info","vrc-matching-service","getConsumerLagInfo: Stream Tasks running in this pod for org.apache.kafka.streams.KafkaStreams@[wildcard]*[/wildcard]are active-tasks [] and standBy-tasks [0]."
"<10K","info","outbound-campaigns-actors","[wildcard]yyyy-MM-dd HH:mm:ss.SSS[/wildcard] [ERROR] [[wildcard]*[/wildcard]] com.avaya.outbound.campaign.actors.web.client.CPaaSClient -- sendSMS -- Error response while sending sms request to CPaaS ({ ""status"": 404, ""message"": ""Not found"", ""code"": 0, ""more_info"": ""The requested resource was not found: /v2/Accounts/accountSid/SMS/Messages.json""})"
"<10K","info","ix-dsk-connector","UserSessionStateStore storedUserSessionState [{""tenantId"": ""[wildcard]*[/wildcard]"", ""agentId"": ""E1:[wildcard]*[/wildcard]"", ""loginState"": ""[wildcard]*[/wildcard]"", ""readyState"": ""[wildcard]*[/wildcard]"", ""lastTimestamp"": ""[wildcard]yyyy-MM-ddTHH:mm:ss.SSSXXX[/wildcard]"", ""stateReason"": ""DEFAULT"", ""reasonCode"": """"}]"
"<10K","error","admin-voice-service","AuraSync - [[wildcard]*[/wildcard]] - Exception occurred for account [wildcard]*[/wildcard], exception details : could not extract ResultSet; SQL [n/a]; nested exception is org.hibernate.exception.SQLGrammarException: could not extract ResultSet"
"<10K","info","ix-dsk-connector","Writing updated request to sink=[AdfCompleteResponseProcessor] key=[[wildcard]*[/wildcard]] value=[id: ""[wildcard]*[/wildcard]"" timestamp { seconds: [wildcard][1710137176-1710137739][/wildcard] nanos: [wildcard][329304000-937556528][/wildcard] } type: [wildcard]*[/wildcard] client_id: ""[wildcard]*[/wildcard]"" token: ""****"" tenant_id: ""[wildcard]*[/wildcard]"" application_version: ""[wildcard]*[/wildcard]"" body { type_url: ""type.googleapis.com[wildcard]/*[/wildcard]"" value: "" $[wildcard]*[/wildcard]\022[wildcard]*[/wildcard]"" } trace_id: ""00000000000000000000000000000000""]"
"<10K","info","cc-spring-boot-admin-server","at reactor.[wildcard]*[/wildcard].[wildcard]*[/wildcard].[wildcard]*[/wildcard]$[wildcard]*[/wildcard].[wildcard]*[/wildcard]([wildcard]*[/wildcard].java:[wildcard][103-211][/wildcard]) ~[[wildcard]*[/wildcard].[wildcard][1.7-5.6][/wildcard].jar:[wildcard][1.1-3.5][/wildcard].[wildcard][6-7][/wildcard]]"
"<10K","info","ix-dsk-connector","consumeRecords, Notifying message listeners of [AdfReasonCodeMap] event, topic: [[wildcard]*[/wildcard]], offset:[[wildcard][2944-52499][/wildcard]], key: [[wildcard]*[/wildcard]], value: {""reasonCodeId"": ""[wildcard]*[/wildcard]"", ""adfReasonCodeId"": ""[wildcard]*[/wildcard]"", ""codeName"": ""[wildcard]*[/wildcard] [wildcard]*[/wildcard]"", ""codeType"": ""NOT_READY"", ""codeNumber"": ""[wildcard][00103-00104][/wildcard]"", ""description"": ""System uses this code [wildcard]*[/wildcard] [wildcard]*[/wildcard] [wildcard]*[/wildcard] [wildcard]*[/wildcard] [wildcard]*[/wildcard] [wildcard]*[/wildcard][wildcard]*[/wildcard]"", ""accountId"": ""[wildcard]*[/wildcard]"", ""systemUse"": ""[wildcard]*[/wildcard]""}"
"<10K","info","msg-agent-controller","Processed incoming event [[wildcard]*[/wildcard]] -> [[wildcard]*[/wildcard]] in [0] ms. Writing [[wildcard]*[/wildcard]] on [[wildcard]*[/wildcard]] topic dialogId [[wildcard]*[/wildcard]] engagementId [[wildcard]*[/wildcard]]"
"<10K","info","elite-adfc","GRPC Out, For User[wildcard]*[/wildcard]@avaya.com, suppressed duplicate [wildcard]*[/wildcard] update [wildcard]*[/wildcard]"
"<10K","info","analytics-event-filter","V2 Summarization event has been sent to topic: 'analytics.mpe.[wildcard]*[/wildcard]' event: [{""measureId"":""[wildcard]*[/wildcard]"",""id"":""[wildcard]*[/wildcard]"",""dimensionName"":""[wildcard]*[/wildcard]"",""events"":[{""eventSignatureId"":[wildcard][1-5][/wildcard],""eventData"":{""version"":""0.0.0.3"",""messageName"":""AgentStateChanged"",""messageType"":""WORK"",""entity"":""Agent"",""sourceType"":""vrc"",""sourceIP"":""0.0.0.0"",""nativeSourceName"":""vrc"",""sourceVersion"":""0.0.0.3"",""accountId"":""[wildcard]*[/wildcard]"",""timestamp"":""[wildcard][1710137527192-1710137938956][/wildcard]"",""id"":""[wildcard]*[/wildcard]"",""error"":{""code"":""N/A"",""description"":""N/A""},""eventDataMap"":{""queueId"":""[wildcard]*[/wildcard]"",""channelProviderId"":""[wildcard]*[/wildcard]"",""agentId"":""[wildcard]*[/wildcard]"",""fromState"":""ALERTING"",""offeredBeforeQueued"":""false"",""dialogId"":""[wildcard]*[/wildcard]"",""engagementState"":""ACTIVE"",""providerDialogId"":""[wildcard]*[/wildcard]"",""fromStateTimestamp"":""[wildcard][1710137524343-1710137930055][/wildcard]"",""activeTimestamp"":""[wildcard][1710137527192-1710137938956][/wildcard]"",""connectionId"":""[wildcard]*[/wildcard]"",""correlationId"":""[wildcard]*[/wildcard]"",""agentActiveTs"":""[wildcard][1710137527192-1710137938956][/wildcard]"",""state"":""ACTIVE"",""id"":""[wildcard]*[/wildcard]"",""queuedTimestamp"":""0"",""engagementId"":""[wildcard]*[/wildcard]"",""channelId"":""[wildcard]*[/wildcard]"",""firstQueuedTimestamp"":""0"",""firstOfferedTimestamp"":""[wildcard][1710137523325-1710137928956][/wildcard]""},""channelId"":""[wildcard]*[/wildcard]"",""queueId"":""[wildcard]*[/wildcard]"",""acwEnabled"":""false"",""agentId"":""[wildcard]*[/wildcard]"",""engagementAnswered"":""true"",""interactionType"":""CALLED"",""transferInitiated"":""false"",""engagementId"":""[wildcard]*[/wildcard]"",""accountName"":""[wildcard]*[/wildcard][wildcard]*[/wildcard]"",""agentChannels"":[""[wildcard]*[/wildcard]unknown""],""userStatus"":""Live"",""userName"":""*******"",""UNIQUE_ID"":""[wildcard]*[/wildcard]"",""arrivalTimestamp"":""[wildcard][1710137527315-1710137939070][/wildcard]""}}]}] headers: [RecordHeaders(headers = [RecordHeader(key = unique_id, value = [[wildcard][51-55][/wildcard], [wildcard][49-100][/wildcard], [wildcard][99-101][/wildcard], [wildcard][53-101][/wildcard], [wildcard][50-102][/wildcard], [wildcard][49-102][/wildcard], [wildcard]*[/wildcard][wildcard][48-101][/wildcard], [wildcard][48-104][/wildcard], [wildcard][49-97][/wildcard], [wildcard][50-116][/wildcard]])], isReadOnly = false)]"
"<10K","error","provider-azure","objectType: secret"
"<10K","error","provider-azure","'- |"
"<10K","info","journey-service","Running query against index '[wildcard]*[/wildcard]*' { ""bool"" : { ""filter"" : [ { ""bool"" : { ""should"" : [ { ""wildcard"" : { ""identifiers.emailAddresses"" : { ""wildcard"" : ""customer@test.com"", ""case_insensitive"" : true, ""boost"" : 1.0 } } }, { ""wildcard"" : { ""identifiers.phoneNumbers"" : { ""wildcard"" : ""1231231231"", ""boost"" : 1.0 } } } ], ""adjust_pure_negative"" : true, ""minimum_should_match"" : ""1"", ""boost"" : 1.0 } } ], ""adjust_pure_negative"" : true, ""boost"" : 1.0 } }"
"<10K","info","ix-virtual-load-tester","[Agent[wildcard]*[/wildcard]@[wildcard]*[/wildcard]is still in transitioning state: AFTER_CONTACT_WORK, requestedState: READY]"
"<10K","info","ix-virtual-load-tester","[VOICE interaction is expected to be ended by customer, agent:[wildcard]*[/wildcard]@avaya-dev9.ec.avayacloud.com [READY], channel VOICE, interactionType: CALLED engagementId: [wildcard]*[/wildcard], interactionId: [wildcard]*[/wildcard], dialogId [wildcard]*[/wildcard]]"
"<10K","info","vrc-matching-service","MsProcessor.process, taskId==[0_0], topic=[match-agent-availability], processing [AgentAvailability] Event, key=[[wildcard]*[/wildcard]], value=[{""tenantId"": ""[wildcard]*[/wildcard]"", ""agentId"": ""[wildcard]*[/wildcard]"", ""offerResolved"": [wildcard]*[/wildcard], ""channels"": [{""channelProviderId"": ""[wildcard]*[/wildcard]"", ""channelId"": ""[wildcard]*[/wildcard]"", ""derivedAvailabilityFlag"": false, ""derivedAvailabilityStateReason"": ""DEFAULT"", ""isLoggedOut"": [wildcard]*[/wildcard], ""activeEngagementCount"": [wildcard][0-1][/wildcard], ""activeACWCount"": 0, ""triggeringEngagementId"": [wildcard]*[/wildcard]}], ""agentReadyState"": ""READY"", ""id"": ""[wildcard]*[/wildcard]"", ""timestamp"": ""[wildcard]yyyy-MM-ddTHH:mm:ss.SSSXXX[/wildcard]""}]"
"<10K","info","nmi","I0311 [wildcard]HH:mm:ss.SSSSSS[/wildcard] 1 server.go:239] status (200) took [wildcard][6636480-10357675][/wildcard] ns for req.method=GET reg.path=/host/token/ req.remote=127.0.0.1"
"<10K","info","media-store","OpenSearch request failed with status: BAD_REQUEST"
"<10K","info","outbound-campaigns-actors","[wildcard]yyyy-MM-dd HH:mm:ss.SSS[/wildcard] [INFO ] [outbound-campaigns-actors-akka.actor.[wildcard]*[/wildcard]] com.avaya.outbound.campaign.actors.HTTPEndPointRoutes -- cleanCampaignProcess -- Got request to clean campaign - [wildcard]*[/wildcard]"
"<10K","info","ix-dsk-connector","message received topic desktop-connector-engagement, key [wildcard]*[/wildcard]"
"<10K","info","journey-service","Sending query to elasticsearch. (identifiers={""emailAddresses"":[""[wildcard]*[/wildcard]@[wildcard]*[/wildcard]""]}, fromDate=[wildcard][1668146706066-1702275043434][/wildcard], toDate=[wildcard][1670803199595-1705017599595][/wildcard], tenant=[wildcard]*[/wildcard], coversationId=Optional.empty, agentId=Optional.empty, channelIds=Optional.empty, pageRequest=Optional[Page request [number: 1, size 20, sort: UNSORTED]], traceId=[wildcard]*[/wildcard]"
"<10K","info","vrc-agent-service","findOffsetsForActiveTasks. Current LagInfo : , partition : agent-command-3, endOffset: [wildcard][2404-5468][/wildcard], commitOffset: [wildcard][2404-5468][/wildcard], lag: 0, partition : channel-5, endOffset: [wildcard][999-3694][/wildcard], commitOffset: [wildcard][999-3694][/wildcard], lag: 0, partition : agent-command-1, endOffset: [wildcard][479-2452][/wildcard], commitOffset: [wildcard][479-2452][/wildcard], lag: 0, partition : channel-1, endOffset: [wildcard][1109-2352][/wildcard], commitOffset: [wildcard][1109-2352][/wildcard], lag: 0, partition : channel-3, endOffset: [wildcard][1760-5641][/wildcard], commitOffset: [wildcard][1760-5641][/wildcard], lag: 0, partition : agent-command-5, endOffset: [wildcard][475-5419][/wildcard], commitOffset: [wildcard][475-5419][/wildcard], lag: 0"
"<10K","info","vrc-agent-service","nextState, FSM STATE CHANGE from [[wildcard]*[/wildcard]] to [[wildcard]*[/wildcard]]"
"<10K","info","outbound-contacts-api","[wildcard]yyyy-MM-dd HH:mm:ss.SSS[/wildcard] [INFO ] [[wildcard]*[/wildcard]] com.avaya.outbound.contact.api.web.client.AkkaWebClient -- akkaPost -- Making akka post call for URI: [wildcard]/accounts/GZJLCF/contact-lists/*/*/*[/wildcard]"
"<10K","info","analytics-duration-proc","sendMeasureOutput(): Output has been sent for measure '[wildcard]*[/wildcard]' with key '[wildcard]*[/wildcard]' and value '[[wildcard][17482-151979][/wildcard]]' to topic 'analytics.dm.[wildcard]*[/wildcard].itd'"
"<10K","info","analytics-event-filter","V2 Summarization event has been sent to topic: 'analytics.mpe.[wildcard]*[/wildcard]' event: [{""measureId"":""[wildcard]*[/wildcard]"",""id"":""[wildcard]*[/wildcard]"",""dimensionName"":""Agent"",""events"":[{""eventSignatureId"":[wildcard][1-2][/wildcard],""eventData"":{""version"":""0.0.0.3"",""messageName"":""AgentLogout"",""messageType"":""RESOURCE"",""entity"":""Agent"",""sourceType"":""vrc"",""sourceIP"":""0.0.0.0"",""nativeSourceName"":""vrc"",""sourceVersion"":""0.0.0.3"",""accountId"":""UEQEAS"",""timestamp"":""[wildcard][1710137233355-1710137765983][/wildcard]"",""id"":""[wildcard]*[/wildcard]"",""error"":{""code"":""N/A"",""description"":""N/A""},""eventDataMap"":{""queueId"":""unknown"",""fromState"":""NOT_READY"",""agentId"":""[wildcard]*[/wildcard]"",""agentLoginTimestamp"":""[wildcard][1710137063349-1710137535240][/wildcard]"",""processReasonCode"":""true"",""cause"":""unknown"",""fromStateTimestamp"":""[wildcard][1710137063350-1710137535240][/wildcard]"",""profileId"":""[wildcard]*[/wildcard]"",""state"":""LOGGED_OUT"",""id"":""[wildcard]*[/wildcard]"",""reasonCode"":""e0077baf-504e-47b0-a95e-e8756994545b"",""channelId"":""unknown""},""channelId"":""unknown"",""codeId"":""e0077baf-504e-47b0-a95e-e8756994545b"",""codeType"":""NOT_READY"",""codeName"":""Start Work"",""description"":""System uses this code when an agent starts work in not ready state"",""agentId"":""[wildcard]*[/wildcard]"",""userStatus"":""Live"",""userName"":""*******"",""accountName"":""AXP Connect Alpha"",""agentChannels"":[""Chat"",""unknown""],""UNIQUE_ID"":""[wildcard]*[/wildcard]"",""arrivalTimestamp"":""[wildcard][1710137233465-1710137766190][/wildcard]""}}]}] headers: [RecordHeaders(headers = [RecordHeader(key = unique_id, value = [[wildcard][57-102][/wildcard], [wildcard][50-101][/wildcard], [wildcard][51-56][/wildcard], [wildcard][50-99][/wildcard], [wildcard][52-97][/wildcard], [wildcard][51-101][/wildcard], [wildcard][50-97][/wildcard], [wildcard][50-57][/wildcard], 45, [wildcard][49-52][/wildcard], [wildcard][50-99][/wildcard], [wildcard][51-102][/wildcard], [wildcard][98-100][/wildcard], 45, 52, [wildcard][49-55][/wildcard], [wildcard][52-57][/wildcard], [wildcard][49-53][/wildcard], 45, [wildcard][57-98][/wildcard], [wildcard][55-102][/wildcard], [wildcard][51-55][/wildcard], [wildcard][54-101][/wildcard], 45, [wildcard][53-101][/wildcard], [wildcard][48-102][/wildcard], [wildcard][48-100][/wildcard], [wildcard][97-101][/wildcard], [wildcard][53-102][/wildcard], [wildcard][49-54][/wildcard], [wildcard][55-101][/wildcard], [wildcard][49-56][/wildcard], [wildcard][52-54][/wildcard], [wildcard][49-99][/wildcard], [wildcard][49-100][/wildcard], [wildcard][51-98][/wildcard]]), RecordHeader(key = account_id, value = [85, 69, 81, 69, 65, 83]), RecordHeader(key = agent_id, value = [[wildcard][48-53][/wildcard], [wildcard][49-99][/wildcard], [wildcard][51-99][/wildcard], [wildcard][53-99][/wildcard], [wildcard][56-99][/wildcard], [wildcard][50-52][/wildcard], [wildcard][50-57][/wildcard], [wildcard][54-102][/wildcard], 45, [wildcard][50-100][/wildcard], [wildcard][53-100][/wildcard], [wildcard][53-101][/wildcard], [wildcard][51-101][/wildcard], 45, 52, [wildcard][54-56][/wildcard], [wildcard][53-57][/wildcard], [wildcard][99-101][/wildcard], 45, [wildcard][57-97][/wildcard], [wildcard][52-102][/wildcard], [wildcard][50-54][/wildcard], [wildcard][49-56][/wildcard], 45, [wildcard][97-102][/wildcard], [wildcard][49-51][/wildcard], [wildcard][49-50][/wildcard], [wildcard][54-102][/wildcard], [wildcard][52-101][/wildcard], [wildcard][53-102][/wildcard], [wildcard][56-102][/wildcard], [wildcard][55-100][/wildcard], [wildcard][49-54][/wildcard], [wildcard][48-97][/wildcard], [wildcard][97-100][/wildcard], [wildcard][48-98][/wildcard]])], isReadOnly = false)]"
"<10K","info","analytics-event-filter","V2 Summarization event has been sent to topic: 'analytics.mpe.passthrough' event: [{""measureId"":""[wildcard]*[/wildcard]"",""id"":""[wildcard]*[/wildcard]"",""dimensionName"":""DialogDetail"",""events"":[{""eventSignatureId"":1,""eventData"":{""version"":""0.0.0.3"",""messageName"":""EngagementStateChanged"",""messageType"":""WORK"",""entity"":""Engagement"",""sourceType"":""vrc"",""sourceIP"":""0.0.0.0"",""nativeSourceName"":""vrc"",""sourceVersion"":""0.0.0.3"",""accountId"":""[wildcard]*[/wildcard]"",""timestamp"":""[wildcard][1710137554760-1710138499291][/wildcard]"",""id"":""[wildcard]*[/wildcard]"",""error"":{""code"":""N/A"",""description"":""N/A""},""eventDataMap"":{""queueId"":""[wildcard]*[/wildcard]"",""channelProviderId"":""[wildcard]*[/wildcard]"",""fromState"":""[wildcard]*[/wildcard]"",""matchOfferedIndicator"":""true"",""engagementAlerted"":""false"",""offeredAgentId"":""[wildcard]*[/wildcard]"",""offeredBeforeQueued"":""true"",""dialogId"":""[wildcard]*[/wildcard]"",""clientSessionId"":""[wildcard]*[/wildcard]"",""providerDialogId"":""[wildcard]*[/wildcard]"",""engagementState"":""CUSTOMER_DISCONNECT"",""fromStateTimestamp"":""[wildcard][1710137545651-1710138278048][/wildcard]"",""connectionId"":""[wildcard]*[/wildcard]"",""correlationId"":""[wildcard]*[/wildcard]"",""state"":""CUSTOMER_DISCONNECT"",""id"":""[wildcard]*[/wildcard]"",""queuedTimestamp"":""0"",""engagementId"":""[wildcard]*[/wildcard]"",""channelId"":""[wildcard]*[/wildcard]"",""firstQueuedTimestamp"":""0"",""matchQueueIndicator"":""false"",""externalParticipantId"":""*******"",""firstOfferedTimestamp"":""[wildcard][1710137545651-1710138266563][/wildcard]""},""channelId"":""[wildcard]*[/wildcard]"",""queueId"":""[wildcard]*[/wildcard]"",""acwEnabled"":""false"",""agentId"":""[wildcard]*[/wildcard]"",""engagementAnswered"":""true"",""interactionType"":""CALLED"",""transferInitiated"":""false"",""engagementId"":""[wildcard]*[/wildcard]"",""accountName"":""[wildcard]*[/wildcard][wildcard]*[/wildcard]"",""agentChannels"":[""[wildcard]*[/wildcard][wildcard]*[/wildcard]"",""unknown""],""UNIQUE_ID"":""[wildcard]*[/wildcard]"",""arrivalTimestamp"":""[wildcard][1710137554878-1710138499423][/wildcard]""}}]}] headers: [RecordHeaders(headers = [RecordHeader(key = unique_id, value = [[wildcard][48-102][/wildcard], [wildcard][54-101][/wildcard], [wildcard][48-102][/wildcard], [wildcard][52-97][/wildcard], [wildcard][48-97][/wildcard], [wildcard][54-101][/wildcard], [wildcard][101-102][/wildcard], [wildcard][98-100][/wildcard], 45, [wildcard][48-99][/wildcard], [wildcard][56-101][/wildcard], [wildcard][49-57][/wildcard], [wildcard][48-56][/wildcard], 45, 52, [wildcard][49-57][/wildcard], [wildcard][48-101][/wildcard], [wildcard][48-98][/wildcard], 45, [wildcard][56-98][/wildcard], [wildcard][50-101][/wildcard], [wildcard][49-99][/wildcard], [wildcard][48-57][/wildcard], 45, [wildcard][53-98][/wildcard], [wildcard][53-101][/wildcard], [wildcard][48-57][/wildcard], [wildcard][48-98][/wildcard], [wildcard][55-101][/wildcard], [wildcard][97-101][/wildcard], [wildcard][48-101][/wildcard], [wildcard][52-98][/wildcard], [wildcard][55-100][/wildcard], [wildcard][54-99][/wildcard], [wildcard][49-97][/wildcard], [wildcard][51-102][/wildcard]]), RecordHeader(key = account_id, value = [[wildcard][84-85][/wildcard], [wildcard][69-89][/wildcard], [wildcard][69-81][/wildcard], [wildcard][69-73][/wildcard], [wildcard][65-85][/wildcard], [wildcard][66-83][/wildcard]]), RecordHeader(key = dialog_id, value = [[wildcard][53-98][/wildcard], [wildcard][48-98][/wildcard], [wildcard][52-100][/wildcard], [wildcard][51-100][/wildcard], [wildcard][57-101][/wildcard], [wildcard][50-99][/wildcard], [wildcard][50-57][/wildcard], [wildcard][48-99][/wildcard], 45, [wildcard][52-53][/wildcard], [wildcard][49-98][/wildcard], [wildcard][52-97][/wildcard], [wildcard][48-97][/wildcard], 45, 52, [wildcard][48-55][/wildcard], [wildcard][48-57][/wildcard], [wildcard][100-101][/wildcard], 45, [wildcard][57-97][/wildcard], [wildcard][51-102][/wildcard], 98, [wildcard][52-99][/wildcard], 45, [wildcard][48-56][/wildcard], [wildcard][53-101][/wildcard], [wildcard][97-100][/wildcard], [wildcard][55-101][/wildcard], [wildcard][52-57][/wildcard], [wildcard][52-102][/wildcard], [wildcard][53-100][/wildcard], [wildcard][48-102][/wildcard], [wildcard][55-98][/wildcard], [wildcard][50-52][/wildcard], [wildcard][57-100][/wildcard], [wildcard][97-98][/wildcard]])], isReadOnly = false)]"
"<10K","info","vrc-availability-service","writeToMatchAgentAvailabilityTopic, State [ACTIVE], FSM OUTPUT key=[[wildcard]*[/wildcard]], value=[{""tenantId"": ""[wildcard]*[/wildcard]"", ""agentId"": ""[wildcard]*[/wildcard]"", ""offerResolved"": [wildcard]*[/wildcard], ""channels"": [{""channelProviderId"": ""[wildcard]*[/wildcard]"", ""channelId"": ""Chat"", ""derivedAvailabilityFlag"": [wildcard]*[/wildcard], ""derivedAvailabilityStateReason"": ""DEFAULT"", ""isLoggedOut"": [wildcard]*[/wildcard], ""activeEngagementCount"": [wildcard][0-1][/wildcard], ""activeACWCount"": 0, ""triggeringEngagementId"": [wildcard]*[/wildcard]}], ""agentReadyState"": ""[wildcard]*[/wildcard]"", ""id"": ""[wildcard]*[/wildcard]"", ""timestamp"": ""[wildcard]yyyy-MM-ddTHH:mm:ss.SSSXXX[/wildcard]""}]"
"<10K","info","vrc-availability-service","process, taskId==[[wildcard]*[/wildcard]], topic=[agent], processing Event [[wildcard]*[/wildcard]], key=[[wildcard]*[/wildcard]], value=[{""tenantId"": ""[wildcard]*[/wildcard]"", ""agentId"": ""[wildcard]*[/wildcard]"", ""profileId"": ""[wildcard]*[/wildcard]"", ""id"": ""[wildcard]*[/wildcard]"", ""timestamp"": ""[wildcard]yyyy-MM-ddTHH:mm:ss.SSSXXX[/wildcard]""}]"
"<10K","info","msg-webhook","Webhook received Event [wildcard]*[/wildcard] and dialogId [[wildcard]*[/wildcard]] engagementId [[wildcard]*[/wildcard]] accountId [[wildcard]*[/wildcard]] channelId [CHAT] [wildcard]*[/wildcard] [[wildcard]*[/wildcard]] [wildcard]*[/wildcard] [[wildcard]*[/wildcard]] [wildcard]*[/wildcard] [[wildcard]*[/wildcard]]"
"<10K","info","vrc-availability-service","getFsmFromStateStore, checking for [wildcard]*[/wildcard] in the state store"
"<10K","info","vrc-availability-service","putInStateStore, putting in state store [wildcard]*[/wildcard], {""agentId"": ""[wildcard]*[/wildcard]"", ""tenantId"": ""[wildcard]*[/wildcard]"", ""fsmState"": ""ACTIVE"", ""loginProfileId"": null, ""agentLoginState"": null, ""agentReadyState"": null, ""agentAvailabilityState"": null, ""activeMatchIds"": {}, ""rejectedChannels"": {}, ""offeredChannels"": {}, ""channelAvailability"": {}, ""unmonitoredChannels"": {""[wildcard]*[/wildcard]"": {""agentId"": ""[wildcard]*[/wildcard]"", ""channelProviderId"": ""[wildcard]*[/wildcard]"", ""channelId"": ""[wildcard]*[/wildcard]"", ""multiplicity"": 1, ""agentDeviceState"": ""UNKNOWN"", ""channelState"": ""[wildcard]*[/wildcard]""}}, ""sessionState"": ""CONNECTED""}"
"<10K","info","analytics-passthrough-proc","sendMeasureOutput(): MeasureOutput [MeasureOutput(measure={[wildcard]*[/wildcard]=[wildcard]*[/wildcard]}, dimension=[wildcard]*[/wildcard], accountId=[wildcard]*[/wildcard], uniqueEventId=[wildcard]*[/wildcard])] has been sent for measure '[wildcard]*[/wildcard]' with key '[wildcard]*[/wildcard]' to topic 'analytics.dm.[wildcard]*[/wildcard].[wildcard]*[/wildcard]' and headers[RecordHeaders(headers = [RecordHeader(key = unique_id, value = [[wildcard][98-102][/wildcard], [wildcard][52-98][/wildcard], [wildcard][50-53][/wildcard], [wildcard][50-97][/wildcard], [wildcard][50-102][/wildcard], [wildcard][48-55][/wildcard], [wildcard][50-57][/wildcard], [wildcard][55-99][/wildcard], 45, [wildcard][48-99][/wildcard], [wildcard][56-102][/wildcard], [wildcard][54-101][/wildcard], [wildcard][51-99][/wildcard], 45, 52, [wildcard][49-99][/wildcard], [wildcard][50-55][/wildcard], [wildcard][54-99][/wildcard], 45, [wildcard][57-97][/wildcard], [wildcard][52-98][/wildcard], [wildcard][97-102][/wildcard], [wildcard][50-56][/wildcard], 45, [wildcard][50-98][/wildcard], [wildcard][49-55][/wildcard], [wildcard][53-56][/wildcard], [wildcard][52-98][/wildcard], [wildcard][52-102][/wildcard], [wildcard][49-101][/wildcard], [wildcard][48-102][/wildcard], [wildcard][50-102][/wildcard], [wildcard][53-102][/wildcard], [wildcard][51-98][/wildcard], [wildcard][50-101][/wildcard], [wildcard][51-102][/wildcard]]), RecordHeader(key = account_id, value = [[wildcard][68-71][/wildcard], [wildcard][66-74][/wildcard], [wildcard][69-73][/wildcard], [wildcard][66-77][/wildcard], [wildcard][72-76][/wildcard], [wildcard][74-81][/wildcard]]), RecordHeader(key = x-datadog-trace-id, value = [[wildcard][49-52][/wildcard], [wildcard][48-54][/wildcard], [wildcard][52-56][/wildcard], [wildcard][49-57][/wildcard], [wildcard][52-57][/wildcard], [wildcard][51-57][/wildcard], [wildcard][50-53][/wildcard], [wildcard][48-56][/wildcard], [wildcard][51-55][/wildcard], [wildcard][48-54][/wildcard], [wildcard][49-52][/wildcard], [wildcard][50-57][/wildcard], [wildcard][56-57][/wildcard], [wildcard][53-57][/wildcard], [wildcard][54-57][/wildcard], [wildcard][50-51][/wildcard], [wildcard][51-53][/wildcard], [wildcard][51-56][/wildcard], [wildcard][48-53][/wildcard]]), RecordHeader(key = x-datadog-parent-id, value = [[wildcard][51-56][/wildcard], [wildcard][48-57][/wildcard], [wildcard][48-54][/wildcard], [wildcard][51-54][/wildcard], [wildcard][48-54][/wildcard], [wildcard][48-57][/wildcard], [wildcard][51-54][/wildcard], [wildcard][49-53][/wildcard], [wildcard][49-54][/wildcard], [wildcard][49-51][/wildcard], [wildcard][53-54][/wildcard], [wildcard][48-52][/wildcard], [wildcard][53-57][/wildcard], [wildcard][52-57][/wildcard], [wildcard][52-57][/wildcard], [wildcard][48-53][/wildcard], [wildcard][48-56][/wildcard], [wildcard][52-54][/wildcard], [wildcard][51-54][/wildcard]]), RecordHeader(key = x-datadog-sampling-priority, value = [[wildcard][48-49][/wildcard]]), RecordHeader(key = x-datadog-tags, value = [95, 100, 100, 46, 112, 46, 100, 109, 61, 45, 49]), RecordHeader(key = [wildcard]*[/wildcard], value = [[wildcard][50-56][/wildcard], [wildcard][99-102][/wildcard], [wildcard][48-101][/wildcard], [wildcard][49-101][/wildcard], [wildcard][51-101][/wildcard], [wildcard][57-102][/wildcard], [wildcard][50-102][/wildcard], [wildcard][49-99][/wildcard], 45, [wildcard][48-56][/wildcard], [wildcard][55-99][/wildcard], [wildcard][49-102][/wildcard], [wildcard][48-98][/wildcard], 45, 52, [wildcard][51-102][/wildcard], [wildcard][52-101][/wildcard], [wildcard][51-56][/wildcard], 45, [wildcard][56-57][/wildcard], [wildcard][49-98][/wildcard], [wildcard][51-54][/wildcard], [wildcard][54-100][/wildcard], 45, [wildcard][50-55][/wildcard], [wildcard][48-100][/wildcard], [wildcard][48-99][/wildcard], [wildcard][52-101][/wildcard], [wildcard][48-55][/wildcard], [wildcard][57-101][/wildcard], [wildcard][57-102][/wildcard], [wildcard][49-100][/wildcard], [wildcard][50-101][/wildcard], [wildcard][98-101][/wildcard][wildcard]*[/wildcard], [wildcard][51-68][/wildcard], [wildcard][48-69][/wildcard]])], isReadOnly = false)]"
"<10K","info","analytics-admin-service","RealTimeDefaultDashboardHandler.onApplicationEvent() The current version: 0.0.2, matches the version in DB: 0.0.2"
"<10K","info","analytics-database-schema-manager","DatabaseController.executeCall(): sql[call provide_journal_index_details('{""tablename"":""CDR_dialogdetail"",""indexname"":""[wildcard]*[/wildcard]"",""columns"":[""[wildcard]*[/wildcard][wildcard]*[/wildcard]""]}')]"
"<10K","info","outbound-contacts-actors","[wildcard]yyyy-MM-dd HH:mm:ss.SSS[/wildcard] [INFO ] [outbound-contacts-actors-akka.actor.[wildcard]*[/wildcard]] com.avaya.outbound.contact.actors.actor.[wildcard]*[/wildcard] -- [wildcard]*[/wildcard] -- [wildcard]*[/wildcard] [wildcard]*[/wildcard] [wildcard]*[/wildcard] [wildcard]*[/wildcard] [wildcard]*[/wildcard]: [wildcard]*[/wildcard]"
"<10K","info","outbound-contacts-actors","[wildcard]yyyy-MM-dd HH:mm:ss.SSS[/wildcard] [INFO ] [outbound-contacts-actors-akka.actor.default-dispatcher-14-62] com.avaya.outbound.contact.actors.actor.JobCreatorActor -- onStopActor -- Stopping JobCreatorActor for contact list id: null"
"<10K","emergency","ix-virtual-load-tester","[Failure: ([wildcard]*[/wildcard]@perf3axpc.com) [Error in GET for refresh token], [""Failed to refresh token, url: https://eus2-08.integration.ws-nonprod.avayacloud.com/uwf/oauth/refresh, agent:[wildcard]*[/wildcard]@perf3axpc.com, error: timeout of 5000ms exceeded""]]"
"<10K","error","provider-azure","objectAlias: [wildcard]*[/wildcard]"
"<10K","error","provider-azure","objectName: [wildcard]*[/wildcard]"
"<10K","info","policy-kubernetes-addon-prod","Queuing Create/Update of [wildcard]*[/wildcard]"
"<10K","info","ix-virtual-load-tester","[Agent[wildcard]*[/wildcard]@[wildcard]*[/wildcard]has changed state from AFTER_CONTACT_WORK to READY. Target state(s) LOGGED_IN,LOGGED_OUT,NOT_READY,READY,DEACTIVATED. Requested state is READY., agent:[wildcard]*[/wildcard]@[wildcard]*[/wildcard], state READY]"
"<10K","info","analytics-ingestion","LakeLocator.getAppendBlobClient: Building client for app_id be1d135e-f9ba-45be-abb4-06abcc1e21fc and Storage Account analyticsdevaxp at container dev17-event-normalizer-messages and path 2024/3/11/6-analytics-incoming-feed.jsonl"
"<10K","info","analytics-ingestion","LakeLocator.process: there are [wildcard][1-3][/wildcard] messages to process createFile=false at url https://analyticsdevaxp.blob.core.windows.net/dev17-event-normalizer-messages/2024%2F3%2F11%2F6-analytics-incoming-feed.jsonl"
"<10K","info","ix-virtual-load-tester","[GoReady Request sent by agent:[wildcard]*[/wildcard]@[wildcard]*[/wildcard], SDK state: NOT_READY]"
"<10K","info","ix-virtual-load-tester","[ACW completion is CANCELLED because interaction no longer exists, agent:[wildcard]*[/wildcard]@avaya-dev9.ec.avayacloud.com [READY], channel VOICE, interactionType: CALLED engagementId: [wildcard]*[/wildcard], interactionId: [wildcard]*[/wildcard], dialogId [wildcard]*[/wildcard]]"
"<10K","info","ix-virtual-load-tester","[Total Number of transferring interactions = [wildcard][36-63][/wildcard], agent:[wildcard]*[/wildcard]@[wildcard]*[/wildcard][READY], channel WEBCHAT, interactionType: CALLED engagementId: [wildcard]*[/wildcard], interactionId: [wildcard]*[/wildcard], dialogId [wildcard]*[/wildcard]]"
"<10K","info","cbs-adapter","Retrying Again after 30 seconds"
"<10K","info","msg-conversation-manager","Processing Inbound event: [digital-engagement] -> [[wildcard]*[/wildcard]] with dialogId: [[wildcard]*[/wildcard]], engagementId: [[wildcard]*[/wildcard]], correlationId: [[wildcard]*[/wildcard]], agentId: [[wildcard]*[/wildcard]], connectionId: [[wildcard]*[/wildcard]]"
"<10K","info","journey-service","Running query against index 'cj-engagement-tyeiub-*' { ""bool"" : { ""filter"" : [ { ""bool"" : { ""should"" : [ { ""wildcard"" : { ""identifiers.emailAddresses"" : { ""wildcard"" : ""dev10playwrightcustomer2@bddtest.com"", ""case_insensitive"" : true, ""boost"" : 1.0 } } } ], ""adjust_pure_negative"" : true, ""minimum_should_match"" : ""1"", ""boost"" : 1.0 } }, { ""range"" : { ""timestamp"" : { ""from"" : [wildcard][1673417106066-1704953550303][/wildcard], ""to"" : [wildcard][1676159999595-1707695999595][/wildcard], ""include_lower"" : true, ""include_upper"" : true, ""format"" : ""epoch_millis"", ""boost"" : 1.0 } } } ], ""adjust_pure_negative"" : true, ""boost"" : 1.0 } }"
"<10K","warn","journey-service","Resolved [com.avaya.problem.spring.web.advice.general.ResourceNotFoundException: No Journeys found for applied filter(s): Identifiers={emailAddresses=[customer@test.com], phoneNumbers=[1231231231]}]"
"<10K","info","nmi","I0311 [wildcard]HH:mm:ss.SSSSSS[/wildcard] 1 standard.go:73] no clientID or resourceID in request. asc[wildcard]/*[/wildcard] has been matched with azure identity aad-pod-id/ixcc-alpha-pod-mi"
"<10K","info","ix-dsk-connector","Ack Successful, Ack[id: ""[wildcard]*[/wildcard]"" event_type: REQUEST timestamp { seconds: [wildcard][1710137095-1710137178][/wildcard] nanos: [wildcard][28766108-420899256][/wildcard] }], Request[id: ""[wildcard]*[/wildcard]"" timestamp { seconds: [wildcard][1710137094-1710137178][/wildcard] nanos: [wildcard][418585710-981514998][/wildcard] } type: [wildcard]*[/wildcard] client_id: ""[wildcard]*[/wildcard]"" state: COMPLETED token: ""****"" tenant_id: ""[wildcard]*[/wildcard]"" application_version: ""[wildcard]*[/wildcard]"" body { type_url: ""type.googleapis.com[wildcard]/*[/wildcard]"" value: "" [wildcard]*[/wildcard]"" } trace_id: ""00000000000000000000000000000000""]"
"<10K","info","ix-dsk-connector","message received topic desktop-connector-user-to-resource-store, key [wildcard]*[/wildcard], value null"
"<10K","info","analytics-itd-consolidator","MeasureProcessorEventHandlerImpl.sendEvent(): Consolidated event with key '[wildcard]*[/wildcard]' and value '{agent_id=[wildcard]*[/wildcard], [wildcard]*[/wildcard]=[wildcard]*[/wildcard]}' has been sent to topic 'analytics.itd.[wildcard]*[/wildcard].consolidated' with timestamp '1710137700000' and record status: 'OPEN'"
"<10K","info","ix-dsk-connector","Agent [feb5a7e5-9540-4b50-8bc2-e535df568833] has [1] other interaction(s) , interaction(s) : [{[wildcard]*[/wildcard]={""engagementId"": ""[wildcard]*[/wildcard]"", ""connectionId"": ""[wildcard]*[/wildcard]"", ""channelId"": ""Email"", ""sourceType"": null, ""domain"": null, ""modes"": null, ""agentId"": ""feb5a7e5-9540-4b50-8bc2-e535df568833"", ""direction"": ""DIRECTION_INCOMING"", ""isObserving"": false, ""isEmergency"": false}}]"
"<10K","info","ix-dsk-connector","Getting value from ChannelCreated state store - Key [Voice] Value [Optional[{""channelId"": ""Voice"", ""type"": ""VOICE"", ""agentDesktopType"": ""VOICE"", ""timestamp"": ""[wildcard]yyyy-MM-ddTHH:mm:ss.SSSXXX[/wildcard]""}]]"
"<10K","info","auth-proxy","time=""[wildcard]yyyy-MM-ddTHH:mm:ss.SSSSSSSSSXXX[/wildcard]"" level=debug msg=""access permitted to resource"" access=permitted email= expires=[wildcard]*[/wildcard].[wildcard][512002894-933428439][/wildcard]s resource=""/*"" tenant=[wildcard]*[/wildcard]"
"<10K","info","auth-proxy","time=""[wildcard]*[/wildcard]"" level=debug msg=""failed to retrieve tenant information from request"""
"<10K","info","aapps-voice-service","AAPPS.processUc3ParticipantEvents:@Async sessionId: [wildcard]*[/wildcard]"
"<10K","info","vrc-rona-service","process(AgentParticipantAddedEvent), existing dialog for ID [[wildcard]*[/wildcard]]"
"<10K","info","vrc-rona-service","processInputEvent, State [INITIAL], FSM INPUT [AGENT_PARTICIPANT_OFFERED]"
"<10K","info","cc-spring-boot-admin-server","at io.netty.channel.epoll.AbstractEpollChannel$AbstractEpollUnsafe.[wildcard]*[/wildcard](AbstractEpollChannel.java:[wildcard][674-693][/wildcard]) ~[netty-transport-classes-epoll-4.1.92.Final.jar:4.1.92.Final]"
"<10K","info","vrc-rona-service","Creating AfterContactWorkFsm {""consultDialogs"": [], ""mainQueueId"": null, ""acwFsmInstances"": {""[wildcard]*[/wildcard]"": {""agentId"": ""[wildcard]*[/wildcard]"", ""connectionId"": ""[wildcard]*[/wildcard]"", ""queueId"": null, ""engagementType"": ""DIGITAL"", ""fsmState"": ""INITIAL""}}}"
"<10K","error","ix-dsk-request-service","[wildcard]yyyy/MM/dd HH:mm:ss[/wildcard] http2: decoded hpack field header field ""date"" = ""Mon, 11 Mar 2024 [wildcard]HH:mm:ss[/wildcard] GMT"""
"<10K","info","vrc-agent-service","checkAndUpdateSessionState, in [wildcard]*[/wildcard], [wildcard]*[/wildcard]"
"<10K","info","analytics-passthrough-proc","sendMeasureOutput(): Output has been sent for measure '[wildcard]*[/wildcard]' with key '[wildcard]*[/wildcard]' to topic 'analytics.dm.[wildcard]*[/wildcard].[wildcard]*[/wildcard]' and headers[RecordHeaders(headers = [RecordHeader(key = unique_id, value = [52, [wildcard][55-100][/wildcard], [wildcard][49-102][/wildcard], [wildcard][56-99][/wildcard], [wildcard][53-98][/wildcard], [wildcard][51-101][/wildcard], [wildcard][52-54][/wildcard], [wildcard][53-55][/wildcard], 45, [wildcard][98-100][/wildcard], [wildcard][57-98][/wildcard], [wildcard][48-53][/wildcard], [wildcard][50-54][/wildcard], 45, 52, [wildcard][49-51][/wildcard], [wildcard][51-98][/wildcard], [wildcard][51-101][/wildcard], 45, [wildcard][56-98][/wildcard], [wildcard][51-55][/wildcard], [wildcard][53-102][/wildcard], [wildcard][53-54][/wildcard], 45, [wildcard][100-101][/wildcard], 52, [wildcard][99-102][/wildcard], 50, [wildcard][57-100][/wildcard], [wildcard][54-55][/wildcard], [wildcard][50-97][/wildcard], [wildcard][49-102][/wildcard], 48, [wildcard][54-57][/wildcard], [wildcard][55-97][/wildcard], [wildcard][99-100][/wildcard]]), RecordHeader(key = account_id, value = [[wildcard][85-87][/wildcard], [wildcard][69-84][/wildcard], [wildcard][67-81][/wildcard], [wildcard][69-78][/wildcard], [wildcard][65-67][/wildcard], [wildcard][71-83][/wildcard]]), RecordHeader(key = x-datadog-trace-id, value = [[wildcard][49-51][/wildcard], 56, [wildcard][48-53][/wildcard], [wildcard][50-56][/wildcard], [wildcard][50-56][/wildcard], [wildcard][50-56][/wildcard], [wildcard][52-54][/wildcard], [wildcard][49-51][/wildcard], [wildcard][52-56][/wildcard], [wildcard][48-54][/wildcard], 49, [wildcard][49-52][/wildcard], [wildcard][48-50][/wildcard], [wildcard][55-57][/wildcard], [wildcard][48-49][/wildcard], [wildcard][48-52][/wildcard], [wildcard][50-51][/wildcard], [wildcard][52-54][/wildcard]]), RecordHeader(key = x-datadog-parent-id, value = [[wildcard][53-54][/wildcard], [wildcard][49-57][/wildcard], [wildcard][48-52][/wildcard], [wildcard][48-54][/wildcard], [wildcard][54-56][/wildcard], [wildcard][55-57][/wildcard], [wildcard][49-56][/wildcard], 49, 57, [wildcard][50-56][/wildcard], [wildcard][48-52][/wildcard], [wildcard][50-52][/wildcard], [wildcard][50-52][/wildcard], [wildcard][53-57][/wildcard], [wildcard][49-50][/wildcard], [wildcard][48-56][/wildcard], [wildcard][56-57][/wildcard], [wildcard][51-55][/wildcard], [wildcard][52-54][/wildcard]]), RecordHeader(key = x-datadog-sampling-priority, value = [48]), RecordHeader(key = x-datadog-tags, value = [95, 100, 100, 46, 112, 46, 100, 109, 61, 45, 49]), RecordHeader(key = [wildcard]*[/wildcard], value = [[wildcard][48-57][/wildcard], [wildcard][53-100][/wildcard], [wildcard][56-99][/wildcard], [wildcard][53-97][/wildcard], [wildcard][53-54][/wildcard], [wildcard][98-99][/wildcard], [wildcard][51-101][/wildcard], [wildcard][50-97][/wildcard], 45, [wildcard][48-52][/wildcard], [wildcard][53-56][/wildcard], [wildcard][101-102][/wildcard], [wildcard][97-100][/wildcard], 45, 52, [wildcard][51-100][/wildcard], [wildcard][53-57][/wildcard], [wildcard][52-101][/wildcard], 45, 57, [wildcard][49-54][/wildcard], [wildcard][53-101][/wildcard], [wildcard][98-102][/wildcard], 45, [wildcard][54-57][/wildcard], [wildcard][53-100][/wildcard], [wildcard][50-98][/wildcard], [wildcard][55-101][/wildcard], 100, [wildcard][49-101][/wildcard], [wildcard][53-99][/wildcard], [wildcard][57-99][/wildcard], [wildcard][50-55][/wildcard], [wildcard][57-99][/wildcard], [wildcard][57-101][/wildcard], [wildcard][51-55][/wildcard]])], isReadOnly = false)]"
"<10K","info","orchestration-adapter","[EngagementEvent(com.avaya.digital.avro.[wildcard]*[/wildcard])] [wildcard]*[/wildcard] [wildcard]*[/wildcard] ☺ [engagementId:[wildcard]*[/wildcard],accountId:[wildcard]*[/wildcard]]"
"<10K","info","vrc-agent-service","putInStateStore, putting in state store [wildcard]*[/wildcard], {""agentId"": ""[wildcard]*[/wildcard]"", ""tenantId"": ""[wildcard]*[/wildcard]"", ""clientId"": ""[wildcard]*[/wildcard]"", ""profileId"": null, ""notReadyReasonCode"": null, ""notReadyCause"": null, ""notReadyReasonCodeTimestamp"": null, ""logoutReasonCode"": null, ""logoutCause"": null, ""logoutReasonCodeTimestamp"": null, ""loginCorrelationId"": null, ""fsmState"": ""LOGGED_OUT"", ""loginContext"": {}, ""sessionState"": [wildcard]*[/wildcard], ""sessionConnnectTime"": [wildcard]*[/wildcard], ""sessionDisconnectTime"": null, ""channels"": {}}"
"<10K","info","vrc-agent-service","putInStateStore, putting in state store [wildcard]*[/wildcard], {""agentId"": ""[wildcard]*[/wildcard]"", ""tenantId"": ""WTCNCG"", ""clientId"": ""desktop"", ""profileId"": ""[wildcard]*[/wildcard]"", ""notReadyReasonCode"": null, ""notReadyCause"": null, ""notReadyReasonCodeTimestamp"": null, ""logoutReasonCode"": [wildcard]*[/wildcard], ""logoutCause"": [wildcard]*[/wildcard], ""logoutReasonCodeTimestamp"": [wildcard]*[/wildcard], ""loginCorrelationId"": ""[wildcard]*[/wildcard]"", ""fsmState"": ""[wildcard]*[/wildcard]"", ""loginContext"": {""agentId"": ""[wildcard]*[/wildcard]""}, ""sessionState"": ""CONNECTED"", ""sessionConnnectTime"": ""[wildcard]yyyy-MM-ddTHH:mm:ss.SSSXXX[/wildcard]"", ""sessionDisconnectTime"": null, ""channels"": {""[wildcard]*[/wildcard]"": {""agentId"": ""[wildcard]*[/wildcard]"", ""channelProviderId"": ""7d77d1fb-f754-4a28-94ef-aeb64c6a15a8"", ""channelId"": ""Chat"", ""channelState"": ""[wildcard]*[/wildcard]""}}}"
"<10K","info","vrc-agent-service","getConsumerLagInfo: Stream Tasks running in this pod for org.apache.kafka.streams.KafkaStreams@[wildcard]*[/wildcard]are active-tasks [1, 3, 5] and standBy-tasks []."
"<10K","info","analytics-passthrough-proc","sendMeasureOutput(): Output has been sent for measure 'agentId' with key '[wildcard]*[/wildcard]' to topic 'analytics.dm.agentbychannel.itd' and headers[RecordHeaders(headers = [RecordHeader(key = unique_id, value = [[wildcard][51-98][/wildcard], [wildcard][53-54][/wildcard], [wildcard][99-102][/wildcard], [wildcard][98-102][/wildcard], [wildcard][51-52][/wildcard], [wildcard][57-102][/wildcard], [wildcard][49-98][/wildcard], [wildcard][48-97][/wildcard], 45, [wildcard][49-55][/wildcard], [wildcard][54-98][/wildcard], [wildcard][52-100][/wildcard], [wildcard][97-101][/wildcard], 45, 52, [wildcard][50-54][/wildcard], [wildcard][49-56][/wildcard], 48, 45, [wildcard][97-98][/wildcard], [wildcard][54-102][/wildcard], [wildcard][54-56][/wildcard], 98, 45, [wildcard][54-57][/wildcard], [wildcard][50-98][/wildcard], [wildcard][51-99][/wildcard], 100, [wildcard][99-102][/wildcard], [wildcard][49-100][/wildcard], [wildcard][97-102][/wildcard], [wildcard][48-102][/wildcard], [wildcard][49-101][/wildcard], [wildcard][50-99][/wildcard], [wildcard][51-55][/wildcard], [wildcard][98-100][/wildcard]]), RecordHeader(key = account_id, value = [[wildcard][70-78][/wildcard], [wildcard][72-90][/wildcard], [wildcard][85-89][/wildcard], 76, [wildcard][66-82][/wildcard], [wildcard][70-86][/wildcard]]), RecordHeader(key = x-datadog-trace-id, value = [[wildcard][52-56][/wildcard], [wildcard][51-52][/wildcard], [wildcard][54-57][/wildcard], 50, [wildcard][48-57][/wildcard], [wildcard][56-57][/wildcard], [wildcard][48-55][/wildcard], [wildcard][52-53][/wildcard], [wildcard][51-55][/wildcard], [wildcard][53-56][/wildcard], [wildcard][48-52][/wildcard], [wildcard][50-51][/wildcard], [wildcard][49-54][/wildcard], 55, 52, [wildcard][49-57][/wildcard], [wildcard][50-56][/wildcard], [wildcard][55-57][/wildcard], [wildcard][52-55][/wildcard]]), RecordHeader(key = x-datadog-parent-id, value = [51, 50, [wildcard][50-54][/wildcard], [wildcard][48-49][/wildcard], [wildcard][51-56][/wildcard], [wildcard][50-51][/wildcard], [wildcard][51-56][/wildcard], [wildcard][54-55][/wildcard], [wildcard][53-54][/wildcard], [wildcard][49-55][/wildcard], [wildcard][55-56][/wildcard], 57, [wildcard][50-51][/wildcard], [wildcard][48-49][/wildcard], [wildcard][53-57][/wildcard], [wildcard][50-56][/wildcard], [wildcard][49-55][/wildcard], [wildcard][48-51][/wildcard], [wildcard][48-51][/wildcard]]), RecordHeader(key = x-datadog-sampling-priority, value = [48]), RecordHeader(key = x-datadog-tags, value = [95, 100, 100, 46, 112, 46, 100, 109, 61, 45, 49]), RecordHeader(key = agent_id, value = [[wildcard][48-97][/wildcard], [wildcard][54-98][/wildcard], [wildcard][97-98][/wildcard], [wildcard][49-55][/wildcard], [wildcard][52-97][/wildcard], [wildcard][100-102][/wildcard], [wildcard][54-101][/wildcard], [wildcard][49-53][/wildcard], 45, [wildcard][48-57][/wildcard], [wildcard][99-101][/wildcard], [wildcard][51-102][/wildcard], [wildcard][57-97][/wildcard], 45, 52, [wildcard][99-102][/wildcard], [wildcard][100-102][/wildcard], [wildcard][49-55][/wildcard], 45, 57, [wildcard][48-97][/wildcard], [wildcard][97-100][/wildcard], [wildcard][48-100][/wildcard], 45, 54, [wildcard][50-56][/wildcard], [wildcard][54-56][/wildcard], [wildcard][54-55][/wildcard], [wildcard][55-100][/wildcard], [wildcard][48-52][/wildcard], [wildcard][52-101][/wildcard], [wildcard][99-102][/wildcard], [wildcard][53-99][/wildcard], [wildcard][51-53][/wildcard], [wildcard][51-57][/wildcard], [wildcard][51-98][/wildcard]]), RecordHeader(key = channel_id, value = [77, 101, 115, 115, 97, 103, 105, 110, 103])], isReadOnly = false)]"
"<10K","info","outbound-contacts-api","[wildcard]yyyy-MM-dd HH:mm:ss.SSS[/wildcard] [INFO ] [[wildcard]*[/wildcard]] com.avaya.outbound.contact.api.controller.DataSourceController -- _getAllDataSources -- Received request to fetch all data sources for accountId: GZJLCF"
"<10K","info","outbound-contacts-api","[wildcard]yyyy-MM-dd HH:mm:ss.SSS[/wildcard] [INFO ] [[wildcard]*[/wildcard]] com.avaya.outbound.contact.api.controller.[wildcard]*[/wildcard] -- [wildcard]*[/wildcard] -- Account Id: GZJLCF - Received request to [wildcard]*[/wildcard] [wildcard]*[/wildcard] [wildcard]*[/wildcard]"
"<10K","info","outbound-contacts-api","[wildcard]yyyy-MM-dd HH:mm:ss.SSS[/wildcard] [INFO ] [[wildcard]*[/wildcard]] com.avaya.outbound.contact.api.controller.ContactListController -- _createContactList -- Account Id: GZJLCF - Received request to create new contact list with name: [wildcard]*[/wildcard]"
"<10K","info","vrc-matching-engagement","findOffsetsForActiveTasks. Current LagInfo : , partition : match-command-11, endOffset: [wildcard][59111-59115][/wildcard], commitOffset: [wildcard][59111-59115][/wildcard], lag: 0, partition : match-by-engagement-11, endOffset: [wildcard][161797-161805][/wildcard], commitOffset: [wildcard][161797-161805][/wildcard], lag: 0, partition : match-by-engagement-8, endOffset: [wildcard][160516-160537][/wildcard], commitOffset: [wildcard][160516-160537][/wildcard], lag: 0, partition : match-command-8, endOffset: [wildcard][58801-58808][/wildcard], commitOffset: [wildcard][58801-58808][/wildcard], lag: 0, partition : match-command-5, endOffset: [wildcard][58807-58808][/wildcard], commitOffset: [wildcard][58807-58808][/wildcard], lag: 0, partition : match-command-2, endOffset: [wildcard][58963-58967][/wildcard], commitOffset: [wildcard][58963-58967][/wildcard], lag: 0, partition : match-by-engagement-5, endOffset: [wildcard][161092-161095][/wildcard], commitOffset: [wildcard][161092-161095][/wildcard], lag: 0, partition : match-by-engagement-2, endOffset: [wildcard][160934-160945][/wildcard], commitOffset: [wildcard][160934-160945][/wildcard], lag: 0"
"<10K","info","vrc-matching-engagement","createMatchTimerTask, creating a 120 seconds timer for matchId=[[wildcard]*[/wildcard]], id=[[wildcard]*[/wildcard]]"
"<10K","info","elite-adfc","GRPC Out, For User[wildcard]*[/wildcard]@avaya.com, sending user data state: [wildcard]*[/wildcard] reason_code: ""0"" state_reason: ""[wildcard]*[/wildcard]"" capabilities { key: ""canDeactivate"" value: [wildcard]*[/wildcard] } capabilities { key: ""canLogin"" value: [wildcard]*[/wildcard] } capabilities { key: ""canLogout"" value: [wildcard]*[/wildcard] } capabilities { key: ""canSetAfterContactWork"" value: [wildcard]*[/wildcard] } capabilities { key: ""canSetNotReady"" value: [wildcard]*[/wildcard] } capabilities { key: ""canSetReady"" value: false } capabilities { key: ""canSetWorkMode"" value: [wildcard]*[/wildcard] } capabilities { key: ""canSupervisorDeactivate"" value: [wildcard]*[/wildcard] } capabilities { key: ""canSupervisorLogout"" value: false } last_state_change_time { seconds: [wildcard][1710137005-1710137256][/wildcard] nanos: [wildcard][142007323-395439306][/wildcard] } user_handle: ""[wildcard]*[/wildcard]"" tenant_id: ""UEQEAS"" origin: ELITE trace_id: ""00000000000000000000000000000000"" . User Capability updated in ADFC Cache"
"<10K","info","elite-adfc","Stop timer [wildcard]*[/wildcard] for user[wildcard]*[/wildcard]@avaya.com taskId [wildcard]*[/wildcard]: succ? true"
"<10K","info","elite-adfc","GRPC In to process Request for User [wildcard]*[/wildcard] and having type [wildcard]*[/wildcard] id: ""[wildcard]*[/wildcard]"" timestamp { seconds: [wildcard][1710137169-1710137526][/wildcard] nanos: [wildcard][618512759-739100000][/wildcard] } type: [wildcard]*[/wildcard] client_id: ""[wildcard]*[/wildcard]"" token: ""[wildcard]*[/wildcard].[wildcard]*[/wildcard].[wildcard]*[/wildcard]"" tenant_id: ""[wildcard]*[/wildcard]"" application_version: ""[wildcard]*[/wildcard]"" body { type_url: ""type.googleapis.com[wildcard]/*[/wildcard]"" value: "" $[wildcard]*[/wildcard]\022[wildcard]*[/wildcard][wildcard]*[/wildcard]\[wildcard]*[/wildcard]$[wildcard]*[/wildcard]"" } trace_id: ""00000000000000000000000000000000"""
"<10K","info","vrc-matching-engagement","stream-thread [[wildcard]*[/wildcard]] Processed [wildcard][0-4][/wildcard] total records, ran 0 punctuators, and committed [wildcard][0-3][/wildcard] total tasks since the last update"
"<10K","info","elite-adfc","authenticateWithUc3, Request Body message: {""id"":""elite-updated-service"",""passcode"":""elite-updated-passcode"",""type"":""SHARED"",""description"":""""}"
"<10K","info","analytics-event-filter","V2 Summarization event has been sent to topic: 'analytics.mpe.[wildcard]*[/wildcard]' event: [{""measureId"":""[wildcard]*[/wildcard]"",""id"":""[wildcard]*[/wildcard]"",""dimensionName"":""[wildcard]*[/wildcard]"",""events"":[{""eventSignatureId"":[wildcard][1-2][/wildcard],""eventData"":{""version"":""0.0.0.3"",""messageName"":""ChannelStateChanged"",""messageType"":""RESOURCE"",""entity"":""AgentChannel"",""sourceType"":""vrc"",""sourceIP"":""0.0.0.0"",""nativeSourceName"":""vrc"",""sourceVersion"":""0.0.0.3"",""accountId"":""[wildcard]*[/wildcard]"",""timestamp"":""[wildcard][1710137602949-1710137938958][/wildcard]"",""id"":""[wildcard]*[/wildcard]"",""error"":{""code"":""N/A"",""description"":""N/A""},""eventDataMap"":{""queueId"":""unknown"",""agentId"":""[wildcard]*[/wildcard]"",""channelProviderId"":""[wildcard]*[/wildcard]"",""fromState"":""[wildcard]*[/wildcard]"",""fromStateTimestamp"":""[wildcard][0-1710137777178][/wildcard]"",""state"":""[wildcard]*[/wildcard]"",""id"":""[wildcard]*[/wildcard]"",""channelId"":""[wildcard]*[/wildcard]""},""channelId"":""[wildcard]*[/wildcard]"",""agentId"":""[wildcard]*[/wildcard]"",""userStatus"":""Live"",""userName"":""*******"",""ownedGroups"":[""[wildcard]*[/wildcard]""],""groupIdentifiers"":[""[wildcard]*[/wildcard]""],""group"":[{""groupName"":""[wildcard]*[/wildcard]"",""groupStatus"":""Live"",""groupIdentifier"":""[wildcard]*[/wildcard]""}],""accountName"":""[wildcard]*[/wildcard][wildcard]*[/wildcard]"",""agentChannels"":[""[wildcard]*[/wildcard][wildcard]*[/wildcard]"",""unknown""],""UNIQUE_ID"":""[wildcard]*[/wildcard]"",""arrivalTimestamp"":""[wildcard][1710137603059-1710137939070][/wildcard]""}}]}] headers: [RecordHeaders(headers = [RecordHeader(key = unique_id, value = [[wildcard][52-54][/wildcard], [wildcard][48-51][/wildcard], [wildcard][53-98][/wildcard], [wildcard][53-56][/wildcard], [wildcard][99-100][/wildcard], [wildcard]*[/wildcard][wildcard][51-86][/wildcard], [wildcard][100-111][/wildcard], [wildcard][99-105][/wildcard], [wildcard][54-99][/wildcard], [wildcard][101-102][/wildcard]])], isReadOnly = false)]"
"<10K","info","kube-proxy","""Skipping service due to cluster IP"" service=""default[wildcard]/*[/wildcard]"" clusterIP=""None"""
"<10K","info","vrc-availability-service","isEngagementPendingACW, channel: null triggerEngagementId: null isPendingACW: false"
"<10K","info","analytics-itd-consolidator","MeasureProcessorEventHandlerImpl.sendEvent(): Consolidated event with key '[wildcard]*[/wildcard]' and value '{agent_id=[wildcard]*[/wildcard], answered=[wildcard][1-2][/wildcard], offered=[wildcard][1-2][/wildcard], alert_duration=[wildcard][4265-6764][/wildcard], comp_active_duration=[wildcard][57816-97088][/wildcard], completed=2, active_duration=[wildcard][7271-57816][/wildcard], queue_id=[wildcard]*[/wildcard], alerting=0}' has been sent to topic 'analytics.itd.agentbyqueue.consolidated' with timestamp '1710136800000' and record status: 'OPEN'"
"<10K","info","vrc-availability-service","sendAvailabilityStateEventToAgentAvailabilityTopics, checking entry: false"
"<10K","info","vrc-availability-service","Agent [[wildcard]*[/wildcard]] is fully logged out"
"<10K","info","analytics-database-schema-manager","DatabaseController.executeUpdate(): inserting new row for Account[[wildcard]*[/wildcard]] with sql[INSERT INTO INTERVAL_TABLE_COLUMNS (interval_table_id,column_name,column_type,column_size,rollup_function) values (?,?,?,null,?),(?,?,?,null,?),(?,?,?,null,?),(?,?,?,null,?),(?,?,?,null,?),(?,?,?,null,?),(?,?,?,null,?),(?,?,?,null,?),(?,?,?,null,?),(?,?,?,null,?),(?,?,?,null,?),(?,?,?,null,?),(?,?,?,null,?),(?,?,?,null,?),(?,?,?,null,?),(?,?,?,null,?),(?,?,?,null,?),(?,?,?,null,?),(?,?,?,null,?),(?,?,?,null,?),(?,?,?,null,?),(?,?,?,null,?),(?,?,?,null,?),(?,?,?,null,?),(?,?,?,null,?),(?,?,?,null,?),(?,?,?,null,?),(?,?,?,null,?),(?,?,?,null,?),(?,?,?,null,?),(?,?,?,null,?),(?,?,?,null,?),(?,?,?,null,?),(?,?,?,null,?),(?,?,?,null,?),(?,?,?,null,?),(?,?,?,null,?),(?,?,?,null,?),(?,?,?,null,?),(?,?,?,null,?),(?,?,?,null,?),(?,?,?,null,?),(?,?,?,null,?),(?,?,?,null,?),(?,?,?,null,?),(?,?,?,null,?),(?,?,?,null,?),(?,?,?,null,?),(?,?,?,null,?),(?,?,?,null,?),(?,?,?,null,?),(?,?,?,null,?),(?,?,?,null,?),(?,?,?,null,?),(?,?,?,null,?),(?,?,?,null,?),(?,?,?,null,?) ON CONFLICT DO NOTHING;] and values[[1, coaching_duration, duration, sum, 1, hold_duration, duration, sum, 1, consulting_duration, duration, sum, 1, warm_transfer_initiated_to_queue, integer, sum, 1, observed, integer, sum, 1, consult_initiated_to_user, integer, sum, 1, barged, integer, sum, 1, abandoned_before_threshold, integer, sum, 1, abandoned_from_alerting, integer, sum, 1, consult_accepted_from_queue, integer, sum, 1, consult_to_external, integer, sum, 1, coaching, integer, sum, 1, active_duration, duration, sum, 1, offered_to_queue, integer, sum, 1, total_engagements_in_acw, integer, sum, 1, consult_accepted_from_user, integer, sum, 1, wait_time, duration, sum, 1, abandoned_from_queue, integer, sum, 1, completed, integer, sum, 1, not_answered, integer, sum, 1, acw_count, integer, sum, 1, answered_after_threshold, integer, sum, 1, barging, integer, sum, 1, comp_in_focus_active_duration, duration, sum, 1, warm_transfer_accepted_from_queue, integer, sum, 1, alert_duration, duration, sum, 1, transfer_to_queue_cancelled, integer, sum, 1, coached, integer, sum, 1, transfer_to_queue_failed, integer, sum, 1, barging_duration, duration, sum, 1, comp_active_duration, duration, sum, 1, consulted_duration, duration, sum, 1, consults_accepted_from_user, integer, sum, 1, conference_to_external, integer, sum, 1, offered, integer, sum, 1, comp_in_focus_acw_count, integer, sum, 1, coached_duration, duration, sum, 1, observing_duration, duration, sum, 1, conference_accepted_from_queue, integer, sum, 1, consult_initiated_to_queue, integer, sum, 1, conference_accepted_from_user, integer, sum, 1, warm_transfer_accepted_from_user, integer, sum, 1, transfer_initiated_to_queue, integer, sum, 1, answered, integer, sum, 1, warm_transfer_initiated_to_user, integer, sum, 1, warm_transfer_to_external, integer, sum, 1, abandon_time_duration, duration, sum, 1, transfer_accepted_from_queue, integer, sum, 1, barged_duration, duration, sum, 1, comp_in_focus_acw_duration, duration, sum, 1, conference_initiated_to_user, integer, sum, 1, consulting_external_duration, duration, sum, 1, acw_duration, duration, sum, 1, observed_duration, duration, sum, 1, comp_in_focus_active_count, integer, sum, 1, conference_initiated_to_queue, integer, sum, 1, observing, integer, sum]]"
"<10K","warn","elite-adfc","UC3 Req, Error while acquiring UC3 access token, status code=401, response body={""type"":""https://www.avaya.com/ecloud/uc3/problem/problem-with-message"",""status"":401,""title"":""Unauthorized"",""instance"":""/api/v2/authenticate"",""properties"":{""path"":""/api/v2/authenticate"",""message"":""error.http.401""},""message"":""error.http.401"",""path"":""/api/v2/authenticate"",""path"":""/api/v2/authenticate"",""message"":""error.http.401""}"
"<10K","info","ed-workflow-manager","Stuck instance count is 0[instanceId:null,deployId:null,engagementId:null]"
"<10K","info","analytics-database-schema-manager","DatabaseController.executeUpdate(): inserting new row for Account[[wildcard]*[/wildcard]] with sql[INSERT INTO JOURNAL_TABLE_COLUMNS (journal_table_id,column_name,column_type,column_size,primary_key_column) values (?,?,?,null,?),(?,?,?,?,?) ON CONFLICT DO NOTHING;] and values[[2, agent_state_timestamp, timestamp, true, 2, agent_state, varchar, 200, false]]"
"<10K","info","vrc-metrics-service","methodName:processAgentAvailabilityEvent - Agent [wildcard]*[/wildcard] has no active channels, removing from agent state store"
"<10K","info","vrc-metrics-service","methodName:updateQueueMetrics - Updated queueAgentMetricsCache; serviceKey=[wildcard]*[/wildcard].[wildcard]*[/wildcard]|channel.chat; metrics={""accountId"": ""[wildcard]*[/wildcard]"", ""queueId"": ""[wildcard]*[/wildcard]"", ""channelId"": ""chat"", ""attributeKey"": null, ""agentStaffedCount"": ""1"", ""agentBusyCount"": ""[wildcard][0-1][/wildcard]"", ""agentReadyCount"": ""[wildcard][0-1][/wildcard]"", ""agentInAuxCount"": ""0"", ""queueOccupancy"": ""[wildcard][0-100][/wildcard]"", ""instanceId"": ""[wildcard]*[/wildcard]"", ""id"": ""[wildcard]*[/wildcard]"", ""timestamp"": [wildcard][1710137057768-1710137319142][/wildcard]}; readyDelta=[wildcard][-1-1][/wildcard]; busyDelta=[wildcard][0-1][/wildcard]; staffedDelta=[wildcard][0-1][/wildcard]; cacheSize=[wildcard][201-256][/wildcard];"
"<10K","info","uwf-content-service","127.0.0.1 - - [[wildcard]dd/MMM/yyyy:HH:mm:ss xx[/wildcard]] ""GET [wildcard]/services/ApplicationCenter/*/*[/wildcard] HTTP/1.1"" 200 [wildcard][333-3737][/wildcard] ""https://ci.ixcc-sandbox.avayacloud.com/services/ApplicationCenter"" ""Mozilla/5.0 (X11; Linux x86_64; rv:122.0) Gecko/20100101 Firefox/122.0"" ""[wildcard]165.225.104.XXX[/wildcard],[wildcard]10.180.XXX.XXX[/wildcard], 10.180.9.15, [wildcard]165.225.104.XXX[/wildcard],[wildcard]10.180.XXX.XXX[/wildcard]"""
"<10K","info","analytics-database-schema-manager","DatabaseController.executeUpdateWithReturn(): executing sql[INSERT INTO [wildcard]*[/wildcard] ([wildcard]*[/wildcard], [wildcard]*[/wildcard], active) values (?, 'SchemaManager', true);] with name[[wildcard]*[/wildcard]] for account[[wildcard]*[/wildcard]]"
"<10K","info","vrc-metrics-service","findOffsetsForActiveTasks. Current LagInfo : , partition : agent-availability-5, endOffset: [wildcard][55249-750322][/wildcard], commitOffset: [wildcard][55249-750322][/wildcard], lag: 0, partition : agent-availability-2, endOffset: [wildcard][54000-723341][/wildcard], commitOffset: [wildcard][54000-723341][/wildcard], lag: 0"
"<10K","info","vrc-metrics-service","methodName:updateMetrics - Updated rootAverageSpeedAnswer [wildcard][0.99999994-1.00000020][/wildcard], old ASA [wildcard][0.99999994-1.00000020][/wildcard]"
"<10K","info","vrc-metrics-service","methodName:processAgentAvailabilityEvent - Received agentLevelAuxState: [wildcard]*[/wildcard]"
"<10K","info","analytics-dsi","processEvent(): event[{""version"":""0.0.0.3"",""messageName"":""ChannelStateChanged"",""messageType"":""RESOURCE"",""entity"":""AgentChannel"",""sourceType"":""vrc"",""sourceIP"":""0.0.0.0"",""nativeSourceName"":""vrc"",""sourceVersion"":""0.0.0.3"",""accountId"":""[wildcard]*[/wildcard]"",""timestamp"":""[wildcard][1710137303496-1710137689279][/wildcard]"",""id"":""[wildcard]*[/wildcard]"",""error"":{""code"":""[wildcard]*[/wildcard]"",""description"":""[wildcard]*[/wildcard]""},""eventDataMap"":{""queueId"":""unknown"",""agentId"":""[wildcard]*[/wildcard]"",""channelProviderId"":""7d77d1fb-f754-4a28-94ef-aeb64c6a15a8"",""fromState"":""[wildcard]*[/wildcard]"",""fromStateTimestamp"":""[wildcard][0-1710137256118][/wildcard]"",""state"":""[wildcard]*[/wildcard]"",""id"":""[wildcard]*[/wildcard]"",""channelId"":""Chat""},""channelId"":""Chat""}] - accountId[[wildcard]*[/wildcard]] rootFields[messageName, sourceVersion, nativeSourceName, error, version, eventDataMap, accountId, messageType, sourceIP, sourceType, id, entity, channelId, timestamp]"
"<10K","info","analytics-database-schema-manager","MeasureProcessor.handleMeasureDefinition: column name[[wildcard]*[/wildcard]] type[varchar] size[200] rollup[N/A]"
"<10K","info","analytics-database-schema-manager","DatabaseController.pushDelta(): account[[wildcard]*[/wildcard]] current table[JRNL_agentstatetrace] category[JRNL] active[true]"
"<10K","info","analytics-database-schema-manager","DatabaseController.handleAccountRecord: account[[wildcard]*[/wildcard]]"
"<10K","error","msg-sunshine-connector","Error 401 : ""<!doctype html><html lang=""en""><head><title>HTTP Status 401 – Unauthorized</title><style type=""text/css"">body {font-family:Tahoma,Arial,sans-serif;} h1, h2, h3, b {color:white;background-color:#525D76;} h1 {font-size:22px;} h2 {font-size:16px;} h3 {font-size:14px;} p {font-size:12px;} a {color:black;} .line {height:1px;background-color:#525D76;border:none;}</style></head><body><h1>HTTP Status 401 – Unauthorized</h1></body></html>"" in getting element 9b9b5753-f430-4257-ae0a-f4314d0a5163 for tenant IUDZFV"
"<10K","warn","journey-service","Resolved [com.avaya.problem.spring.web.advice.general.ResourceNotFoundException: No Journeys found for applied filter(s): Identifiers={phoneNumbers=[148.147.160.224]}]"
"<10K","warn","vrc-availability-service","[dd.trace 2024-03-11 06:08:55:974 0000] [dd-remote-config] WARN datadog.remoteconfig.ConfigurationPoller - Failed to poll remote configuration from http://10.206.10.0:8126/v0.7/config java.net.ConnectException: Failed to connect to /10.206.10.0:8126 (Will not log errors for 5 minutes)"
"<10K","info","outbound-contacts-actors","2024-03-11 06:13:55.213 [INFO ] [outbound-contacts-actors-akka.actor.default-dispatcher-13-61] com.avaya.outbound.contact.actors.actor.ImportActor -- closeResources -- Job Id: 44859615-1229-497e-bdd2-efcfdf8db14c - Closing file reader."
"<10K","error","provider-azure","array:"